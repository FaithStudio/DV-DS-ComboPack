// Practice Target
actor PracticeTarget 21333
{
    //$Angled
    //$Color 6
    //$Category DV-DS Monsters
    Radius 16
    Height 48
    Health 10000000
    Mass 275000000
    PainChance 255
    
    Scale 0.4325 // 0.25
    
    +ISMONSTER
    +SHOOTABLE
    +NOBLOOD
    +FORCEYBILLBOARD
    +NEVERTARGET
    -SOLID
    -COUNTKILL
    
    States
    {
    Spawn:
        PRDU A 0 NoDelay Bright ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    See:
        PRDU A 35 HealThing(10000000)
        Loop
    Death:
        TNT1 A -1 A_SpawnItemEx("PracticeTarget", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

actor PracticeTarget2 21334
{
    //$Angled
    //$Color 6
    //$Category DV-DS Monsters
    Radius 16
    Height 48
    Health 10000000
    Mass 275000000
    PainChance 255
    
    Scale 0.4325 // 0.25
    
    +ISMONSTER
    +SHOOTABLE
    +NOBLOOD
    +FORCEYBILLBOARD
    +NEVERTARGET
    +SOLID
    -COUNTKILL
    
    States
    {
    Spawn:
        PRDU A 0 NoDelay Bright ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    See:
        PRDU A 35 HealThing(10000000)
        Loop
    Death:
        TNT1 A -1 A_SpawnItemEx("PracticeTarget2", 0, 0, 0, 0, 0, 0, 0, SXF_NOCHECKPOSITION)
        Stop
    }
}

//********************
//**Revised Monsters**
//********************

actor DSScriptedMarine : ScriptedMarine replaces ScriptedMarine
{
 dropitem DoomSpellMana 24
 dropitem DoomSpellMana2 24
 dropitem DoomSpellMana3 24
 dropitem Chainsaw 2
 dropitem Pistol 2
 dropitem Shotgun 2
 dropitem SuperShotgun 2
 dropitem Chaingun 2
 dropitem RocketLauncher 2
 dropitem PlasmaRifle 2
 dropitem BFG9000 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor
}

actor DSZombieman : Zombieman 26501
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Zombieman Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 var int user_shotsfired; var int user_shotsfiredmax;
 var float user_shotaccuracy; var float user_shotaccuracy1; var float user_shotaccuracy2;
 var float user_shotzaccuracy; var float user_shotzaccuracy1; var float user_shotzaccuracy2;

 dropitem DoomSpellMana 16
 dropitem Clip
 dropitem Clip 4
 dropitem Clip 4
 dropitem ClipBox 2 50
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem Pistol 2
 dropitem FloraRandomArmor

 DamageFactor "Crush", 8
 DamageFactor "Fire", 1.333 // Zombies = +33% Fire Damage
 Painchance "Fire", 255 // Zombies = +33% Pain Chance [maxed out in this case]
 DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
 Painchance "Holy", 255 // Zombies = +33% Pain Chance [maxed out in this case]

 Painchance 200
 Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
 Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "GravityHP", 255
 Painchance "GravityMP", 255
 Painchance "GravityHPMP", 255

 +DOHARMSPECIES
 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See
  Spawn:
    POSS A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    POSS AB 10 A_Look
    goto Spawn+1
  See:
    POSS A 0
	{ 
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0);
	 A_SetUserVar("user_shotsfired",0);	 
	}
    POSS AABBCCDD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    POSS E 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 if (random(1,8) == 1) 
	 { 
	  A_SetUserVar("user_shotsfiredmax",2); 
	  if (GetCVar("dvds_monsterlevelbehavior") > 0) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(user_monsterlevel/20)); }
	 } 
	 else 
	 {
	  A_SetUserVar("user_shotsfiredmax",1); 
	  if (GetCVar("dvds_monsterlevelbehavior") > 0) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(user_monsterlevel/40)); }
	 }

	 A_SetUserVar("user_shotsfired",0);	 
	 A_FaceTarget;
	 A_SetUserVar("user_shotaccuracy",22.5);
	 A_SetUserVar("user_shotzaccuracy",0.0);
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*6)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*6)/9)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*7)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*7)/9)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*8)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*8)/9)); }
	 A_SetUserVar("user_shotaccuracy1",user_shotaccuracy/-2); A_SetUserVar("user_shotaccuracy2",user_shotaccuracy/2);
	 A_SetUserVar("user_shotzaccuracy1",user_shotzaccuracy/-2); A_SetUserVar("user_shotzaccuracy2",user_shotzaccuracy/2);
	}
  Attack:
    POSS F 8 bright
	{ 
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }

      A_PlaySound ("grunt/attack");
	  A_FaceTarget;
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  
	  if (GetCVar("dvds_monsterbulletstracers") == 0)
	  {
 	   if(user_canusecrisisatk == 1)
	   {
        A_PlaySound("crisisattack",6);
        A_PlaySound("crisisattack2",7);
	    A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, ((random(1,5) * 3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, CBAF_NORANDOM);
	   }
	   else
	   {
	    A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(1,5) * 3, "BulletPuff", 0, CBAF_NORANDOM);
	   }
	  }
	  else
	  {
	   if(user_canusecrisisatk == 1)
	   {
        A_PlaySound("crisisattack",6);
        A_PlaySound("crisisattack2",7);
        A_CustomMissile("ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	   }
	   else
	   {
        A_CustomMissile("ZombieBulletTracer", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	   }
	  }
	}
    POSS E 8 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }

	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
	 A_FaceTarget;
	}
    TNT1 A 0 A_MonsterRefire(32,"See")
    TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax,"Decide1")
	loop
  Decide1:
    TNT1 A 0 A_Jump(240,"See")
    TNT1 A 0 
	{
	 if (random(1,8) == 1) 
	 { 
	  A_SetUserVar("user_shotsfiredmax",2); 
	  if (GetCVar("dvds_monsterlevelbehavior") > 0) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(user_monsterlevel/20)); }
	 } 
	 else 
	 {
	  A_SetUserVar("user_shotsfiredmax",1); 
	  if (GetCVar("dvds_monsterlevelbehavior") > 0) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(user_monsterlevel/40)); }
	 }

	 A_SetUserVar("user_shotsfired",0);	 
	 A_FaceTarget;
	}
    goto Attack

  Pain:
    POSS G 3
    POSS G 3 A_Pain
    Goto See
  Pain.Fist:
    POSS G 3
    POSS G 3 A_Pain
    POSS GG 3
    Goto See
  Pain.Kick:
    POSS G 3
    POSS G 3 A_Pain
    POSS GGGG 3
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    POSS H 5
    POSS I 5 A_Scream
    POSS J 5 A_NoBlocking
    POSS K 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    POSS L -1
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    POSS M 5
    POSS N 5 A_XScream
    POSS O 5 A_NoBlocking
    POSS PQRST 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    POSS U -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    POSS G 5 A_GenericFreezeDeath
    POSS G 1 A_FreezeDeathChunks
    wait
  Raise:
    POSS K 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    POSS JIH 5
    goto See
 }
}

actor PlasmaGuy 3205
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Zombieman Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 var int user_shotsfired; var int user_shotsfiredmax;
 dropitem DoomSpellMana 32
 dropitem DoomSpellMana 8
 DropItem PlasmaRifle
 DropItem PlasmaRifle 2
 DropItem PlasmaRifle 2
 DropItem Cell 4 40
 DropItem Cell 4 40
 DropItem CellPack 2 100
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor

 Health 50
 Radius 20
 Height 56
 Speed 8
 MONSTER 
 +FLOORCLIP
 SeeSound "grunt/sight"
 AttackSound "grunt/attack"
 PainSound "grunt/pain"
 DeathSound "grunt/death"
 ActiveSound "grunt/active"
 Obituary "%o got burned by a plasma-rifle zombie."
 MissileType PlasmaBall

 DamageFactor "Crush", 8
 DamageFactor "Fire", 1.333 // Zombies = +33% Fire Damage
 Painchance "Fire", 166 // Zombies = +33% Pain Chance [maxed out in this case]
 DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
 Painchance "Holy", 166 // Zombies = +33% Pain Chance

 Painchance 100
 Painchance "Fist", 150 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "Kick", 250 // Kick attacks have a +150% chance of stunning an enemy
 Painchance "Gauntlets", 150 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "GravityHP", 255
 Painchance "GravityMP", 255
 Painchance "GravityHPMP", 255
 +AVOIDMELEE
 +DOHARMSPECIES

 States
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    ZMAY A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    ZMAY AB 10 A_Look
    goto Spawn+1
  See:
    ZMAY A 0
	{
	 A_SetUserVar("user_shotsfired",0);
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0);
	}
    ZMAY AABBCCDD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    ZMAY E 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }

	 A_SetUserVar("user_shotsfiredmax",random(5,10));
	 if (GetCVar("dvds_monsterlevelbehavior") > 0) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+random((user_monsterlevel/20),(user_monsterlevel/10))); }

	 A_SetUserVar("user_shotsfired",0);	 
	 A_FaceTarget;
	}
  Attack:
    ZMAY F 3 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("PlasmaBallCrisis");
	 }
	 else
	 {
      A_CustomMissile("PlasmaBall");
	 }
	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
	 A_FaceTarget;
	}
    TNT1 A 0 A_MonsterRefire(32,"See")
    TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax,"Decide1")
	loop
  Decide1:
    TNT1 A 0 A_Jump(240,"See")
    TNT1 A 0 
	{
	 A_SetUserVar("user_shotsfiredmax",random(5,10));
	 if (GetCVar("dvds_monsterlevelbehavior") > 0) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+random((user_monsterlevel/20),(user_monsterlevel/10))); }

	 A_SetUserVar("user_shotsfired",0);	 
	 A_FaceTarget;
	}
    goto Attack
	
  Pain:
    ZMAY G 3
    ZMAY G 3 A_Pain
    Goto See
  Pain.Fist:
    ZMAY G 3
    ZMAY G 3 A_Pain
    ZMAY GG 3
    Goto See
  Pain.Kick:
    ZMAY G 3
    ZMAY G 3 A_Pain
    ZMAY GGGG 3
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    ZMAY H 5
    ZMAY I 5 A_Scream
    ZMAY J 5 A_Fall
    ZMAY K 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    ZMAY L -1
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    ZMAY O 5
    ZMAY P 5 A_XScream
    ZMAY Q 5 A_Fall
    ZMAY RSTU 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    ZMAY V -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    ZMAY G 5 A_GenericFreezeDeath
    ZMAY G 1 A_FreezeDeathChunks
    wait
  Raise:
    ZMAY K 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    ZMAY JIH 5
    Goto See
 }
}

actor RocketLauncherGuy : Zombieman 3207
{ 
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Zombieman Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  dropitem DoomSpellMana 32
  dropitem DoomSpellMana 8
  dropitem RocketLauncher
  dropitem RocketLauncher 2
  dropitem RocketLauncher 2
  dropItem RocketAmmo 4 1
  dropItem RocketAmmo 4 1
  dropItem RocketBox 2 5
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  health 80
  obituary "%o was 'sploded by a rocket-launcher guy."
  radius 20
  height 56
  mass 100
  speed 8
  seesound "shotguy/sight"
  attacksound "shotguy/attack"
  painsound "shotguy/pain"
  deathsound "shotguy/death"
  activesound "shotguy/active"
  MONSTER
  +FLOORCLIP
  +AVOIDMELEE
  +DOHARMSPECIES

  DamageFactor "Crush", 8
  DamageFactor "Fire", 1.333 // Zombies = +33% Fire Damage
  Painchance "Fire", 226 // Zombies = +33% Pain Chance [maxed out in this case]
  DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
  Painchance "Holy", 226 // Zombies = +33% Pain Chance

  Painchance 170
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255


 States 
 { 
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    MPO2 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    MPO2 AB 10 A_Look
    goto Spawn+1
  See:
    MPO2 A 0
	{
	 A_SetUserVar("user_shotsfired",0);
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0);
	}
    MPO2 AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    MPO2 E 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

     if (random(1,8) == 8) 
	 { 
	  A_SetUserVar("user_shotsfiredmax",2); 
	  if (GetCVar("dvds_monsterlevelbehavior") > 0) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(user_monsterlevel/25)); }
	 } 
	 else 
	 {
	  A_SetUserVar("user_shotsfiredmax",1); 
	  if (GetCVar("dvds_monsterlevelbehavior") > 0) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(user_monsterlevel/50)); }
	 }
	 A_SetUserVar("user_shotsfired",0);
	 A_FaceTarget;
	}
  Attack:
    MPO2 F 10 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("RocketCrisis");
	 }
	 else
	 {
      A_CustomMissile("RocketMonster");
	 }
	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
	 A_FaceTarget;
	}
    MPO2 E 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_FaceTarget;
	}
    TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax,"Decide1")
    loop
  Decide1:
    TNT1 A 0 A_Jump(240,"See")
    TNT1 A 0 
	{
     if (random(1,8) == 8) 
	 { 
	  A_SetUserVar("user_shotsfiredmax",2); 
	  if (GetCVar("dvds_monsterlevelbehavior") > 0) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(user_monsterlevel/25)); }
	 } 
	 else 
	 {
	  A_SetUserVar("user_shotsfiredmax",1); 
	  if (GetCVar("dvds_monsterlevelbehavior") > 0) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(user_monsterlevel/50)); }
	 }
	 A_SetUserVar("user_shotsfired",0);
	 A_FaceTarget;
	}
    goto Attack

  Pain:
    MPO2 G 3 
    MPO2 G 3 A_Pain 
    Goto See
  Pain.Fist:
    MPO2 G 3 
    MPO2 G 3 A_Pain
    MPO2 GG 3 
    Goto See
  Pain.Kick:
    MPO2 G 3 
    MPO2 G 3 A_Pain
    MPO2 GGGG 3 
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    MPO2 H 5 
    MPO2 I 5 A_Scream 
    MPO2 J 5 
    MPO2 K 5 A_Fall 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    MPO2 L -1 
    Stop 
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    MPO2 M 5 
    MPO2 N 5 A_XScream 
    MPO2 O 5 
    MPO2 P 5 A_Fall 
    MPO2 QRST 5 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    MPO2 U -1    
    Stop 
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    MPO2 G 5 A_GenericFreezeDeath
    MPO2 G 1 A_FreezeDeathChunks
    wait
  Raise: 
    MPO2 M 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    MPO2 JKJI 5
    Goto See 
 } 
}

Actor RepeaterZombie 26505
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Zombieman Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.

  dropitem DoomSpellMana 16
  DropItem RepeaterChecker 256
  DropItem RepeaterChecker 4
  DropItem RepeaterChecker 4
  DropItem RepeaterChecker 4
  dropitem CellPack 10 20
  dropitem CellPack 10 20
  dropitem CellPack 10 20
  dropitem CellPack 2 100
  dropitem CellPack 2 100
  dropitem CellPack 2 100
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  Health 100
  Radius 20
  Height 56
  Speed 8
  Monster
  SeeSound "Grunt/Sight"
  PainSound "Grunt/Pain"
  DeathSound "Grunt/Death"
  ActiveSound "Grunt/Active"
  Obituary "%o was vapourized by a Repeater Zombie" 
  Decal MummyScorch

  DamageFactor "Crush", 8
  DamageFactor "Fire", 1.333 // Zombies = +33% Fire Damage
  Painchance "Fire", 128 // Zombies = +33% Pain Chance
  DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
  Painchance "Holy", 128 // Zombies = +33% Pain Chance

  PainChance 96
  Painchance "Fist", 144 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 240 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 144 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255

  +AVOIDMELEE
  +DOHARMSPECIES
  +FLOORCLIP
  States 
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    RPZM A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    RPZM A 0 A_JumpIfInventory("RepeaterZombieFiring", 1, "SpinDown")
    RPZM AAAAAAAAAABBBBBBBBBB 1 A_Look 
    goto Spawn+1
  See:
    RPZM A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    RPZM A 0 A_JumpIfInventory("RepeaterZombieFiring", 1, "SpinDown")
    RPZM AABBCCDD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    Loop 

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    TNT1 A 0 A_GiveInventory("RepeaterZombieFiring", 1)
    TNT1 A 0 A_PlaySoundEx("Weapons/RepeaterSpinUp", "SoundSlot7", 0)
    RPZM EEFFEFEF 4 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 A_FaceTarget;
	}
  AttackHold:
    RPZM G 2 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }

     A_GiveInventory("RepeaterZombieHeat", 1);
     A_FaceTarget;
     A_PlaySound("Weapons/RepeaterFire");
	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomBulletAttack(20, 16, 2, ((random(1,3)*6) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "RepeaterPuffCrisis", 0, 1);
	  }
	  else
	  {
	   A_CustomBulletAttack(20, 16, 2, random(1,3)*6, "RepeaterPuff", 0, 1);
	  }
	 }
	 else
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomMissile("ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH, frandom(-8.0,8.0));
	   A_CustomMissile("ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH, frandom(-8.0,8.0));
	  }
	  else
	  {
       A_CustomMissile("ZombieRepeaterTracer", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH, frandom(-8.0,8.0));
       A_CustomMissile("ZombieRepeaterTracer", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH, frandom(-8.0,8.0));
	  }
     }
    }
    RPZM G 0 A_JumpIfInventory("RepeaterZombieHeat", 100, "Overload")
    RPZM H 2 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }

     A_GiveInventory("RepeaterZombieHeat", 1);
     A_FaceTarget;
     A_PlaySound("Weapons/RepeaterFire");
	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomBulletAttack(20, 16, 2, ((random(1,3)*6) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "RepeaterPuffCrisis", 0, 1);
	  }
	  else
	  {
	   A_CustomBulletAttack(20, 16, 2, random(1,3)*6, "RepeaterPuff", 0, 1);
	  }
	 }
	 else
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomMissile("ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH, frandom(-8.0,8.0));
	   A_CustomMissile("ZombieRepeaterTracerCrisis", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH, frandom(-8.0,8.0));
	  }
	  else
	  {
       A_CustomMissile("ZombieRepeaterTracer", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH, frandom(-8.0,8.0));
       A_CustomMissile("ZombieRepeaterTracer", 32, 12, frandom(-10.0,10.0), CMF_OFFSETPITCH, frandom(-8.0,8.0));
	  }
     }
    }
    RPZM E 2 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
	 A_FaceTarget;
	}
    RPZM E 0 A_Jump(220, 2)
    RPZM E 0 A_SpidRefire
    RPZM E 0 A_JumpIfInventory("RepeaterZombieHeat", 100, "Overload")
    loop

  SpinDown:
    RPZM E 0 A_PlaySoundEx("Weapons/RepeaterSpinDown", "SoundSlot7", 0)
    RPZM E 0 A_TakeInventory("RepeaterZombieFiring", 1)
    RPZM E 0 A_TakeInventory("RepeaterZombieHeat", 100)
    RPZM EFEFEEFF 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 A_FaceTarget;
	}
    Goto See
  Overload:
    RPZM E 0 A_PlaySoundEx("Weapons/RepeaterSpinDown", "SoundSlot7", 0)
    RPZM E 0 A_PlayWeaponSound("RepeaterZombie/Steam")
    RPZM E 0 A_TakeInventory("RepeaterZombieFiring", 1)
    RPZM E 0 A_TakeInventory("RepeaterZombieHeat", 100)
    RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128)
    RPZM EEEEEEFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128)
    RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128)
    RPZM EEEEEEFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128)
    RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128)
    RPZM EEEEEEFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128)
    RPZM EEEEEFFFFFF 1 A_SpawnItemEx("RepeaterZombieSteam", -5, Random(12, 14), Random(31, 33), 4, 0, (0.1)*Random(-5, 5), Random(85, 90), 128)
    Goto See

  Pain:
    RPZM I 0
	{
	 A_StopSoundEx("SoundSlot7");
     if (CountInv("RepeaterZombieFiring") > 0) { A_PlaySoundEx("Weapons/RepeaterSpinDown", "SoundSlot7", 0); }
     A_TakeInventory("RepeaterZombieFiring", 1);
     A_TakeInventory("RepeaterZombieHeat", 100);
    }
    RPZM I 3 
    RPZM I 3 A_Pain 
    Goto See 
  Pain.Fist:
    RPZM I 0
	{
	 A_StopSoundEx("SoundSlot7");
     if (CountInv("RepeaterZombieFiring") > 0) { A_PlaySoundEx("Weapons/RepeaterSpinDown", "SoundSlot7", 0); }
     A_TakeInventory("RepeaterZombieFiring", 1);
     A_TakeInventory("RepeaterZombieHeat", 100);
    }
    RPZM I 3 
    RPZM I 3 A_Pain 
    RPZM II 3 
    Goto See 
  Pain.Kick:
    RPZM I 0
	{
	 A_StopSoundEx("SoundSlot7");
     if (CountInv("RepeaterZombieFiring") > 0) { A_PlaySoundEx("Weapons/RepeaterSpinDown", "SoundSlot7", 0); }
     A_TakeInventory("RepeaterZombieFiring", 1);
     A_TakeInventory("RepeaterZombieHeat", 100);
    }
    RPZM I 3 
    RPZM I 3 A_Pain 
    RPZM IIII 3 
    Goto See 

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    RPZM I 4 A_StopSoundEx("SoundSlot7")
    RPZM J 5
    RPZM K 5 A_Scream 
    RPZM L 5 A_Fall 
    RPZM M 5 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    RPZM N -1 
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    RPZM O 5 A_StopSoundEx("SoundSlot7")
    RPZM P 5 A_XScream
    RPZM Q 5
    RPZM R 5 A_Fall
    RPZM STUV 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    RPZM W -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    RPZM I 5 A_GenericFreezeDeath
    RPZM I 1 A_FreezeDeathChunks
    wait
  Raise: 
    RPZM N 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    RPZM MLKJI 5
    Goto See 
  } 
}

actor KarasawaGuy 26507
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Zombieman Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotangle;
  
  dropitem DoomSpellMana 16
  DropItem KarasawaChecker
  dropitem KarasawaChecker 4
  dropitem KarasawaChecker 4
  dropitem KarasawaChecker 4
  dropitem BlurSphere2 2
  dropitem CellPack 10 20
  dropitem CellPack 10 20
  dropitem CellPack 10 20
  dropitem CellPack 2 100
  dropitem CellPack 2 100
  dropitem CellPack 2 100
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  Health 150
  Radius 20
  Height 56
  Speed 8
  MONSTER 
  +FLOORCLIP
  +AVOIDMELEE
  SeeSound "grunt/sight"
  AttackSound "Weapons/KarasawaFire"
  PainSound "grunt/pain"
  DeathSound "grunt/death"
  ActiveSound "grunt/active"
  Obituary "%o got ripped apart by a Karasawa zombie."

  DamageFactor "Crush", 8
  DamageFactor "Fire", 1.333 // Zombies = +33% Fire Damage
  Painchance "Fire", 93 // Zombies = +33% Pain Chance
  DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
  Painchance "Holy", 93 // Zombies = +33% Pain Chance [maxed out in this case]

  PainChance 70
  Painchance "Fist", 105 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 175 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 105 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255
  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    KSWZ A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    KSWZ AB 10 A_Look
    goto Spawn+1
  See:
    KSWZ A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    KSWZ AABBCCDD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    Loop


  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    KSWZ E 0
	{
	 A_FaceTarget;
     A_SetUserVar("user_shotangle",0);
	 if (random(1,2) == 1)
	 {
	  A_SetUserVar("user_shotangle",0);
	 }
	 else
	 {
	  if (GetDistance(1,AAPTR_TARGET) <= 512)
	  {
	   if (random(1,4) == 1)
	   {
	    A_SetUserVar("user_shotangle",0);
	   }
	   else
	   {
	    if (random(1,2) == 1) { A_SetUserVar("user_shotangle",-20); } else { A_SetUserVar("user_shotangle",20); }
	   }
	  }
	 }
	}
    KSWZ E 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	}
    KSWZ F 10 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_PlayWeaponSound("Weapons/KarasawaFire");
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("KsawBoltCrisis", 32, 1, user_shotangle, 0);
	 }
	 else
	 {
      A_CustomMissile("KsawBolt", 32, 1, user_shotangle, 0);
	 }
	}
    KSWZ E 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	}
    KSWZ E 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_PlaySound ("Weapons/KarasawaCharge");
	}
    KSWZ AABBCCDD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Wander;
	}
    Goto See

  Pain:
    KSWZ G 3
    KSWZ G 3 A_Pain
    Goto See
  Pain.Fist:
    KSWZ G 3
    KSWZ G 3 A_Pain
    KSWZ GG 3
    Goto See
  Pain.Kick:
    KSWZ G 3
    KSWZ G 3 A_Pain
    KSWZ GGGG 3
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    KSWZ H 5
    KSWZ I 5 A_Scream
    KSWZ J 5 A_Fall
    KSWZ K 5
    KSWZ L 5
    KSWZ M 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    KSWZ N -1
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    KSWZ O 5
    KSWZ P 5 A_XScream
    KSWZ Q 5 A_Fall
    KSWZ RSTUV 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    KSWZ W -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    KSWZ G 5 A_GenericFreezeDeath
    KSWZ G 1 A_FreezeDeathChunks
    wait
  Raise:
    KSWZ N 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    KSWZ MLKJIH 5
    Goto See
  }
}


actor DSShotgunGuy : ShotgunGuy 26509
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/ShotgunGuy Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 var int user_pelletsfired; var int user_currenttracer;
 dropitem DoomSpellMana 16
 dropitem Shotgun
 dropitem Shotgun 4
 dropitem Shotgun 4
 dropitem ShellBox 2 10
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor

 DamageFactor "Crush", 8
 DamageFactor "Fire", 1.333 // Zombies = +33% Fire Damage
 Painchance "Fire", 226 // Zombies = +33% Pain Chance
 DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
 Painchance "Holy", 226 // Zombies = +33% Pain Chance

 Painchance 170
 Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
 Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "GravityHP", 255
 Painchance "GravityMP", 255
 Painchance "GravityHPMP", 255

 +DOHARMSPECIES
 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    SPOS A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SPOS AB 10 A_Look
    goto Spawn+1
  See:
    SPOS A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    SPOS AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SPOS E 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    SPOS F 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
     A_PlaySound("shotguy/attack");
	 if (GetCVar("dvds_shotgunnerspread") == 0) { A_SetUserVar("user_pelletsfired",3); } else { A_SetUserVar("user_pelletsfired",7); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  if (GetCVar("dvds_monsterbulletstracers") == 0) // Hitscan
	  {
	   A_CustomBulletAttack (22.4, 0, user_pelletsfired, ((random(1,5) * 3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, 1);
	  }
	  else
	  {
       for (A_SetUserVar(user_currenttracer, 0); user_currenttracer < user_pelletsfired; A_SetUserVar(user_currenttracer, user_currenttracer + 1))
       {
        A_CustomMissile("ZombieBulletTracerCrisis", 32, 12, frandom(-11.2,11.2));
       }	   
	  }
	 }
	 else
	 {
	  if (GetCVar("dvds_monsterbulletstracers") == 0) // Hitscan
	  {
       A_CustomBulletAttack (22.4, 0, user_pelletsfired, random(1,5) * 3, "BulletPuff", 0, 1);
	  }
	  else
	  {
       for (A_SetUserVar(user_currenttracer, 0); user_currenttracer < user_pelletsfired; A_SetUserVar(user_currenttracer, user_currenttracer + 1))
       {
	    A_CustomMissile("ZombieBulletTracer", 32, 12, frandom(-11.2,11.2));
       }	   
	  }
	 }
	}
    SPOS F 10 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	}
    SPOS E 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	}
    goto See

  Pain:
    SPOS G 3
    SPOS G 3 A_Pain
    Goto See
  Pain.Fist:
    SPOS G 3
    SPOS G 3 A_Pain
    SPOS GG 3
    Goto See
  Pain.Kick:
    SPOS G 3
    SPOS G 3 A_Pain
    SPOS GGGG 3
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SPOS H 5
    SPOS I 5 A_Scream
    SPOS J 5 A_NoBlocking
    SPOS K 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SPOS L -1
    stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SPOS M 5
    SPOS N 5 A_XScream
    SPOS O 5 A_NoBlocking
    SPOS PQRST 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SPOS U -1
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SPOS G 5 A_GenericFreezeDeath
    SPOS G 1 A_FreezeDeathChunks
    wait
  Raise:
    SPOS L 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SPOS KJIH 5
    goto See
 }
}

actor SuperShotgunGuy 5005
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/ShotgunGuy Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_pelletsfired; var int user_currenttracer;
  Game Doom
  Health 120
  Radius 20
  Height 56
  Mass 100
  Speed 9
  Translation "112:127=16:47"
  SeeSound "chainguy/sight"
  PainSound "chainguy/pain"
  DeathSound "chainguy/death"
  ActiveSound "chainguy/active"
  AttackSound "weapons/sshotf" // "ssgguy/attack"
  MONSTER
  +FLOORCLIP
  Obituary "%o was jacked by a super shotgun guy."
  dropitem DoomSpellMana 16
  DropItem SuperShotgun
  dropitem SuperShotgun 4
  dropitem SuperShotgun 4
  dropitem ShellBox 2 10
  dropitem ShellBox 2 10
  dropitem ShellBox 2 10
  dropitem ShellBox 2 10
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  +AVOIDMELEE
  +DOHARMSPECIES

  DamageFactor "Crush", 8
  DamageFactor "Fire", 1.333 // Zombies = +33% Fire Damage
  Painchance "Fire", 207 // Zombies = +33% Pain Chance
  DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
  Painchance "Holy", 207 // Zombies = +33% Pain Chance

  Painchance 155
  Painchance "Fist", 233 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 233 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255
 
  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    GPOS A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    GPOS AB 10 A_Look
    goto Spawn+1
  See:
    GPOS A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    GPOS AABBCCDD 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    GPOS E 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    GPOS F 8 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;

     A_PlaySound("weapons/sshotf");
	 if (GetCVar("dvds_shotgunnerspread") == 0) { A_SetUserVar("user_pelletsfired",7); } else { A_SetUserVar("user_pelletsfired",20); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  if (GetCVar("dvds_monsterbulletstracers") == 0) // Hitscan
	  {
	   A_CustomBulletAttack (44.8, 28.4, user_pelletsfired, ((random(1,5) * 3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, 1);
	  }
	  else
	  {
       for (A_SetUserVar(user_currenttracer, 0); user_currenttracer < user_pelletsfired; A_SetUserVar(user_currenttracer, user_currenttracer + 1))
       {
	    A_CustomMissile("ZombieBulletTracerCrisis", 32, 12, frandom(-22.4,22.4), CMF_OFFSETPITCH, frandom(-14.2,14.2));
       }	   
  	  }
	 }
	 else
	 {
	  if (GetCVar("dvds_monsterbulletstracers") == 0) // Hitscan
	  {
	   A_CustomBulletAttack (44.8, 28.4, user_pelletsfired, random(1,5) * 3, "BulletPuff", 0, 1);
	  }
	  else
	  {
       for (A_SetUserVar(user_currenttracer, 0); user_currenttracer < user_pelletsfired; A_SetUserVar(user_currenttracer, user_currenttracer + 1))
       {
	    A_CustomMissile("ZombieBulletTracer", 32, 12, frandom(-22.4,22.4), CMF_OFFSETPITCH, frandom(-14.2,14.2));
       }	   
	  }
	 }
	}
    GPOS E 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	}
    Goto See

  Pain:
    GPOS G 3
    GPOS G 3 A_Pain
    Goto See
  Pain.Fist:
    GPOS G 3
    GPOS G 3 A_Pain
    GPOS GG 3
    Goto See
  Pain.Kick:
    GPOS G 3
    GPOS G 3 A_Pain
    GPOS GGGG 3
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    GPOS H 5
    GPOS I 5 A_Scream
    GPOS J 5 A_NoBlocking
    GPOS KLM 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    GPOS N -1
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    GPOS O 5
    GPOS P 5 A_XScream
    GPOS Q 5 A_NoBlocking
    GPOS RS 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    GPOS T -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    GPOS G 5 A_GenericFreezeDeath
    GPOS G 1 A_FreezeDeathChunks
    wait
  Raise:
    GPOS L 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    GPOS KJIH 5
    Goto See
  }
}


actor DSWolfensteinSS : WolfensteinSS replaces WolfensteinSS
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Others"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana 16
 dropitem Clip
 dropitem Clip 4
 dropitem Clip 4
 dropitem ClipBox 2 50
 dropitem ClipBox 2 50

 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor

  DamageFactor "Crush", 8
  DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
  Painchance "Holy", 226 // Zombies = +33% Pain Chance
  SeeSound "wolfss/sight"
  PainSound "nazi/pain"
  DeathSound "wolfss/death"
  ActiveSound "wolfss/active"
  AttackSound "wolfss/attack"

  Painchance 170
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255
 
  +DOHARMSPECIES
 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    SSWV A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SSWV AB 10 A_Look
    goto Spawn+1
  See:
    SSWV A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    SSWV AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SSWV E 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
  AttackHold:
    SSWV F 10
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    SSWV G 4 bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }

     A_FaceTarget;
     A_PlaySound("chainguy/attack", CHAN_WEAPON);
	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       A_CustomBulletAttack(22.4, 0, 1, ((random(1,5)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, CBAF_NORANDOM);
	  }
	  else
	  {
       A_CustomBulletAttack(22.4, 0, 1, random(1,5)*3, "BulletPuff", 0, CBAF_NORANDOM);
	  }
	 }
	 else
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       A_CustomMissile("ZombieBulletTracerCrisis", 32, 12, frandom(-11.2,11.2));
	  }
	  else
	  {
       A_CustomMissile("ZombieBulletTracer", 32, 12, frandom(-11.2,11.2));
	  }
     }
	}
    SSWV F 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    SSWV G 4 bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }

     A_FaceTarget;
     A_PlaySound("chainguy/attack", CHAN_WEAPON);
	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       A_CustomBulletAttack(22.4, 0, 1, ((random(1,5)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, CBAF_NORANDOM);
	  }
	  else
	  {
       A_CustomBulletAttack(22.4, 0, 1, random(1,5)*3, "BulletPuff", 0, CBAF_NORANDOM);
	  }
	 }
	 else
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       A_CustomMissile("ZombieBulletTracerCrisis", 32, 12, frandom(-11.2,11.2));
	  }
	  else
	  {
       A_CustomMissile("ZombieBulletTracer", 32, 12, frandom(-11.2,11.2));
	  }
     }
	}
    SSWV F 1 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(0); }
	 A_CPosRefire;
	}
    loop

  Pain:
    SSWV H 3
    SSWV H 3 A_PlaySound("nazi/pain")
    Goto See	
  Pain.Fist:
    SSWV H 3
    SSWV H 3 A_PlaySound("nazi/pain")
    SSWV HH 3
    Goto See
  Pain.Kick:
    SSWV H 3
    SSWV H 3 A_PlaySound("nazi/pain")
    SSWV HHHH 3
    Goto See
	
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SSWV I 5
    SSWV J 5 A_Scream
    SSWV K 5 A_NoBlocking
    SSWV L 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SSWV M -1
    stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SSWV N 5
    SSWV O 5 A_XScream
    SSWV P 5 A_NoBlocking
    SSWV QRSTU 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SSWV V -1
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SSWV H 5 A_GenericFreezeDeath
    SSWV H 1 A_FreezeDeathChunks
    wait
  Raise:
    SSWV M 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SSWV LKJI 5
    goto See
 }
}


actor DSChaingunGuy : ChaingunGuy 26512
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/ChaingunGuy Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 var int user_shotsfired; var int user_shotsfiredmax;
 var float user_shotaccuracy; var float user_shotaccuracy1; var float user_shotaccuracy2;
 var float user_shotzaccuracy; var float user_shotzaccuracy1; var float user_shotzaccuracy2;

 dropitem DoomSpellMana 16
 dropitem Chaingun
 dropitem Chaingun 4 10
 dropitem Chaingun 4 10
 dropitem ClipBox 2 50
 dropitem ClipBox 2 50
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor

  DamageFactor "Crush", 8
  DamageFactor "Fire", 1.333 // Zombies = +33% Fire Damage
  Painchance "Fire", 226 // Zombies = +33% Pain Chance
  DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
  Painchance "Holy", 226 // Zombies = +33% Pain Chance

  Painchance 170
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255
 
  +DOHARMSPECIES
 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    CPOS A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    CPOS AB 10 A_Look
    goto Spawn+1
  See:
    CPOS A 0
	{ 
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0);
	 A_SetUserVar("user_shotsfired",0);	 
	}
    CPOS AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0
    {	
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
     A_SetUserVar("user_shotsfiredmax",random(25,50));
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(25,50))); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(20,40))); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(15,30))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(10,20))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(5,10))); }
	}
    CPOS E 10
	{
	 A_SetUserVar("user_shotaccuracy",22.5);
	 A_SetUserVar("user_shotzaccuracy",0.0);
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*6)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*4)/9)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*7)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*5)/9)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*7)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*6)/9)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*7)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*7)/9)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*8)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*8)/9)); }
	 A_SetUserVar("user_shotaccuracy1",user_shotaccuracy/-2); A_SetUserVar("user_shotaccuracy2",user_shotaccuracy/2);
	 A_SetUserVar("user_shotzaccuracy1",user_shotzaccuracy/-2); A_SetUserVar("user_shotzaccuracy2",user_shotzaccuracy/2);
	 A_FaceTarget;
	}
  AttackHold:
    CPOS FE 4 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
     A_FaceTarget;
     A_PlaySound("chainguy/attack", CHAN_WEAPON);
	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, ((random(1,5)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, CBAF_NORANDOM);
	  }
	  else
	  {
       A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(1,5)*3, "BulletPuff", 0, CBAF_NORANDOM);
	  }
	 }
	 else
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       A_CustomMissile("ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	  }
	  else
	  {
       A_CustomMissile("ZombieBulletTracer", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	  }
     }
	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
	 if (A_JumpIf(user_shotsfired > user_shotsfiredmax, "EndMissile")) { return state("EndMissile"); }
	 return state("");
	}
    CPOS F 0 A_JumpIf(user_shotsfired > user_shotsfiredmax, "EndMissile")
    CPOS F 1 
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(0); }
	}
    CPOS F 0 A_MonsterRefire(40,"See") // A_CPosRefire
    loop

  EndMissile:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    CPOS F 0 A_FaceTarget
    Goto See

  Pain:
    CPOS G 3
    CPOS G 3 A_Pain
    Goto See
  Pain.Fist:
    CPOS G 3
    CPOS G 3 A_Pain
    CPOS GG 3
    Goto See
  Pain.Kick:
    CPOS G 3
    CPOS G 3 A_Pain
    CPOS GGGG 3
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    CPOS H 5
    CPOS I 5 A_Scream
    CPOS J 5 A_NoBlocking
    CPOS KLM 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    CPOS N -1
    stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    CPOS O 5
    CPOS P 5 A_XScream
    CPOS Q 5 A_NoBlocking
    CPOS RS 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    CPOS T -1
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    CPOS G 5 A_GenericFreezeDeath
    CPOS G 1 A_FreezeDeathChunks
    wait
  Raise:
    CPOS N 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    CPOS MLKJIH 5
    goto See
 }
}

ACTOR Minigunner 26525
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/ChaingunGuy Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 var int user_shotsfired; var int user_shotsfiredmax;
 var float user_shotaccuracy; var float user_shotaccuracy1; var float user_shotaccuracy2;
 var float user_shotzaccuracy; var float user_shotzaccuracy1; var float user_shotzaccuracy2;

 SeeSound "grunt/sight"
 PainSound "grunt/pain"
 DeathSound "grunt/death"
 ActiveSound "grunt/active"
 AttackSound "weapons/minigunfire"
 dropitem DoomSpellMana 16
 DropItem MinigunChecker
 DropItem MinigunChecker 4 10
 DropItem MinigunChecker 4 10
 DropItem Clip
 DropItem Clip 64
 DropItem Clip 16
 DropItem Clip 4
 DropItem Clip 1
 dropitem ClipBox 2 50
 dropitem ClipBox 2 50
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor

 Obituary "%o was shredded by a minigun zombie."
 Health 105 // 70
 Speed 8

 DamageFactor "Crush", 8
 DamageFactor "Fire", 1.333 // Zombies = +33% Fire Damage
 Painchance "Fire", 226 // Zombies = +33% Pain Chance
 DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
 Painchance "Holy", 226 // Zombies = +33% Pain Chance

 Painchance 170
 Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
 Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "GravityHP", 255
 Painchance "GravityMP", 255
 Painchance "GravityHPMP", 255
 
 Mass 100
 Radius 20
 Height 56
 Monster

  +FLOORCLIP
  +DOHARMSPECIES
 States
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    MINZ A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    MINZ AB 10 A_Look
    goto Spawn+1
  See:
    MINZ A 0
	{ 
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0);
	 A_SetUserVar("user_shotsfired",0);	 
	}
    MINZ AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0
    {	
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
     A_SetUserVar("user_shotsfiredmax",random(40,100));
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(40,80))); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(32,64))); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(24,48))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(16,32))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(8,16))); }
	}
    MINZ E 10
	{
	 A_SetUserVar("user_shotaccuracy",30.0);
	 A_SetUserVar("user_shotzaccuracy",2.0);
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*6)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*4)/9)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*7)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*5)/9)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*7)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*6)/9)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*7)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*7)/9)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*8)/9)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*8)/9)); }
	 A_SetUserVar("user_shotaccuracy1",user_shotaccuracy/-2); A_SetUserVar("user_shotaccuracy2",user_shotaccuracy/2);
	 A_SetUserVar("user_shotzaccuracy1",user_shotzaccuracy/-2); A_SetUserVar("user_shotzaccuracy2",user_shotzaccuracy/2);
	 A_FaceTarget;
	}
  AttackHold:
    MINZ FE 2
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(1); }
     A_FaceTarget;

     A_PlaySound("weapons/minigunfire", CHAN_WEAPON);
	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, ((random(2,4)*random(6,7)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, CBAF_NORANDOM);
	  }
	  else
	  {
       A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(2,4)*random(6,7), "BulletPuff", 0, CBAF_NORANDOM);
	  }
	 }
	 else
	 {
	  A_SetUserVar("user_canusecrisisatk",0);
	  if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
      if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       A_CustomMissile("ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	  }
	  else
	  {
       A_CustomMissile("ZombieBulletTracer", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	  }
     }
	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
	 if (A_JumpIf(user_shotsfired > user_shotsfiredmax, "EndMissile")) { return state("EndMissile"); }
	 return state("");
	}
    MINZ F 0 A_JumpIf(user_shotsfired > user_shotsfiredmax, "EndMissile")
    MINZ F 0 A_MonsterRefire(40,"See") // A_CPosRefire
    loop

  EndMissile:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    MINZ F 0 A_FaceTarget	
    Goto See

  Pain:
    MINZ G 3
    MINZ G 3 A_Pain
    Goto See
  Pain.Fist:
    MINZ G 3
    MINZ G 3 A_Pain
    MINZ GG 3
    Goto See
  Pain.Kick:
    MINZ G 3
    MINZ G 3 A_Pain
    MINZ GGGG 3
    Goto See
	
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    MINZ H 6
    MINZ I 6 A_Scream
    MINZ J 6 A_Fall
    MINZ KLM 6
    MINZ N -1
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    MINZ O 4
    MINZ P 4 A_XScream
    MINZ Q 4 A_Fall
    MINZ RSTUV 4
    MINZ W -1
    Stop
  Raise:
    MINZ N 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    MINZ MLKJIH 5
    Goto See
 }
}

actor BFGGuy 26513
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/ChaingunGuy Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  dropitem DoomSpellMana 32
  dropitem BFG9000 
  dropitem BFG9000 4 10
  dropitem BFG9000 4 10
  dropitem CellPack 2 50
  dropitem CellPack 2 50
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  obituary "%o was vapourized by a zombie's BFG9000."
  health 200
  radius 20
  height 56
  mass 100
  speed 8
  seesound "chainguy/sight"
  painsound "chainguy/pain"
  deathsound "chainguy/death"
  activesound "chainguy/active"
  missiletype BFGBall
  MONSTER
  +FLOORCLIP
  +AVOIDMELEE

  DamageFactor "Crush", 8
  DamageFactor "Fire", 1.333 // Zombies = +33% Fire Damage
  Painchance "Fire", 167 // Zombies = +33% Pain Chance
  DamageFactor "Holy", 1.333 // Zombies = +33% Holy Damage
  Painchance "Holy", 167 // Zombies = +33% Pain Chance

  Painchance 125
  Painchance "Fist", 188 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 188 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255
 
  states
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    BFGZ A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BFGZ AB 10 A_Look
    goto Spawn+1
  See:
    BFGZ A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    BFGZ AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckBFG2704") == 0,"MissileBFG9000")
    TNT1 A 0 A_Jump(256,"MissileBFG9000","MissileBFG2704")
    goto See
  MissileBFG9000:
    BFGZ E 20
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(17); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(18); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetTics(19); }
	 A_PlaySound ("weapons/bfgf");
	}
    BFGZ F 10 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	}
    BFGZ F 10 Bright
	{
     A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("BFGBallCrisis");
	 }
	 else
	 {
	  A_CustomMissile("BFGBall");
	 }
	}
    BFGZ E 20
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(17); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(18); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetTics(19); }
	}
    goto See

  MissileBFG2704:
    BFGZ E 0 A_FaceTarget
    BFGZ E 18
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 210) { A_SetTics(11); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(12); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(13); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 30) { A_SetTics(17); }
	 A_FaceTarget;
	 A_PlaySound ("weapons/bfgf");
	}
    BFGZ F 9 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(8); }
	 A_FaceTarget;
	}
    BFGZ F 0 A_SetUserVar("user_shotsfired",0)
  MissileBFG2704Shoot:
    BFGZ F 1 Bright
	{
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("PlasmaBall1Crisis",32,0,random(-10,10),CMF_OFFSETPITCH,random(-10,10));
	 }
	 else
	 {
	  A_CustomMissile("PlasmaBall1",32,0,random(-10,10),CMF_OFFSETPITCH,random(-10,10));
	 }
	}
    BFGZ F 1 Bright
	{
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("PlasmaBall2Crisis",32,0,random(-10,10),CMF_OFFSETPITCH,random(-10,10));
	 }
	 else
	 {
	  A_CustomMissile("PlasmaBall2",32,0,random(-10,10),CMF_OFFSETPITCH,random(-10,10));
	 }
	}
    BFGZ F 0 A_SetUserVar("user_shotsfired",user_shotsfired+1)
    BFGZ F 0 A_JumpIf(user_shotsfired==20,"MissileBFG2704End")
    Loop
  MissileBFG2704End:
    BFGZ E 18
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 210) { A_SetTics(11); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(12); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(13); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 30) { A_SetTics(17); }
	}
    goto See

  Pain:
    BFGZ G 3
    BFGZ G 3 A_Pain
    goto See
  Pain.Fist:
    BFGZ G 3
    BFGZ G 3 A_Pain
    BFGZ GG 3
    goto See
  Pain.Kick:
    BFGZ G 3
    BFGZ G 3 A_Pain
    BFGZ GGGG 3
    goto See
	
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BFGZ H 5
    BFGZ I 5 A_Scream
    BFGZ J 5 A_NoBlocking
    BFGZ KLM 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BFGZ N -1
    stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BFGZ O 5
    BFGZ P 5 A_XScream
    BFGZ Q 5 A_NoBlocking
    BFGZ RS 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BFGZ T -1
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BFGZ G 5 A_GenericFreezeDeath
    BFGZ G 1 A_FreezeDeathChunks
    wait
  Raise:
    BFGZ N 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BFGZ MLKJIH 5
    goto See
  }
}

actor DSDoomImp : DoomImp 26515
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/DoomImp Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana 16
 dropitem Stimpack 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor

  DamageFactor "Crush", 6.4
  DamageFactor "Fire", 0.5 // Imps = -50% Fire Damage
  Painchance "Fire", 100 // Imps = -50% Pain Chance
  DamageFactor "Holy", 1.5 // Imps = +50% Holy Damage
  Painchance "Holy", 255 // Imps = +50% Pain Chance

  Painchance 200
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  Species "Imp"
  +DONTHARMSPECIES

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    TROO A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    TROO AB 10 A_Look
    goto Spawn+1
  See:
    TROO A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    TROO AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Melee:
  Missile:
    TNT1 A 0
	{
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1); // makes a Stealth Monster become more visible
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { return state("Missile2"); }
	 return state("Missile1");
	}
  Missile1:
    TROO EF 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
	goto EndMissile
  Missile2:
    IMP3 AB 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
	goto EndMissile
  EndMissile:
    TROO G 6
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_CustomComboAttack("BelphegorBallCrisis", 32, (12.5*random(1,8) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee"); }
	  else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_CustomComboAttack("BaronOfHellBallCrisis", 32, ((random(10,15)*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee"); }
	  else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_CustomComboAttack("HellKnightBallCrisis", 32, ((random(5,10)*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee"); }
	  else { A_CustomComboAttack("DoomImpBallCrisis", 32, ((3*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee"); }       
	 }
	 else
	 {
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_CustomComboAttack("BelphegorBall", 32, (12.5*random(1,8)), "imp/melee"); }
	  else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_CustomComboAttack("BaronOfHellBall", 32, (random(10,15)*random(1,8)), "imp/melee"); }
	  else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_CustomComboAttack("HellKnightBall", 32, (random(5,10)*random(1,8)), "imp/melee"); }
  	  else { A_CustomComboAttack("DoomImpBall", 32, (3*random(1,8)), "imp/melee"); }       
	 }
	}
    goto See

  Pain:
    TROO H 2
    TROO H 2 A_Pain
    Goto See
  Pain.Fist:
    TROO H 2
    TROO H 2 A_Pain
    TROO HH 2
    Goto See
  Pain.Kick:
    TROO H 2
    TROO H 2 A_Pain
    TROO HHHH 2
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Holy:
    TROO H 2
    TROO H 2 A_Pain
    TROO H 2
    TROO H 2
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TROO I 8
    TROO J 8 A_Scream
    TROO K 6
    TROO L 6 A_NoBlocking
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    TROO M -1
    stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TROO N 5
    TROO O 5 A_XScream
    TROO P 5
    TROO Q 5 A_NoBlocking
    TROO RST 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    TROO U -1
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    TROO H 5 A_GenericFreezeDeath
    TROO H 1 A_FreezeDeathChunks
    wait
  Raise:
    TROO M 8 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    TROO L 8
    TROO KJI 6
    goto See
 }
}

actor DarkImp : DoomImp 5003
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/DoomImp Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana 24
  dropitem DoomSpellMana 24
  dropitem Stimpack 3
  dropitem Stimpack 3
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  SeeSound "darkimp/sight"
  PainSound "darkimp/pain"
  DeathSound "darkimp/death"
  ActiveSound "darkimp/active"
  MeleeSound "darkimp/melee"

  Obituary "%o was cursed by a dark imp."
  HitObituary "%o was touched by a dark imp."
  Health 120
  Radius 20
  Height 56
  Speed 8
  MissileType DarkSeeker
  MeleeDamage 3
  Species "Imp"
  +DONTHURTSPECIES

  DamageFactor "Normal", 0.875
  RadiusDamageFactor 0.875
  DamageFactor "Explosive", 0.875
  DamageFactor "Crush", 6.4
  DamageFactor "Fire", 0.5 // Imps = -50% Fire Damage
  Painchance "Fire", 100 // Imps = -50% Pain Chance
  DamageFactor "Holy", 1.5 // Imps = +50% Holy Damage
  Painchance "Holy", 255 // Imps = +50% Pain Chance

  Painchance 200
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    DRKI A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DRKI AB 10 A_Look
    goto Spawn+1
  See:
    DRKI A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    DRKI AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    DRKI EF 8
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	}
    DRKI G 6
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomComboAttack("DarkSeekerCrisis", 32, ((3*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee");
	 }
	 else
	 {
	  A_CustomComboAttack("DarkSeeker", 32, (3*random(1,8)), "imp/melee");
	 }
	}
    goto See

  Pain.Holy:
    DRKI H 2
    DRKI H 2 A_Pain
    DRKI H 2
    DRKI H 2
    Goto See
  Pain:
    DRKI H 2
    DRKI H 2 A_Pain
    Goto See
  Pain.Fist:
    DRKI H 2
    DRKI H 2 A_Pain
    DRKI HH 2
    Goto See
  Pain.Kick:
    DRKI H 2
    DRKI H 2 A_Pain
    DRKI HHHH 2
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DRKI I 8
    DRKI J 8 A_Scream
    DRKI K 6
    DRKI L 6 A_NoBlocking
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DRKI M -1
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DRKI N 5
    DRKI O 5 A_XScream
    DRKI P 5
    DRKI Q 5 A_NoBlocking
    DRKI RST 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DRKI U -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    DRKI H 5 A_GenericFreezeDeath
    DRKI H 1 A_FreezeDeathChunks
    wait
  Raise:
    DRKI M 8 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DRKI L 8
    DRKI KJI 6
    Goto See
  }
}

actor STDarkImp 3102
{
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.

  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/DoomImp Type"
  Health 110
  Radius 20
  Height 56
  Speed 9
  MONSTER 
  +FLOORCLIP
  SeeSound "darkimp2/sight"
  PainSound "darkimp2/pain"
  DeathSound "darkimp2/death"
  ActiveSound "darkimp2/active"
  MeleeSound "darkimp2/melee"
  dropitem DoomSpellMana 24
  dropitem DoomSpellMana 24
  dropitem Stimpack 3
  dropitem Stimpack 3
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  Obituary "%o was cursed by a dark imp."
  HitObituary "%o was touched by a dark imp."

  DamageFactor "Normal", 1
  RadiusDamageFactor 1
  DamageFactor "Explosive", 1
  DamageFactor "Crush", 6.4
  DamageFactor "Fire", 0.5 // Imps = -50% Fire Damage
  Painchance "Fire", 100 // Imps = -50% Pain Chance
  DamageFactor "Holy", 1.5 // Imps = +50% Holy Damage
  Painchance "Holy", 255 // Imps = +50% Pain Chance

  PainChance 200
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  MissileType DarkFast
  MeleeDamage 3
  Species "Imp"
  +DONTHURTSPECIES

  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    DRKS A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DRKS AB 10 A_Look
    goto Spawn+1
  See:
    DRKS A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    DRKS AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    DRKS EF 8
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	}
    DRKS G 6
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomComboAttack("DarkFastCrisis", 32, ((3*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee");
	 }
	 else
	 {
	  A_CustomComboAttack("DarkFast", 32, (3*random(1,8)), "imp/melee");
	 }
	}
    Goto See

  Pain.Holy:
    DRKS H 2
    DRKS H 2 A_Pain
    DRKS HH 2
    Goto See
  Pain:
    DRKS H 2
    DRKS H 2 A_Pain
    Goto See
  Pain.Fist:
    DRKS H 2
    DRKS H 2 A_Pain
    DRKS HH 2
    Goto See
  Pain.Kick:
    DRKS H 2
    DRKS H 2 A_Pain
    DRKS HHHH 2
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DRKS I 8
    DRKS J 8 A_Scream
    DRKS K 6
    DRKS L 6 A_Fall
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DRKS M -1
    Stop

  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DRKI N 5
    DRKI O 5 A_XScream
    DRKI P 5
    DRKI Q 5 A_Fall
    DRKI RST 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DRKI U -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    DRKS H 5 A_GenericFreezeDeath
    DRKS H 1 A_FreezeDeathChunks
    wait

  Raise:
    DRKS M 8 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DRKS L 8
    DRKS KJI 6
    Goto See
  }
}

actor VoidDarkImp 3101
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/DoomImp Type"
  Health 130
  Radius 20
  Height 56
  Speed 7
  MONSTER 
  +FLOORCLIP
  SeeSound "darkimp3/sight"
  PainSound "darkimp3/pain"
  DeathSound "darkimp3/death"
  ActiveSound "darkimp3/active"
  MeleeSound "darkimp3/melee"

  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  dropitem DoomSpellMana 24
  dropitem DoomSpellMana 24
  dropitem Stimpack 3
  dropitem Stimpack 3
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  Obituary "%o was cursed by a dark imp."
  HitObituary "%o was touched by a dark imp."

  DamageFactor "Normal", 0.825
  RadiusDamageFactor 0.825
  DamageFactor "Explosive", 0.825
  DamageFactor "Crush", 6.4
  DamageFactor "Fire", 0.5 // Imps = -50% Fire Damage
  Painchance "Fire", 100 // Imps = -50% Pain Chance
  DamageFactor "Holy", 1.5 // Imps = +50% Holy Damage
  Painchance "Holy", 255 // Imps = +50% Pain Chance

  PainChance 200
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  MissileType DarkNormal
  MeleeDamage 3
  Species "Imp"
  +DONTHURTSPECIES

  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    DRKV A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DRKV AB 10 A_Look
    goto Spawn+1
  See:
    DRKV A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    DRKV AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
  MissileStart:
    TNT1 A 0 A_Jump(256,"MissileNormal","MissileStrong")
  MissileNormal:
    DRKV EF 8 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	}
    DRKV G 6 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomComboAttack("DarkNormalCrisis", 32, ((3*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee");
	 }
	 else
	 {
	  A_CustomComboAttack("DarkNormal", 32, (3*random(1,8)), "imp/melee");
	 }
	}
    TNT1 A 0 A_SetUserVar("user_shotsfired",user_shotsfired+1)
    TNT1 A 0 A_JumpIf(user_shotsfired==2,"See")
    Goto MissileStart
  MissileStrong:
    DRKV IJ 8 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	}
    DRKV K 6 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomComboAttack("DarkStrongCrisis", 32, ((3*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee");
	 }
	 else
	 {
	  A_CustomComboAttack("DarkStrong", 32, (3*random(1,8)), "imp/melee");
	 }
	}
    TNT1 A 0 A_SetUserVar("user_shotsfired",user_shotsfired+1)
    TNT1 A 0 A_JumpIf(user_shotsfired==2,"See")
    Goto MissileStart

  Pain.Holy:
    DRKV H 2
    DRKV H 2 A_Pain
    DRKV HH 2
    Goto See
  Pain:
    DRKV H 2
    DRKV H 2 A_Pain
    Goto See
  Pain.Fist:
    DRKV H 2
    DRKV H 2 A_Pain
    DRKV HH 2
    Goto See
  Pain.Kick:
    DRKV H 2
    DRKV H 2 A_Pain
    DRKV HHHH 2
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DRKV L 8
    DRKV M 8 A_Scream
    DRKV N 5
    DRKV O 5 A_Fall
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DRKV P -1
    Stop

  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DRKI N 5
    DRKI O 5 A_XScream
    DRKI P 5
    DRKI Q 5 A_Fall
    DRKI RST 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DRKI U -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    DRKV H 5 A_GenericFreezeDeath
    DRKV H 1 A_FreezeDeathChunks
    wait
  Raise:
    DRKV P 8 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DRKV O 8
    DRKV NML 6
    Goto See
  }
}

actor NetherDarkImp 11368
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/DoomImp Type"
  Health 300
  Radius 22
  Height 60
  Speed 9
  Mass 500
  Scale 1.2
  MONSTER 
  +FLOORCLIP
  SeeSound "darkimp4/sight"
  PainSound "darkimp4/pain"
  DeathSound "darkimp4/death"
  ActiveSound "darkimp4/active"
  MeleeSound "darkimp4/melee"

  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  dropitem DoomSpellMana 24
  dropitem DoomSpellMana 24
  dropitem Stimpack 3
  dropitem Stimpack 3
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  Obituary "%o was cursed by a nether dark imp."
  HitObituary "%o was touched by a nether dark imp."

  MeleeDamage 6
  MissileType "InfernoBall"
  Missileheight 32
  Species "Imp"
  +DONTHURTSPECIES

  DamageFactor "Normal", 0.7
  RadiusDamageFactor 0.7
  DamageFactor "Explosive", 0.7
  DamageFactor "Crush", 6.4
  DamageFactor "Fire", 0.5 // Imps = -50% Fire Damage
  Painchance "Fire", 50 // Imps = -50% Pain Chance
  DamageFactor "Holy", 1.5 // Imps = +50% Holy Damage
  Painchance "Holy", 150 // Imps = +50% Pain Chance

  PainChance 100
  Painchance "Fist", 150 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 250 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 150 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    DRKF A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DRKF AB 10 A_Look
    goto Spawn+1
  See:
    DRKF A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    DRKF AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    DRKF E 0 A_Jump (255, "Attack1", "Attack2")
    Goto See
  Attack1:
    DRKF EF 8
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	}
    DRKF G 6 
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomComboAttack("NetherLightningCrisis", 32, ((6*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee");
	 }
	 else
	 {
	  A_CustomComboAttack("NetherLightning", 32, (6*random(1,8)), "imp/melee");
	 }
	}
    Goto See
  Attack2:
    DRKF IJ 8
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	}
    DRKF K 6 
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomComboAttack("InfernoBallCrisis", 32, ((6*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee");
	 }
	 else
	 {
	  A_CustomComboAttack("InfernoBall", 32, (6*random(1,8)), "imp/melee");
	 }
	}
    Goto See

  Pain.Holy:
    DRKF H 2
    DRKF H 2 A_Pain
    DRKF HH 2
    Goto See
  Pain:
    DRKF H 2
    DRKF H 2 A_Pain
    Goto See
  Pain.Fist:
    DRKF H 2
    DRKF H 2 A_Pain
    DRKF HH 2
    Goto See
  Pain.Kick:
    DRKF H 2
    DRKF H 2 A_Pain
    DRKF HHHH 2
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DRKF L 8
    DRKF M 8 A_Scream
    DRKF N 5
    DRKF O 5 A_Fall
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DRKF P -1
    Stop

  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DRKF Q 5
    DRKF R 5 A_XScream
    DRKF S 5
    DRKF T 5 A_Fall
    DRKF UVW 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DRKF X -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    DRKF H 5 A_GenericFreezeDeath
    DRKF H 1 A_FreezeDeathChunks
    wait
  Raise:
    DRKF P 8 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DRKF O 8
    DRKF NML 6
    Goto See
  }
}

//

actor DSLostSoul : LostSoul // replaces LostSoul
{
 //$Angled
 //$Color 12
  //$Category "DV-DS Monsters/Others"

  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  damage 3
  meleerange 160
  Mass 100
  +MISSILEMORE
  dropitem DoomSpellMana 16
  dropitem SoulSphere2 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem RockBombShard 2
  dropitem RockBombShard 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  DamageFactor "Crush", 7.2
  DamageFactor "Ice", 1.5 // Lost Souls = +50% Ice Damage
  Painchance "Ice", 255
  DamageFactor "Fire", 0.2 // Lost Souls = -80% Fire Damage
  Painchance "Fire", 51 // Lost Souls = -80% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 255
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    SKUL A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
	SKUL A 0 A_TakeInventory("100PercentDMGWeakness",9999)
    SKUL AB 10 BRIGHT A_Look
    goto Spawn+1
  See:
    SKUL A 0
	{
 	 A_TakeInventory("100PercentDMGWeakness",9999);
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0);
	 if(health <= user_HPLowRange)
	 {
      A_ChangeFlag("NOFEAR", 1);
      A_ChangeFlag("CANTSEEK", 1);
      A_ChangeFlag("NOINFIGHTING", 1);
      A_ChangeFlag("THRUSPECIES", 1);
      A_ChangeFlag("DONTHARMSPECIES", 1);
      A_ChangeFlag("NORADIUSDMG", 1);
	  if(health <= user_HPCritRange)
	  {
	   A_ChangeFlag("VISIBILITYPULSE", 1);
       A_ChangeFlag("DONTRIP", 1);
       A_ChangeFlag("DONTSQUASH", 1);
       A_ChangeFlag("DONTMORPH", 1);
       A_ChangeFlag("DONTBLAST", 1);
	  }
	  else
	  {
	   A_ChangeFlag("VISIBILITYPULSE", 0);
       A_ChangeFlag("DONTRIP", 0);
       A_ChangeFlag("DONTSQUASH", 0);
       A_ChangeFlag("DONTMORPH", 0);
       A_ChangeFlag("DONTBLAST", 0);
	  }
	 }
	 else
	 {
      A_ChangeFlag("NOFEAR", 0);
      A_ChangeFlag("CANTSEEK", 0);
      A_ChangeFlag("NOINFIGHTING", 0);
      A_ChangeFlag("THRUSPECIES", 0);
      A_ChangeFlag("DONTHARMSPECIES", 0);
      A_ChangeFlag("NORADIUSDMG", 0);
	 }
	}
    SKUL AB 6 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(5); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(4); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SKUL C 10 BRIGHT
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(9); }
	}
    SKUL D 4 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }

	 A_GiveInventory("100PercentDMGWeakness",1);
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_SkullAttack(25);
	 }
	 else
	 {
	  A_SkullAttack(20);
	 }
	}
    SKUL CCDD 2 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_FaceTarget; }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }

	 if(user_canusecrisisatk == 1) { A_CustomMeleeAttack(random(1,8)*3,"none","none","Melee",true); }
	}
    Goto Missile+3

  Pain:
    SKUL E 0 Bright
	{
 	 A_TakeInventory("100PercentDMGWeakness",9999);
	}
    SKUL E 3 Bright
    SKUL E 3 Bright A_Pain
    Goto See
  Pain.Fist:
    SKUL E 0 Bright
	{
 	 A_TakeInventory("100PercentDMGWeakness",9999);
	}
    SKUL E 3 Bright
    SKUL E 3 Bright A_Pain
    SKUL EE 3 Bright
    Goto See
  Pain.Kick:
    SKUL E 0 Bright
	{
 	 A_TakeInventory("100PercentDMGWeakness",9999);
	}
    SKUL E 3 Bright
    SKUL E 3 Bright A_Pain
    SKUL EEEE 3 Bright
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SKUL F 0 Bright A_TakeInventory("100PercentDMGWeakness",9999)
    SKUL F 6 BRIGHT
    SKUL G 6 BRIGHT A_Scream
    SKUL H 6 BRIGHT
    SKUL I 6 BRIGHT A_NoBlocking
    SKUL J 6
    SKUL K 6
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SKUL E 5 A_GenericFreezeDeath
    SKUL E 1 A_FreezeDeathChunks
    wait
 }
}

actor DSLostSoul2 : DSLostSoul 22433
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Others"

  health 125
  damage 4
  speed 10
  meleerange 160
  Mass 150
  +MISSILEEVENMORE
  -MISSILEMORE
  dropitem DoomSpellMana 16
  dropitem DoomSpellMana 4
  dropitem SoulSphere2 4
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem RockBombShard 2
  dropitem RockBombShard 2
  dropitem RockBombShard 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  DamageFactor "Normal", 0.75
  DamageFactor "Crush", 7.2
  DamageFactor "Ice", 1.5 // Lost Souls = +50% Ice Damage
  Painchance "Ice", 255
  DamageFactor "Fire", 0.2 // Lost Souls = -80% Fire Damage
  Painchance "Fire", 38 // Lost Souls = -80% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 192
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 
  Obituary "%o was spooked by an annoying lost soul."

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    SKUL A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
	SKUL A 0 A_TakeInventory("50PercentDMGWeakness",9999)
    SKUL AB 10 BRIGHT A_Look
    goto Spawn+1
  See:
    SKUL A 0
	{
 	 A_TakeInventory("50PercentDMGWeakness",9999);
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0);
	 if(health <= user_HPLowRange)
	 {
      A_ChangeFlag("NOFEAR", 1);
      A_ChangeFlag("CANTSEEK", 1);
      A_ChangeFlag("NOINFIGHTING", 1);
      A_ChangeFlag("THRUSPECIES", 1);
      A_ChangeFlag("DONTHARMSPECIES", 1);
      A_ChangeFlag("NORADIUSDMG", 1);
	  if(health <= user_HPCritRange)
	  {
	   A_ChangeFlag("VISIBILITYPULSE", 1);
       A_ChangeFlag("DONTRIP", 1);
       A_ChangeFlag("DONTSQUASH", 1);
       A_ChangeFlag("DONTMORPH", 1);
       A_ChangeFlag("DONTBLAST", 1);
	  }
	  else
	  {
	   A_ChangeFlag("VISIBILITYPULSE", 0);
       A_ChangeFlag("DONTRIP", 0);
       A_ChangeFlag("DONTSQUASH", 0);
       A_ChangeFlag("DONTMORPH", 0);
       A_ChangeFlag("DONTBLAST", 0);
	  }
	 }
	 else
	 {
      A_ChangeFlag("NOFEAR", 0);
      A_ChangeFlag("CANTSEEK", 0);
      A_ChangeFlag("NOINFIGHTING", 0);
      A_ChangeFlag("THRUSPECIES", 0);
      A_ChangeFlag("DONTHARMSPECIES", 0);
      A_ChangeFlag("NORADIUSDMG", 0);
	 }
	}
    SKUL AABB 3 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEEVENMORE",1); }
	 else { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SKUL C 8 BRIGHT
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	}
    SKUL D 4 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }

	 A_GiveInventory("50PercentDMGWeakness",1);
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_SkullAttack(36);
	 }
	 else
	 {
	  A_SkullAttack(30);
	 }
	}
    SKUL CCDD 2 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_FaceTarget; }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
	  A_CustomMeleeAttack(random(1,8)*4,"none","none","Melee",true);
	 }
	}
    Goto Missile+3

  Pain:
    SKUL E 0 Bright
	{
 	 A_TakeInventory("50PercentDMGWeakness",9999);
	}
    SKUL E 3 Bright
    SKUL E 3 Bright A_Pain
    Goto See
  Pain.Fist:
    SKUL E 0 Bright
	{
 	 A_TakeInventory("50PercentDMGWeakness",9999);
	}
    SKUL E 3 Bright
    SKUL E 3 Bright A_Pain
    SKUL EE 3 Bright
    Goto See
  Pain.Kick:
    SKUL E 0 Bright
	{
 	 A_TakeInventory("50PercentDMGWeakness",9999);
	}
    SKUL E 3 Bright
    SKUL E 3 Bright A_Pain
    SKUL EEEE 3 Bright
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SKUL F 0 Bright A_TakeInventory("50PercentDMGWeakness",9999)
    SKUL F 6 BRIGHT
    SKUL G 6 BRIGHT A_Scream
    SKUL H 6 BRIGHT
    SKUL I 6 BRIGHT A_NoBlocking
    SKUL J 6
    SKUL K 6
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SKUL E 5 A_GenericFreezeDeath
    SKUL E 1 A_FreezeDeathChunks
    wait
 }
}

actor DSDemon : Demon 26518
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/PinkyDemon Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana 16
  dropitem Medikit 2
  dropitem GuardSphere 2
  dropitem GuardSphere 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  DamageFactor "Crush", 5.6
  DamageFactor "Fire", 0.9 // Pinkies = -10% Fire Damage
  Painchance "Fire", 162 // Pinkies = -10% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 180
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  Species "Pinky"
  +DONTHURTSPECIES
  
  states
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    SARG A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SARG AB 10 A_Look
    goto Spawn+1
  See:
    SARG A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    SARG AABBCCDD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    loop

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SARG EF 8
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(7); }
	}
    SARG G 8
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(7); }
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomMeleeAttack( ((random(1,10)*4) * ACS_NamedExecuteWithResult("CrisisMultiplier")) ,"none","none","Melee",true); // A_SargAttack
	 }
	 else
	 {
	  A_CustomMeleeAttack(random(1,10)*4,"none","none","Melee",true); // A_SargAttack
	 }
	}
    goto See

  Pain:
    SARG H 2 Fast
    SARG H 2 Fast A_Pain
    Goto See
  Pain.Fist:
    SARG H 2 Fast
    SARG H 2 Fast A_Pain
    SARG HH 2 Fast
    Goto See
  Pain.Kick:
    SARG H 2 Fast
    SARG H 2 Fast A_Pain
    SARG HHHH 2 Fast
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SARG I 8
    SARG J 8 A_Scream
    SARG K 4
    SARG L 4 A_NoBlocking
    SARG M 4
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SARG N -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SARG H 5 A_GenericFreezeDeath
    SARG H 1 A_FreezeDeathChunks
    wait
  Raise: 
    SARG N 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SARG MLKJI 5
    Goto See 
  }
}

actor DSSpectre : Spectre 26519
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/PinkyDemon Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana 16
  dropitem GuardSphere 2
  dropitem GuardSphere 2
  dropitem BlurSphere2 2
  dropitem BlurSphere2 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  DamageFactor "Crush", 5.6
  DamageFactor "Fire", 0.9 // Pinkies = -10% Fire Damage
  Painchance "Fire", 162 // Pinkies = -10% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 180
  Painchance "Fist", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 255 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  Species "Pinky"
  +DONTHURTSPECIES

  states
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    SARG A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SARG AB 10 A_Look
    goto Spawn+1
  See:
    SARG A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    SARG AABBCCDD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    loop

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SARG EF 8
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(7); }
	}
    SARG G 8
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(7); }
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomMeleeAttack( ((random(1,10)*4) * ACS_NamedExecuteWithResult("CrisisMultiplier")) ,"none","none","Melee",true); // A_SargAttack
	 }
	 else
	 {
	  A_CustomMeleeAttack(random(1,10)*4,"none","none","Melee",true); // A_SargAttack
	 }
	}
    goto See

  Pain:
    SARG H 2 Fast
    SARG H 2 Fast A_Pain
    Goto See
  Pain.Fist:
    SARG H 2 Fast
    SARG H 2 Fast A_Pain
    SARG HH 2 Fast
    Goto See
  Pain.Kick:
    SARG H 2 Fast
    SARG H 2 Fast A_Pain
    SARG HHHH 2 Fast
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SARG I 8
    SARG J 8 A_Scream
    SARG K 4
    SARG L 4 A_NoBlocking
    SARG M 4
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SARG N -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SARG H 5 A_GenericFreezeDeath
    SARG H 1 A_FreezeDeathChunks
    wait
  Raise: 
    SARG N 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SARG MLKJI 5
    Goto See 
  }
}

actor BloodDemon : Demon 3110
{ 
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/PinkyDemon Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana 24
  dropitem DoomSpellMana 24
  dropitem Medikit 2
  dropitem Medikit 2
  dropitem GuardSphere 2
  dropitem GuardSphere 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  Health 300 
  Speed 15 
  Height 56
  Radius 30
  Mass 400
  Meleedamage 10
  REACTIONTIME 8 
  MONSTER
  +FLOORCLIP
  DamageFactor "Normal", 0.875
  RadiusDamageFactor 0.875
  DamageFactor "Explosive", 0.875
  SeeSound "blooddemon/sight"
  PainSound "blooddemon/pain"
  DeathSound "blooddemon/death"
  ActiveSound "blooddemon/active"
  //MeleeSound "blooddemon/melee"
  Obituary "%o Was chewed up and spat out by a Blood demon."
  HitObituary "%o Was chewed up and spat out by a Blood demon." 

  DamageFactor "Crush", 5.6
  DamageFactor "Thunder", 1.5 // Pinkies = +50% Thunder Damage
  Painchance "Thunder", 202 // Pinkies = +50% Pain Chance
  DamageFactor "Fire", 0.666 // Pinkies = -33% Fire Damage
  Painchance "Fire", 90 // Pinkies = -33% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 135
  Painchance "Fist", 201 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 201 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  Species "Pinky"
  +DONTHURTSPECIES

  States 
  { 
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SRG2 E 0 A_PlaySound("blooddemon/melee")
    SRG2 EF 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    SRG2 G 6
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomMeleeAttack(((random(1,10)*10) * ACS_NamedExecuteWithResult("CrisisMultiplier")),"none","none","Melee",true); // A_SargAttack
	 }
	 else
	 {
	  A_CustomMeleeAttack(random(1,10)*10,"none","none","Melee",true); // A_SargAttack; // A_SargAttack
	 }
	}
    Goto See 

  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    SRG2 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SRG2 AB 10 A_Look
    goto Spawn+1
  See: 
    SRG2 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    SRG2 A 0 A_PlaySound("blooddemon/walk")
    SRG2 A 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase("Melee","", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
    SRG2 ABB 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    SRG2 C 0 A_PlaySound("blooddemon/walk")
    SRG2 CCDD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    SRG2 A 0 A_PlaySound("blooddemon/walk")
    SRG2 AA 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    SRG2 B 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase("Melee","", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
    SRG2 B 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    SRG2 C 0 A_PlaySound("blooddemon/walk")
    SRG2 CCDD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    SRG2 A 0 A_PlaySound("blooddemon/walk")
    SRG2 AABB 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    SRG2 C 0 A_PlaySound("blooddemon/walk")
    SRG2 C 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    SRG2 C 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase("Melee","", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
    SRG2 DD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    SRG2 A 0 A_PlaySound("blooddemon/walk")
    SRG2 AABB 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    SRG2 C 0 A_PlaySound("blooddemon/walk")
    SRG2 CCD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    SRG2 D 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase("Melee","", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
    Loop 

  Pain: 
    SRG2 H 2 Fast
    SRG2 H 2 Fast A_Pain
    Goto See
  Pain.Fist:
    SRG2 H 2 Fast
    SRG2 H 2 Fast A_Pain
    SRG2 HH 2 Fast
    Goto See
  Pain.Kick:
    SRG2 H 2 Fast
    SRG2 H 2 Fast A_Pain
    SRG2 HHHH 2 Fast
    Goto See
	
  Pain.Electric: 
  Pain.Lightning: 
  Pain.Thunder: 
    SRG2 H 2
    SRG2 H 2
    SRG2 H 2
	{
	 A_Pain;
     A_PlaySound("elecstun");
     A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	}
    SRG2 H 2
    SRG2 H 2
    SRG2 H 2
	{
     A_PlaySound("elecstun");
     A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	}
    SRG2 H 2
    SRG2 H 2
    SRG2 H 2
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SRG2 I 8 
    SRG2 I 0 A_FaceTarget
    SRG2 J 0 A_SpawnItemEx("BloodDemonArm", 10, 0, 32, 0, 8, 0, 0, 128)
    SRG2 J 8 A_Scream
    SRG2 K 4 
    SRG2 L 4 A_NoBlocking
    SRG2 M 4 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SRG2 N -1 
    Stop 
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SRG2 H 5 A_GenericFreezeDeath
    SRG2 H 1 A_FreezeDeathChunks
    wait
  Raise: 
    SRG2 N 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SRG2 MLKJI 5
    Goto See 
  } 
}

actor BloodDemonArm
{
  Radius 8
  Height 8
  Speed 8
  +DOOMBOUNCE
  +DROPOFF
  +Missile
  States
  {
    Spawn:
     SG2A ABCDEFGH 2
     Loop
    Death:
     SG2A I -1
     Loop
  }
}

actor BloodSpectreArm
{
  +SHADOW
  RenderStyle OptFuzzy
  Alpha 0.5
  Radius 8
  Height 8
  Speed 8
  +DOOMBOUNCE
  +DROPOFF
  +Missile
  States
  {
    Spawn:
     SG2A ABCDEFGH 2
     Loop
    Death:
     SG2A I -1
     Loop
  }
}

actor BloodSpectre : BloodDemon 26521
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/PinkyDemon Type"
  dropitem DoomSpellMana 24
  dropitem DoomSpellMana 24
  dropitem Medikit 2
  dropitem Medikit 2
  dropitem GuardSphere 2
  dropitem GuardSphere 2
  dropitem BlurSphere2 2
  dropitem BlurSphere2 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  +SHADOW
  RenderStyle OptFuzzy
  Alpha 0.5
  Obituary "%o Was chewed up and spat out by a Blood spectre."
  HitObituary "%o Was chewed up and spat out by a Blood spectre." 

  DamageFactor "Crush", 5.6
  DamageFactor "Thunder", 1.5 // Pinkies = +50% Thunder Damage
  Painchance "Thunder", 202 // Pinkies = +50% Pain Chance
  DamageFactor "Fire", 0.666 // Pinkies = -33% Fire Damage
  Painchance "Fire", 90 // Pinkies = -33% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 135
  Painchance "Fist", 201 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 201 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  Species "Pinky"
  +DONTHURTSPECIES

  States
  {
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SRG2 I 8 
    SRG2 I 0 A_FaceTarget
    SRG2 J 0 A_SpawnItemEx("BloodSpectreArm", 10, 0, 32, 0, 8, 0, 0, 128)
    SRG2 J 8 A_Scream
    SRG2 K 4 
    SRG2 L 4 A_NoBlocking
    SRG2 M 4 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SRG2 N -1 
    Stop 
  }
}

actor ChaingunDemon : BloodDemon 26522
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/PinkyDemon Type"
  var int user_shotsfired; var int user_shotsfiredmax;
  var float user_shotaccuracy; var float user_shotaccuracy1; var float user_shotaccuracy2;
  var float user_shotzaccuracy; var float user_shotzaccuracy1; var float user_shotzaccuracy2;
  dropitem DoomSpellMana 24
  dropitem DoomSpellMana 24
  dropitem Medikit 2
  dropitem Medikit 2
  dropitem GuardSphere 2
  dropitem GuardSphere 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  AttackSound ""
  Dropitem "Chaingun"

  Obituary "%o was mowed down by a chaingun-wielding Blood Demon." 
  HitObituary "%o Was chewed up and spat out by a Blood demon." 

  Species "Pinky"
  +DONTHURTSPECIES

  States 
  { 
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn: 
    CRG2 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    CRG2 AB 10 A_Look
    goto Spawn+1
  See: 
    CRG2 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    CRG2 A 0 A_PlaySound("blooddemon/walk")
    CRG2 A 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
    CRG2 ABB 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    CRG2 C 0 A_PlaySound("blooddemon/walk")
    CRG2 CCDD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    CRG2 A 0 A_PlaySound("blooddemon/walk")
    CRG2 AA 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    CRG2 B 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
    CRG2 B 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    CRG2 C 0 A_PlaySound("blooddemon/walk")
    CRG2 CCDD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    CRG2 A 0 A_PlaySound("blooddemon/walk")
    CRG2 AABB 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    CRG2 C 0 A_PlaySound("blooddemon/walk")
    CRG2 C 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    CRG2 C 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
    CRG2 DD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    CRG2 A 0 A_PlaySound("blooddemon/walk")
    CRG2 AABB 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    CRG2 C 0 A_PlaySound("blooddemon/walk")
    CRG2 CCD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    CRG2 D 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
    Loop 

  Melee: 
  Missile:
    TNT1 A 0
	{
 	 A_SetUserVar("user_shotsfiredmax",random(15,45));
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(10,30))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(8,24))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(6,18))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(4,12))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(2,6))); }
    }
    CRG2 H 9
	{
	 A_FaceTarget;
	 A_SetUserVar("user_shotaccuracy",22.5);
	 A_SetUserVar("user_shotzaccuracy",0.0);
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(4); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*5)/8)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*3)/8)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(5); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*6)/8)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*4)/8)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*6)/8)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*5)/8)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(7); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*6)/8)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*6)/8)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(8); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*7)/8)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*7)/8)); }
	 A_SetUserVar("user_shotaccuracy1",user_shotaccuracy/-2); A_SetUserVar("user_shotaccuracy2",user_shotaccuracy/2);
	 A_SetUserVar("user_shotzaccuracy1",user_shotzaccuracy/-2); A_SetUserVar("user_shotzaccuracy2",user_shotzaccuracy/2);
	}
  StartMissile:
    CRG2 E 3 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	 A_FaceTarget;
     A_PlaySound("chainguy/attack", CHAN_WEAPON);
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, ((random(1,5)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, CBAF_NORANDOM);
	  }
	  else
	  {
	   A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(1,5)*3, "BulletPuff", 0, CBAF_NORANDOM);
	  }
	 }
	 else
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       A_CustomMissile("ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	  }
	  else
	  {
       A_CustomMissile("ZombieBulletTracer", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	  }
	 }
     A_SetUserVar("user_shotsfired",user_shotsfired+1);
     If (A_JumpIf(user_shotsfired > user_shotsfiredmax, "EndMissile")) { return state("EndMissile"); }
	 return state("");
    }
    TNT1 A 0 A_MonsterRefire(32,"See")
    CRG2 F 3 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	 A_FaceTarget;
     A_PlaySound("chainguy/attack", CHAN_WEAPON);
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, ((random(1,5)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, CBAF_NORANDOM);
	  }
	  else
	  {
	   A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, 1, random(1,5)*3, "BulletPuff", 0, CBAF_NORANDOM);
	  }
	 }
	 else
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       A_CustomMissile("ZombieBulletTracerCrisis", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	  }
	  else
	  {
       A_CustomMissile("ZombieBulletTracer", 32, 12, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	  }
	 }
     A_SetUserVar("user_shotsfired",user_shotsfired+1);
     If (A_JumpIf(user_shotsfired > user_shotsfiredmax, "EndMissile")) { return state("EndMissile"); }
	 return state("");
    }
    TNT1 A 0 A_MonsterRefire(32,"EndMissile")
    goto StartMissile
  EndMissile:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    CRG2 H 9
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(8); }
	}
    Goto See

  Pain: 
    CRG2 H 2 Fast
    CRG2 H 2 Fast A_Pain
    Goto See
  Pain.Fist:
    CRG2 H 2 Fast
    CRG2 H 2 Fast A_Pain
    CRG2 HH 2 Fast
    Goto See
  Pain.Kick:
    CRG2 H 2 Fast
    CRG2 H 2 Fast A_Pain
    CRG2 HHHH 2 Fast
    Goto See
  Pain.Electric: 
  Pain.Lightning: 
  Pain.Thunder: 
    CRG2 H 2
    CRG2 H 2
    CRG2 H 2 A_Pain
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    CRG2 H 2
    CRG2 H 2
    CRG2 H 2
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    CRG2 H 2
    CRG2 H 2
    CRG2 H 2
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SRG2 I 8 
    SRG2 I 0 A_FaceTarget
    SRG2 J 0 A_SpawnItemEx("BloodDemonArm", 10, 0, 32, 0, 8, 0, 0, 128)
    SRG2 J 8 A_Scream
    SRG2 K 4 
    SRG2 L 4 A_NoBlocking
    SRG2 M 4 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SRG2 N -1 
    Stop 
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SRG2 H 5 A_GenericFreezeDeath
    SRG2 H 1 A_FreezeDeathChunks
    wait
  Raise: 
    SRG2 N 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SRG2 MLKJI 5
    Goto See
 }
}

actor ChaingunSpectre : ChaingunDemon 26524
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/PinkyDemon Type"
  +SHADOW
  RenderStyle OptFuzzy
  Alpha 0.5
  Obituary "%o was mowed down by a chaingun-wielding Blood spectre." 
  HitObituary "%o Was chewed up and spat out by a Blood spectre." 

  Species "Pinky"
  +DONTHURTSPECIES

  States 
  { 
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SRG2 I 8 
    SRG2 I 0 A_FaceTarget
    SRG2 J 0 A_SpawnItemEx("BloodSpectreArm", 10, 0, 32, 0, 8, 0, 0, 128)
    SRG2 J 8 A_Scream
    SRG2 K 4 
    SRG2 L 4 A_NoBlocking
    SRG2 M 4 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SRG2 N -1 
    Stop 
 }
}

actor DSRevenant : Revenant 26523
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Revenant Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana2 16
 dropitem RocketAmmo 2 1
 dropitem RocketAmmo 2 1
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor

  DamageFactor "Crush", 12
  DamageFactor "Thunder", 1.25 // Revenants = +25% Thunder Damage
  Painchance "Thunder", 125 // Revenants = +25% Pain Chance
  DamageFactor "Fire", 1.33 // Revenants = +33% Fire Damage
  Painchance "Fire", 133 // Revenants = +33% Pain Chance
  DamageFactor "Holy", 2.25 // Undead = +125% Holy Damage
  Painchance "Holy", 225 // Undead = +125% Pain Chance

  Painchance 100
  Painchance "Fist", 150 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 250 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 150 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  PainSound "revenant/pain"

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    SKEL A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SKEL AB 10 A_Look
    goto Spawn+1
  See:
    SKEL A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    SKEL AABBCCDDEEFF 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    loop

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SKEL G 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_SkelWhoosh;
	 A_FaceTarget;
	}
    SKEL H 6 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    SKEL I 6
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMeleeAttack((random(1,10)*6)*ACS_NamedExecuteWithResult("CrisisMultiplier"),"skeleton/melee","none","Melee",true);
	 }
	 else
	 {
	  A_CustomMeleeAttack(random(1,10)*6,"skeleton/melee","none","Melee",true);
	 }
    }
    goto See

  Pain:
    SKEL L 5
    SKEL L 5 A_Pain
    Goto See
  Pain.Fist:
    SKEL L 5
    SKEL L 5 A_Pain
    SKEL LL 5
    Goto See
  Pain.Kick:
    SKEL L 5
    SKEL L 5 A_Pain
    SKEL LLLL 5
    Goto See
	
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    SKEL J 0 bright A_FaceTarget
    SKEL J 10 bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    SKEL K 10 // A_SkelMissile
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) 
	  {
	   A_CustomMissile("RevenantTracerCrisis",40,10); 
	   A_CustomMissile("RevenantTracerCrisis",40,-10); 
	  }
	  else
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) 
	  {
	   if (random(1,4) == 1)
	   {
	    A_CustomMissile("RevenantTracerCrisis",40,10); 
	    A_CustomMissile("RevenantTracerCrisis",40,-10); 
	   }
	   else
	   {
	    A_CustomMissile("RevenantTracerCrisis",40); 
	   }
	  }
	  else
	  {
	   A_CustomMissile("RevenantTracerCrisis",40);
	  }
	 }
	 else
	 {
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) 
	  {
	   A_CustomMissile("RevenantTracerNew",40,10); 
	   A_CustomMissile("RevenantTracerNew",40,-10); 
	  }
	  else
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) 
	  {
	   if (random(1,4) == 1)
	   {
	    A_CustomMissile("RevenantTracerNew",40,10); 
	    A_CustomMissile("RevenantTracerNew",40,-10); 
	   }
	   else
	   {
	    A_CustomMissile("RevenantTracerNew",40); 
	   }
	  }
	  else
	  {
	   A_CustomMissile("RevenantTracerNew",40);
	  }
	 }
	}
    SKEL K 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;
	}
    goto See

  Pain:
    SKEL L 5
    SKEL L 5 A_Pain
    Goto See
  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    SKEL L 5
    SKEL L 5 A_Pain
    SKEL L 5
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SKEL LM 7
    SKEL N 7 A_Scream
    SKEL O 7 A_NoBlocking
    SKEL P 7
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SKEL Q -1
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SKEL L 5 A_GenericFreezeDeath
    SKEL L 1 A_FreezeDeathChunks
    wait
  Raise:
    SKEL Q 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SKEL PONML 5
    Goto See 
 }
}

actor DeathIncarnate : Revenant 30115 
{ 
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Revenant Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 var int user_shotsfired; var int user_shotsfiredmax;
 var float user_shotaccuracy; var float user_shotaccuracy1; var float user_shotaccuracy2;
 var float user_shotzaccuracy; var float user_shotzaccuracy1; var float user_shotzaccuracy2;
 dropitem DoomSpellMana1 64
 dropitem DoomSpellMana2 32
 dropitem DoomSpellMana3 8
 dropitem RocketAmmo 2 1
 dropitem RocketAmmo 2 1
 dropitem RocketAmmo 2 1
 dropitem RocketAmmo 2 1
 dropitem RocketAmmo 2 1
 dropitem RocketAmmo 2 1
 dropitem RocketAmmo 2 1
 dropitem RocketAmmo 2 1
 dropitem RocketAmmo 2 1
 dropitem RocketAmmo 2 1
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor

 Health 600 
 Radius 20 
 Height 56 
 Mass 500 
 Speed 12
 MeleeDamage 7
 MONSTER
 +FLOORCLIP 
 +SHORTMISSILERANGE
 +DONTHURTSPECIES
 +AVOIDMELEE
 Obituary "%o was killed by a Death Incarnate's glare."
 HitObituary "%o was beaten to death by a Death Incarnate."
 SeeSound "monster/incsit" 
 PainSound "dincarnate/pain" 
 DeathSound "monster/incdth" 
 ActiveSound "monster/incact"
 AttackSound "monster/incatk"
 MeleeSound "monster/inchit"

 DamageFactor "Normal", 1.25
 RadiusDamageFactor 1.25
 DamageFactor "Explosive", 1.25

 Damagefactor "IncarnateGlare", 0
 Damagefactor "Holy", 18 // Hades Scions are already 6x weak to Holy. Death Incarnate itself is 3x more weak to Holy, for a total of 18x damage.
 Damagefactor "Sceptre", 6

 Painchance "Holy", 255 // Undead = +250% Pain Chance

 DamageFactor "Crush", 12
 DamageFactor "Fire", 0.2 // Incarnates = -80% Fire Damage
 Painchance "Fire", 13 // Incarnates = -80% Pain Chance


 Painchance 64
 Painchance "Fist", 96 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "Kick", 160 // Kick attacks have a +150% chance of stunning an enemy
 Painchance "Gauntlets", 96 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "GravityHP", 255
 Painchance "GravityMP", 255
 Painchance "GravityHPMP", 255 


 States 
 { 
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    INCA A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    INCA AB 10 A_Look
    goto Spawn+1
  See:
    INCA A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    INCA AABBCCDDEEFF 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_ChangeFlag("SHORTMISSILERANGE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    loop

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
  Melee2:
    INCA G 0 A_Jump(128,5) // to -1
    INCA G 0 A_FaceTarget 
    INCA G 6  
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_SkelWhoosh;
	}
    INCA H 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    INCA I 6
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMeleeAttack((random(1,10)*7)*ACS_NamedExecuteWithResult("CrisisMultiplier"),"skeleton/melee","none","Melee",true);
	 }
	 else
	 {
	  A_CustomMeleeAttack(random(1,10)*7,"skeleton/melee","none","Melee",true); // A_SkelFist
	 }
	}
    Goto See
    INCA R 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_SkelWhoosh;
	}
    INCA S 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    INCA T 5
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMeleeAttack((random(1,11)*6)*ACS_NamedExecuteWithResult("CrisisMultiplier"),"skeleton/melee","none","Melee",true);
	 }
	 else
	 {
	  A_CustomMeleeAttack(random(1,11)*6,"skeleton/melee","none","Melee",true); // A_SkelFist
	 }
	}
    INCA G 5
	{
	 A_SkelWhoosh;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	}
    INCA H 5
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	}
    INCA I 5
    {
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMeleeAttack((random(1,11)*6)*ACS_NamedExecuteWithResult("CrisisMultiplier"),"skeleton/melee","none","Melee",true);
	 }
	 else
	 {
	  A_CustomMeleeAttack(random(1,11)*6,"skeleton/melee","none","Melee",true); // A_SkelFist
	 }
	}
    Goto See 

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    INCA J 5
	{
	 A_SetUserVar("user_shotsfiredmax",10);	 
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+8); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*2)/4)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*2)/4)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+4); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*3)/4)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*3)/4)); }
	 A_SetUserVar("user_shotaccuracy",30.0);
	 A_SetUserVar("user_shotaccuracy1",user_shotaccuracy/-2); A_SetUserVar("user_shotaccuracy2",user_shotaccuracy/2);
	 A_SetUserVar("user_shotzaccuracy",0.0);
	 A_SetUserVar("user_shotzaccuracy1",user_shotzaccuracy/-2); A_SetUserVar("user_shotzaccuracy2",user_shotzaccuracy/2);
	 A_FaceTarget;
	}
    INCA J 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    INCA U 10 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }
	 A_FaceTarget;

     A_SetUserVar("user_canusecrisisatk",0);
     if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if (GetCVar("dvds_monsterbulletstracers") == 0) // Hitscan
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, user_shotsfiredmax, (3 * ACS_NamedExecuteWithResult("CrisisMultiplier")), "DIPuff", 1024);
	  }
	  else
	  {
	   A_CustomBulletAttack(user_shotaccuracy, user_shotzaccuracy, user_shotsfiredmax, 3, "DIPuff", 1024);
	  }
	 }
	 else // Tracers
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       for (A_SetUserVar(user_shotsfired, 0); user_shotsfired < user_shotsfiredmax; A_SetUserVar(user_shotsfired, user_shotsfired + 1))
       {
	    A_CustomMissile("IncarnateGlareTracerCrisis", 56, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	   }
	  }
	  else
	  {
       for (A_SetUserVar(user_shotsfired, 0); user_shotsfired < user_shotsfiredmax; A_SetUserVar(user_shotsfired, user_shotsfired + 1))
       {
 	    A_CustomMissile("IncarnateGlareTracer", 56, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	   }
 	  }
	 }
	}
    INCA K 10
    Goto See 

  Pain: 
    INCA L 5 
    INCA L 5 A_Pain
    Goto See 
  Pain.Fist:
    INCA L 5
    INCA L 5 A_Pain
    INCA LL 5
    Goto See
  Pain.Kick:
    INCA L 5
    INCA L 5 A_Pain
    INCA LLLL 5
    Goto See
	
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 A_Jump(192,9) // 75% of the time it's a fake death
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1) // True death
    INCA L 7 
    INCA M 7 
    INCA N 7 A_Scream 
    INCA O 7 A_NoBlocking 
    INCA P 7 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    INCA Q -1 
    Stop
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,2,1) // Fake death
    INCA L 7 
    INCA M 6 
    INCA N 7 A_Scream 
    INCA O 6 A_NoBlocking
    INCA P 7
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    INCA Q 0 A_Jump(192,4)
    INCA Q 0 A_Jump(128,4)
    INCA Q 0 A_Jump(96,4)
    INCA Q 0 A_Jump(64,4)
    INCA Q 115 
    INCA Q 115 
    INCA Q 115 
    INCA Q 115 
    INCA Q 115
    INCA Q -1 Thing_Raise(0)       
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    INCX A 10 Bright A_Playsound("monster/incexp")
    INCX BC 5 Bright
    INCX D 5 Bright A_NoBlocking
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    INCX D 0 Bright A_SpawnItem("HadesSphere",0,32) 
    INCX EFGHIJ 5 Bright
    INCX K -1 
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    INCA L 5 A_GenericFreezeDeath
    INCA L 1 A_FreezeDeathChunks
    wait
  Raise:
    INCA Q 0 A_KillChildren
    INCA Q 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    INCA PONML 5
    Goto See 
 } 
}

actor DIPuff
{   
  Radius 0
  Height 1
  Speed 0
  PROJECTILE
  +NOBLOCKMAP
  +NOGRAVITY
  +RANDOMIZE
  +PUFFONACTORS
  RENDERSTYLE Add
  DamageType IncarnateGlare
  States
  {
   Spawn:
	  INPF ABCDE 3 Bright
      Stop 
  }
}


actor HadesSphere 30116 
{ 
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Hades Scions"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 Health 35
 Radius 16
 Height 32 
 Mass 3000 
 Speed 10
 ExplosionDamage 128
 ExplosionRadius 112
 Damagefactor "IncarnateGlare", 0
 Damagefactor "Holy", 6
 Damagefactor "Sceptre", 2
 RENDERSTYLE Normal
 Obituary "%o was blown away by a Hades Sphere."
 PAINCHANCE 0 
 MONSTER
 +LOOKALLAROUND
 +DONTGIB
 +NOTARGET
 +NOGRAVITY 
 +FLOAT
 +DONTFALL
 +DONTHURTSPECIES
 +LONGMELEERANGE
 +THRUSPECIES
 Species "HadesSphere"

 SeeSound "monster/hadsit"

 dropitem FloraRandomArmor

  DamageFactor "Crush", 16
  Damagefactor "Magic", 2.56
  Painchance "Holy", 255 // Demons = +300% Pain Chance
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

 States 
 { 
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    TNT1 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    TNT1 A 4 Bright A_Look      
    goto Spawn+1
  See:
    HADE E 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    HADE EFGH 4 Bright
	goto Chase

  Chase:
    HADE H 0 Bright A_SetShootable
    HADE H 0 Bright A_SetSolid
    HADE A 0 Bright A_Playsound("monster/hadwlk")
    HADE AABBCCDD 2 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    HADE D 0 Bright A_Jump (32,"PhaseOut") 
    loop

  PhaseOut:
    HADE H 0 Bright A_UnSetSolid
    HADE H 0 Bright A_UnSetShootable
    HADE H 5 Bright A_Playsound("monster/hadtel")
    HADE GFEIJKL 4 Bright
	goto Stalking

  Stalking:
    TNT1 AAAAAAA 2 Bright A_Chase("","",CHF_NOPLAYACTIVE|CHF_FASTCHASE)
    TNT1 A 0 Bright A_Jump(96,"PhaseIn") 
    loop

  PhaseIn:
    HADE L 3 Bright A_Playsound("monster/hadtel")
    HADE KJIEFG 4 Bright
    HADE H 0 Bright A_SetShootable
    HADE H 0 Bright A_SetSolid
    Goto Chase

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    HADE H 0 A_SetInvulnerable
    HADE HGFE 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(3); }
	}
    HADE E 0 A_UnSetInvulnerable
    HADE E 0 A_Die
    stop
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HADE E 0 Bright A_Noblocking
    HADE E 0 Bright A_CustomMissile("HSBoom",0,0,0,0)
    HADE E 0 A_Die
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HADE N 0 Bright A_Noblocking
    HADE H 5 Bright A_PlaySound("monster/haddth")
    HADE GFE 4 Bright
    HADE RSTUVWX 4 Bright
    HADE E 0 A_Die
    Stop
  Ice:
    goto Death
 } 
}


actor DSCacodemon : Cacodemon 26527
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Cacodemon Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana2 16
 dropitem GreenArmor 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor

  Species "Cacodemon"
  +DONTHURTSPECIES
  bloodcolor "blue"

  DamageFactor "Crush", 4.8
  DamageFactor "Thunder", 0.66 // Cacodemons = -33% Thunder Damage
  Painchance "Thunder", 85 // Demons = -33% Pain Chance
  DamageFactor "Fire", 0.66 // Cacodemons = -33% Fire Damage
  Painchance "Fire", 85 // Demons = -33% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 128
  Painchance "Fist", 192 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 192 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  PainSound "cacodemon/pain"

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    HEAD A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HEAD A 10 A_Look
    goto Spawn+1
  See:
    HEAD A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    HEAD A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    HEAD BC 5
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    HEAD D 5 bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomComboAttack("CacodemonBallCrisis", 32, ((random(1,10)*6) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "caco/melee"); // See CacodemonBall
	 }
	 else
	 {
	  A_CustomComboAttack("CacodemonBall", 32, (random(1,10)*6), "caco/melee"); // See CacodemonBall
	 }
	}
    goto See

  Pain:
    HEAD E 3
    HEAD E 3 A_Pain
    HEAD F 6
    Goto See
  Pain.Fist:
    HEAD E 3
    HEAD E 3 A_Pain
    HEAD FF 6
    Goto See
  Pain.Kick:
    HEAD E 3
    HEAD E 3 A_Pain
    HEAD FFFF 6
    Goto See

  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    HEAD E 2
    HEAD E 2 A_Pain
    HEAD F 4
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HEAD G 8
    HEAD H 8 A_Scream
    HEAD IJ 8
    HEAD K 8 A_NoBlocking
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    HEAD L -1 A_SetFloorClip
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    HEAD F 5 A_GenericFreezeDeath
    HEAD F 1 A_FreezeDeathChunks
    wait
  Raise:
    HEAD L 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HEAD L 8 A_UnsetFloorClip
    HEAD KJIHG 8
    Goto See
 }
}

actor Cacolantern : Cacodemon 5006
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Cacodemon Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana2 24
  dropitem DoomSpellMana2 24
  dropitem GreenArmor 2
  dropitem BlueArmor 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  PainSound "cacodemon/pain"

  Species "Cacodemon"
  +DONTHURTSPECIES
  +AVOIDMELEE

  Health 800
  Obituary "%o was smitten by a cacolantern."
  HitObituary "%o got too close to a cacolantern."
  bloodcolor "blue"

  DamageFactor "Normal", 0.9375
  RadiusDamageFactor 0.9375
  DamageFactor "Explosive", 0.9375

  DamageFactor "Crush", 4.8
  DamageFactor "Thunder", 0.83 // Cacodemons = -17% Thunder Damage
  Painchance "Thunder", 94 // Demons = -17% Pain Chance
  DamageFactor "Fire", 0.50 // Cacodemons = -50% Fire Damage
  Painchance "Fire", 56 // Demons = -50% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 112
  Painchance "Fist", 168 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 168 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    HED2 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HED2 A 10 A_Look
    goto Spawn+1
  See:
    HED2 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    HED2 A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    HED2 BC 5
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    HED2 D 5 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomComboAttack("CacolanternBallCrisis", 32, ((random(1,10)*8) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "caco/melee"); // See CacodemonBall
	 }
	 else
	 {
	  A_CustomComboAttack("CacolanternBall", 32, (random(1,10)*8), "caco/melee"); // See CacodemonBall
	 }
	}
    goto See

  Pain:
    HED2 E 3
    HED2 E 3 A_Pain
    HED2 F 6
    Goto See
  Pain.Fist:
    HED2 E 3
    HED2 E 3 A_Pain
    HED2 FF 6
    Goto See
  Pain.Kick:
    HED2 E 3
    HED2 E 3 A_Pain
    HED2 FFFF 6
    Goto See
  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    HED2 E 3
    HED2 E 3 A_Pain
    HED2 F 4
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HED2 G 8 A_NoBlocking
    HED2 H 8 A_Scream
    HED2 IJK 8
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    HED2 L -1 A_SetFloorClip
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    HED2 F 5 A_GenericFreezeDeath
    HED2 F 1 A_FreezeDeathChunks
    wait
  Raise:
    HED2 L 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HED2 L 8 A_UnsetFloorClip
    HED2 KJIHG 8
    Goto See
  }
}

actor Abaddon : Cacolantern 5015
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Cacodemon Type"
  dropitem DoomSpellMana2 32
  dropitem DoomSpellMana2 32
  dropitem DoomSpellMana2 32
  dropitem DoomSpellMana3 16
  dropitem GreenArmor 2
  dropitem BlueArmor 2
  dropitem StoneSkin 2
  dropitem DiamondSkin 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  PainSound "cacodemon/pain"

  Species "Cacodemon"
  +DONTHURTSPECIES
  +AVOIDMELEE

  Health 1200
  Speed 12
  PainChance 40
  Obituary "%o was smitten by an abaddon."
  HitObituary "%o became food for an abaddon."
  bloodcolor "red"

  DamageFactor "Normal", 0.875
  RadiusDamageFactor 0.875
  DamageFactor "Explosive", 0.875

  DamageFactor "Crush", 4.8
  DamageFactor "Fire", 0.33 // Cacodemons = -66% Fire Damage
  Painchance "Fire", 26 // Demons = -66% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 240 // Demons = +300% Pain Chance

  Painchance 80
  Painchance "Fist", 120 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 200 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 120 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    HED3 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HED3 A 10 A_Look
    goto Spawn+1
  See:
    HED3 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    HED3 A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    HED3 BC 5
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    HED3 D 5 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }

	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
	 A_SetUserVar("user_canusecrisisatk",0);
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomComboAttack("AbaddonBallCrisis", 32, ((random(1,10)*10) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "caco/melee"); // See CacodemonBall
	 }
	 else
	 {
	  A_CustomComboAttack("AbaddonBall", 32, (random(1,10)*10), "caco/melee"); // See CacodemonBall
	 }
	}
    HED3 CBC 5
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    HED3 D 5 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomComboAttack("AbaddonBallCrisis", 32, ((random(1,10)*10) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "caco/melee"); // See CacodemonBall
	 }
	 else
	 {
	  A_CustomComboAttack("AbaddonBall", 32, (random(1,10)*10), "caco/melee"); // See CacodemonBall
	 }
	}
    goto See

  Pain:
    HED3 E 3
    HED3 E 3 A_Pain
    HED3 F 6
    Goto See
  Pain.Fist:
    HED3 E 3
    HED3 E 3 A_Pain
    HED3 FF 6
    Goto See
  Pain.Kick:
    HED3 E 3
    HED3 E 3 A_Pain
    HED3 FFFF 6
    Goto See
  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    HED3 E 3
    HED3 E 3 A_Pain
    HED3 F 6
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HED3 G 8 A_NoBlocking
    HED3 H 8 A_Scream
    HED3 IJK 8
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    HED3 L -1 A_SetFloorClip
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    HED3 F 5 A_GenericFreezeDeath
    HED3 F 1 A_FreezeDeathChunks
    wait
  Raise:
    HED3 L 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HED3 L 8 A_UnsetFloorClip
    HED3 KJIHG 8
    Goto See
  }
}


actor DSPainElemental : PainElemental 26531
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Others"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana2 16
 dropitem SoulSphere2 2
 dropitem SoulSphere2 2
 dropitem SoulSphere2 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem FloraRandomArmor

  MeleeRange 80
  +AVOIDMELEE
  DamageFactor "Crush", 4.8
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance
  obituary "%o got munched on by a Pain Elemental."

  Painchance 128
  Painchance "Fist", 192 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 192 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    PAIN A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    PAIN A 10 A_Look
    goto Spawn+1
  See:
    PAIN A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    PAIN AABBC 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    PAIN C 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;

     if (A_JumpIfCloser(1024,"IdleMissile"))
	 {
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { if (random(1,1000) <= 550) { return state("IdleMissile"); } return state(""); }
	  else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { if (random(1,1000) <= 400) { return state("IdleMissile"); } return state(""); }
	  else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { if (random(1,1000) <= 200) { return state("IdleMissile"); } return state(""); }
      return state("");
	 }
	 else { return state(""); }
     return state("");
	}
    loop

  IdleMissile:
    PAIN DE 5
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    PAIN F 5 bright    // See LostSoul
	{
	 A_FaceTarget;
	 if (random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance")) { A_PainAttack("DSLostSoul2",0,PAF_NOSKULLATTACK|PAF_AIMFACING); }
	 else { A_PainAttack("DSLostSoul",0,PAF_NOSKULLATTACK|PAF_AIMFACING); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
	goto See

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    PAIN DE 5
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    PAIN F 5 bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }

	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
	 A_SetUserVar("user_canusecrisisatk",0);
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      if (A_JumpIfTargetInsideMeleeRange(1)) { A_CustomMeleeAttack(10*random(1,6) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"caco/melee","none","Melee",true); } else 
	  {
	   if (random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance")) { A_DualPainAttack("DSLostSoul2"); A_PainAttack("DSLostSoul2");  }
	   else { A_DualPainAttack("DSLostSoul"); A_PainAttack("DSLostSoul");  }	   
	  }
	 }
	 else
	 {
      if (A_JumpIfTargetInsideMeleeRange(1)) { A_CustomMeleeAttack(10*random(1,6),"caco/melee","none","Melee",true); } else 
	  {
	   if (random(1,256) <= ACS_NamedExecuteWithResult("GetEvolveChance")) { A_PainAttack("DSLostSoul2"); }
	   else { A_PainAttack("DSLostSoul"); }
	  }
	 }
	}
    goto See

  Pain:
    PAIN G 6
    PAIN G 6 A_Pain
    Goto See
  Pain.Fist:
    PAIN G 6
    PAIN G 6 A_Pain
    PAIN GG 6
    Goto See
  Pain.Kick:
    PAIN G 6
    PAIN G 6 A_Pain
    PAIN GGGG 6
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    PAIN H 8 bright
    PAIN I 8 bright A_Scream
    PAIN JK 8 bright
    PAIN L 8 bright A_PainDie       // See LostSoul
    PAIN M 8 bright
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    PAIN G 5 A_GenericFreezeDeath
    PAIN G 1 A_FreezeDeathChunks
    wait
 }
}


actor HadesElemental 30130
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Hades Scions"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana3 24
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem DiamondSkin 2
  dropitem DiamondSkin 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem FloraRandomArmor

  obituary "%o was electricuted by a Hades Elemental."
  hitobituary "%o got chomped by a Hades Elemental."
  health 1600
  radius 31
  height 60
  mass 800
  speed 10
  MeleeDamage 10
  DamageType normal
  seesound "monster/helsit"
  painsound "monster/helpai"
  deathsound "monster/heldth"
  activesound "monster/helact"
  meleesound "caco/melee"
  MONSTER
  +FLOAT
  +NOGRAVITY
  +MISSILEMORE
  +NOTARGET
  +DONTHURTSPECIES
  +NORADIUSDMG
  +AVOIDMELEE

  DamageFactor "Holy", 6
  DamageFactor "Lightning", 0
  Damagefactor "Crush", 4.0
  Damagefactor "Fire", 0.5
  Damagefactor "Ice", 1.5
  Damagefactor "Magic", 2.56

  painchance 32
  Painchance "Fist", 48 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 80 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 48 // Fist attacks have a +50% chance of stunning an enemy
  PainChance "Ice", 64
  PainChance "Fire", 16
  Painchance "Holy", 255 // Demons = +300% Pain Chance
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  states
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    HELE A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HELE A 10 A_Look
    Goto Spawn+1
  See:
    HELE A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    HELE A 0 A_SetShootable
    HELE AAAAAAAAAAA 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
	HELE A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;

     if (A_JumpIfCloser(1024,"IdleMissile"))
	 {
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { if (random(1,1000) <= 550) { return state("IdleMissile"); } return state(""); }
	  else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { if (random(1,1000) <= 400) { return state("IdleMissile"); } return state(""); }
	  else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { if (random(1,1000) <= 200) { return state("IdleMissile"); } return state(""); }
      return state("");
	 }
	 else { return state(""); }
     return state("");
	}
    HELE A 0 // A_Jump(72,"Teleport")
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { if (random(1,256) <= 144) { return state("Teleport"); } return state(""); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { if (random(1,256) <= 120) { return state("Teleport"); } return state(""); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { if (random(1,256) <= 96) { return state("Teleport"); } return state(""); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel <= 60) { if (random(1,256) <= 72) { return state("Teleport"); } return state(""); }
	 else { if (random(1,256) <= 72) { return state("Teleport"); } return state(""); }
     return state("");
	}
    goto See+1
  Teleport:
    HELE A 0 A_UnSetshootable
    HELE A 1 A_PlaySound("monster/heltel")
    HELE A 1 A_SetTranslucent(0.90)
    HELE A 1 A_SetTranslucent(0.80)
    HELE A 1 A_SetTranslucent(0.70)
    HELE A 1 A_SetTranslucent(0.60)
    HELE A 1 A_SetTranslucent(0.50)
    HELE A 1 A_SetTranslucent(0.40)
    HELE A 1 A_SetTranslucent(0.30)
    HELE A 1 A_SetTranslucent(0.20)
    HELE A 1 A_SetTranslucent(0.10)
    TNT1 A 0 A_Jump(128,25)
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander
    TNT1 A 0 A_Jump(128,25)
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_ExtChase(0,0,1,1)
    HELE A 1 A_PlaySound("monster/heltel")
    HELE A 1 A_SetTranslucent(0.10)
    HELE A 1 A_SetTranslucent(0.20)
    HELE A 1 A_SetTranslucent(0.30)
    HELE A 1 A_SetTranslucent(0.40)
    HELE A 1 A_SetTranslucent(0.50)
    HELE A 1 A_SetTranslucent(0.60)
    HELE A 1 A_SetTranslucent(0.70)
    HELE A 1 A_SetTranslucent(0.80)
    HELE A 1 A_SetTranslucent(0.90)
    HELE A 1 A_SetTranslucent(1.0)
    HELE A 0 A_SetShootable
    goto See+1

  IdleMissile:
    HELE BC 5 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    HELE D 5 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }

     A_PainAttack("HadesSphere",0,PAF_NOSKULLATTACK|PAF_AIMFACING);
	}
    goto See+1

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
  ChooseMissile:
    HELE A 0 A_Jump(256,"Missile1","Missile2","Missile3")
 
  Missile1:
    HELE EF 5 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    HELE G 5 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomMissile("HadesElementalBallCrisis",24,0,-10,0,0);
      A_CustomMissile("HadesElementalBallCrisis",24,0,-5,0,0);
      A_CustomMissile("HadesElementalBallCrisis",24,0,0,0,0);
      A_CustomMissile("HadesElementalBallCrisis",24,0,5,0,0);
	  A_CustomMissile("HadesElementalBallCrisis",24,0,10,0,0);
	 }
	 else
	 {
      A_CustomMissile("HadesElementalBall",24,0,-10,0,0);
      A_CustomMissile("HadesElementalBall",24,0,-5,0,0);
      A_CustomMissile("HadesElementalBall",24,0,0,0,0);
      A_CustomMissile("HadesElementalBall",24,0,5,0,0);
	  A_CustomMissile("HadesElementalBall",24,0,10,0,0);
	 }
	}
    goto See+1

  Missile2:
    HELE EF 5 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    HELE G 5 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomMissile("HadesBoltCrisis",32,0,-16,0,0);
      A_CustomMissile("HadesBoltCrisis",32,0,0,0,0);
      A_CustomMissile("HadesBoltCrisis",32,0,16,0,0);
	 }
	 else
	 {
      A_CustomMissile("HadesBolt",32,0,-16,0,0);
      A_CustomMissile("HadesBolt",32,0,0,0,0);
      A_CustomMissile("HadesBolt",32,0,16,0,0);
	 }
	}
    goto See+1

  Missile3:
    HELE BC 5 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    HELE D 5 Bright 
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }

     A_DualPainAttack("HadesSphere");
	}
    goto See+1


  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
  Melee2:
    HELE ABD 5 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	}
    HELE C 5 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	 
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMeleeAttack((random(1,10) * 10) * ACS_NamedExecuteWithResult("CrisisMultiplier"), "caco/melee","none","Melee",true);
	 }
	 else
	 {
	  A_CustomMeleeAttack(random(1,10) * 10, "caco/melee","none","Melee",true);
	 }
	}
    goto See+1

  Pain:
    HELE H 3
    HELE H 3 A_Pain
    HELE H 6
    goto See
  Pain.Fist:
    HELE H 3
    HELE H 3 A_Pain
    HELE HH 6
    Goto See
  Pain.Kick:
    HELE H 3
    HELE H 3 A_Pain
    HELE HHHH 6
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HELE I 5 Bright A_Scream
    HELE JKL 5 Bright
    HELE M 5 Bright A_NoBlocking
    HELE M 0 Bright A_SpawnItemEx("HadesSphere",36,36)
    HELE M 0 Bright A_SpawnItemEx("HadesSphere",-36,36)
    HELE M 0 Bright A_SpawnItemEx("HadesSphere",-36,-36)
    HELE M 0 Bright A_SpawnItemEx("HadesSphere",36,-36)
    HELE NOP 5 Bright 
    HELE QRSTU 5 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    HELE V -1 A_SetFloorClip
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    HELE H 5 A_GenericFreezeDeath
    HELE H 1 A_FreezeDeathChunks
    wait
  Raise:
    HELE V 0 A_UnsetFloorClip
    HELE U 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HELE TSRQPONMLKJI 5
    goto See
  }
}


actor HadesOverLord 30134
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Hades Scions"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana1 112
 dropitem DoomSpellMana1 112
 dropitem DoomSpellMana2 84
 dropitem DoomSpellMana2 84
 dropitem DoomSpellMana3 56
 dropitem DoomSpellMana3 56
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem SauronGauntlets 1
 dropitem FloraRandomArmor

Health 4000
Radius 31 
Height 78 
Mass 1000 
Speed 13 
DamageType normal 
MONSTER
Obituary "%o was smitten by a Hades Overlord."
HitObituary "A Hades Overlord ate %o for lunch." 
+FLOORCLIP 
+NORADIUSDMG 
+NOTARGET
+MISSILEEVENMORE
+FLOAT
+NOGRAVITY
+DONTFALL
+AVOIDMELEE
MeleeDamage 20
MeleeRange 68
SeeSound "monster/ovlsit" 
PainSound "monster/ovlpai" 
DeathSound "monster/ovldth" 
ActiveSound "monster/ovlact"
MeleeSound "caco/melee"

  DamageFactor "Holy", 6
  DamageFactor "Lightning", 0
  Damagefactor "Crush", 4.0
  Damagefactor "Fire", 0.5
  Damagefactor "Ice", 1.5
  Damagefactor "Magic", 2.56

  PainChance 30
  Painchance "Fist", 45 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 75 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 45 // Fist attacks have a +50% chance of stunning an enemy
  PainChance "Ice", 40
  PainChance "Fire", 10
  Painchance "Holy", 120 // Demons = +300% Pain Chance
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  states
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    OVER A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    OVER A 10 A_Look
    Goto Spawn+1
  See:
    OVER A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    OVER A 0 A_UnSetInvulnerable
    OVER AABBAAC 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    OVER C 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;

     if (A_JumpIfCloser(1024,"IdleMissile"))
	 {
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { if (random(1,1000) <= 550) { return state("IdleMissile"); } return state(""); }
	  else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { if (random(1,1000) <= 400) { return state("IdleMissile"); } return state(""); }
	  else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { if (random(1,1000) <= 200) { return state("IdleMissile"); } return state(""); }
      return state("");
	 }
	 else { return state(""); }
     return state("");
	}
    OVER A 0 // A_Jump(32,"Teleport")
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { if (random(1,256) <= 68) { return state("Teleport"); } return state(""); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { if (random(1,256) <= 56) { return state("Teleport"); } return state(""); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { if (random(1,256) <= 44) { return state("Teleport"); } return state(""); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel <= 60) { if (random(1,256) <= 32) { return state("Teleport"); } return state(""); }
	 else { if (random(1,256) <= 32) { return state("Teleport"); } return state(""); }
     return state("");
	}
    goto See+1

  Teleport:
    OVER F 0 A_SetInvulnerable
    OVER F 1 A_PlaySound("monster/heltel")
    OVER F 1 A_SetTranslucent(0.90)
    OVER F 1 A_SetTranslucent(0.80)
    OVER F 1 A_SetTranslucent(0.70)
    OVER F 1 A_SetTranslucent(0.60)
    OVER F 1 A_SetTranslucent(0.50)
    OVER F 1 A_SetTranslucent(0.40)
    OVER F 1 A_SetTranslucent(0.30)
    OVER F 1 A_SetTranslucent(0.20)
    OVER F 1 A_SetTranslucent(0.10)
    OVER F 0 A_Jump(128,25)
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_ExtChase(0,0,1,1)
    TNT1 A 0 A_Jump(128,25)
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAA 0 A_ExtChase(0,0,1,1)
    OVER F 1 A_PlaySound("monster/heltel")
    OVER F 1 A_SetTranslucent(0.10)
    OVER F 1 A_SetTranslucent(0.20)
    OVER F 1 A_SetTranslucent(0.30)
    OVER F 1 A_SetTranslucent(0.40)
    OVER F 1 A_SetTranslucent(0.50)
    OVER F 1 A_SetTranslucent(0.60)
    OVER F 1 A_SetTranslucent(0.70)
    OVER F 1 A_SetTranslucent(0.80)
    OVER F 1 A_SetTranslucent(0.90)
    OVER F 1 A_SetTranslucent(1.0)
    OVER F 0 A_UnSetInvulnerable
    goto See

  IdleMissile:
    OVER DE 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    OVER FFFFF 4 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
     A_PainAttack("HSOverlord",0,PAF_AIMFACING);
	}
    goto See+1

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    OVER D 0 A_Jump(256,"Missile1","Missile2","Missile3")

  Missile1:
    OVER DE 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    OVER FFFFF 4 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
     A_PainAttack("HSOverlord",0,PAF_AIMFACING);
	}
    goto See
  Missile2:
    OVER GH 8 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    OVER H 8 Bright 
	{
	 A_FaceTarget;
	 A_PlaySound("weapons/shock");
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  if (health <= user_HPLowRange)
	  {
       A_CustomMissile("StormShot2Crisis",43,0,0,0,0);
	  }
	  else
	  {
       A_CustomMissile("StormShot1Crisis",43,0,0,0,0);
	  }
	 }
	 else
	 {
	  if (health <= user_HPLowRange)
	  {
       A_CustomMissile("StormShot2",43,0,0,0,0);
	  }
	  else
	  {
       A_CustomMissile("StormShot1",43,0,0,0,0);
	  }
	 }
	}
    goto See
  Missile3:
    OVER JJJJ 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_FaceTarget;
    }
    OVER K 4 Bright 
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomMissile("HadesOverlordBallCrisis",92,-40,0,random(-3,3),random(-3,3));
      A_CustomMissile("HadesOverlordBallCrisis",8,-40,0,random(-3,3),random(-3,3));
      A_CustomMissile("HadesOverlordBallCrisis",92,40,0,random(-3,3),random(-3,3));
      A_CustomMissile("HadesOverlordBallCrisis",8,40,0,random(-3,3),random(-3,3));
 	  A_CustomMissile("OverBallCrisis",54,-50,0,random(-3,3),random(-3,3));
 	  A_CustomMissile("OverBallCrisis",54,50,0,random(-3,3),random(-3,3));
	 }
	 else
	 {
      A_CustomMissile("HadesOverlordBall",92,-40,0,random(-3,3),random(-3,3));
      A_CustomMissile("HadesOverlordBall",8,-40,0,random(-3,3),random(-3,3));
      A_CustomMissile("HadesOverlordBall",92,40,0,random(-3,3),random(-3,3));
      A_CustomMissile("HadesOverlordBall",8,40,0,random(-3,3),random(-3,3));
 	  A_CustomMissile("OverBall",54,-50,0,random(-3,3),random(-3,3));
 	  A_CustomMissile("OverBall",54,50,0,random(-3,3),random(-3,3));
	 }
	}
    OVER J 4 A_SpidRefire
    OVER J 0 A_Jump(32,"See")     
    goto Missile3+8

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    OVER ADF 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	 A_FaceTarget;
	}
    OVER E 5
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(4); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMeleeAttack(random(1,10) * 14 * ACS_NamedExecuteWithResult("CrisisMultiplier"), "caco/melee","none","Melee",true);
	 }
	 else
	 {
	  A_CustomMeleeAttack(random(1,10) * 14, "caco/melee","none","Melee",true);
	 }
	}
    goto See

  Pain:
    OVER L 6
    OVER L 6 A_Pain
    OVER L 0 A_Jump(40,"Teleport")
    goto See
  Pain.Fist:
    OVER L 6
    OVER L 6 A_Pain
    OVER LL 6
    OVER L 0 A_Jump(40,"Teleport")
    Goto See
  Pain.Kick:
    OVER L 6
    OVER L 6 A_Pain
    OVER LLLL 6
    OVER L 0 A_Jump(40,"Teleport")
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    OVER M 0 bright A_Facetarget
    OVER M 8 bright A_Scream
    OVER NO 8 bright
    OVER P 0 bright A_Noblocking
    OVER PPPPP 0 bright A_CustomMissile("OverFlesh1",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
    OVER PPPPP 0 bright A_CustomMissile("OverFlesh2",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
    OVER PPPPPPPPPP 0 A_CustomMissile("OverFlesh3",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
    OVER PPPPPPPPPP 0 A_CustomMissile("OverFlesh4",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
    OVER PPPPPPPPPP 0 A_CustomMissile("OverFlesh5",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
    OVER PPPPPPPPPP 0 A_CustomMissile("OverFlesh6",random(0,90),random(0,40),random(-180,180),2,random(-15,15)) 
    OVER P 0 bright A_CustomMissile("OverBigArm1",40,-40,-90,2,random(-1,1)) 
    OVER P 0 bright A_CustomMissile("OverBigArm2",40,40,90,2,random(-1,1))
    OVER P 0 bright A_CustomMissile("OverSmallArm1",100,-30,-90,2,random(-15,15))
    OVER P 0 bright A_CustomMissile("OverSmallArm1",100,30,90,2,random(-15,15))
    OVER P 0 bright A_CustomMissile("OverSmallArm2",100,-30,-90,2,random(-15,15))
    OVER P 0 bright A_CustomMissile("OverSmallArm2",100,30,90,2,random(-15,15))
    OVER P 0 bright A_CustomMissile("OverHorn1",110,-16,-90,2,random(-15,15))
    OVER P 0 bright A_CustomMissile("OverHorn2",110,16,90,2,random(-15,15))
    OVER PQRSTUV 8 bright
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    OVER L 5 A_GenericFreezeDeath
    OVER L 1 A_FreezeDeathChunks
    wait
  }
}


actor HSOverlord 30345
{ 
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Hades Scions"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.

  Health 35
  Radius 15 
  Height 31 
  Mass 3000 
  Speed 10
  RENDERSTYLE Normal
  Obituary "%o was blown away by a Hades Sphere."

  MONSTER
  +LOOKALLAROUND
  +DONTGIB
  +NOTARGET
  +NOGRAVITY 
  +FLOAT
  +DONTFALL
  +DONTHURTSPECIES
  +FORCEXYBILLBOARD
  +AVOIDMELEE
  +THRUSPECIES
  Species "HadesSphere"

  DamageFactor "Crush", 16
  Damagefactor "Magic", 2.56
  Painchance "Holy", 255 // Demons = +300% Pain Chance
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  MeleeThreshold 192
  SeeSound "monster/hadsit"
  States 
  { 
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    TNT1 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    TNT1 A 4 Bright A_Look      
    goto Spawn+1
  See:
    HADE EFGH 4 Bright
    HADE A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)

  Chasing:
    HADE A 0 Bright A_UnSetInvulnerable
    HADE A 2 Bright A_Playsound("monster/hadwlk")
    HADE ABBCCDD 2 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    HADE D 0 Bright A_Jump(32,"Teleport") 
    loop

  Teleport:
    HADE H 0 Bright A_SetInvulnerable
    HADE H 5 Bright A_Playsound("monster/hadtel")
    HADE GFEIJKL 3 Bright
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 Bright A_ExtChase(0,0,1,1)
    HADE L 3 Bright A_Playsound("monster/hadtel")
    HADE KJIEFG 4 Bright
    HADE H 0 Bright A_UnSetInvulnerable
    Goto Chasing

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    HADE H 4 Bright
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }
	 A_SetInvulnerable;
    }
    HADE GF 4 Bright
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }
    }
    HADE E 1 Bright 
	{
	 A_UnSetInvulnerable;
	 A_Die;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(3); }
	}
    stop
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HADE E 0 Bright A_Noblocking
    HADE E 0 Bright A_CustomMissile("HSBoomOverlord",0,0,0,0)
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    Stop
  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HADE N 0 Bright A_Noblocking
    HADE H 5 Bright A_PlaySound("monster/haddth")
    HADE GFE 4 Bright
    HADE RSTUVWX 4 Bright
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    Stop
  Ice:
    goto Death
  } 
}


actor DSArachnotron : Arachnotron 26535
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Arachnotron Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana2 18
 dropitem Cell 2 20
 dropitem Cell 2 20
 dropitem CellPack 2 100
 dropitem PlasmaRifle 2 40
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem SauronHelmet 1
 dropitem FloraRandomArmor


  DamageFactor "Crush", 5.2
  DamageFactor "Fire", 0.75
  DamageFactor "Thunder", 1.75
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 128
  Painchance "Fist", 192 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 192 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Fire", 96
  Painchance "Thunder", 224
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  PainSound "arachnotron/pain" 

  Species "Arachnotron"
  +DONTHURTSPECIES

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    BSPI A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BSPI AB 10 A_Look
    goto Spawn+1
  See:
    BSPI A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    BSPI A 20
    BSPI A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_BabyMetal;
	}
    BSPI ABBCC 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    BSPI D 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_BabyMetal;
	}
    BSPI DEEFF 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    goto See+2

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BSPI AA 10 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_FaceTarget;
	}
  Missile2:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BSPI G 5 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMissile("ArachnotronPlasmaCrisis");
	 }
	 else
	 {
	  A_CustomMissile("ArachnotronPlasma");
	 }
	}
    BSPI H 5 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	}
    BSPI H 0 bright
	{
	 A_SpidRefire;
	}
    goto Missile2

  Pain:
    BSPI I 3
    BSPI I 3 A_Pain
    Goto See+2
  Pain.Fist:
    BSPI I 3
    BSPI I 3 A_Pain
    BSPI II 3
    Goto See+2
  Pain.Kick:
    BSPI I 3
    BSPI I 3 A_Pain
    BSPI IIII 3
    Goto See+2
  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    BSPI I 3
    BSPI I 3
    BSPI I 3 A_Pain
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    BSPI I 3
    BSPI I 3
    BSPI I 3
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    BSPI I 3
    BSPI I 3
    BSPI I 3
    Goto See+1
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BSPI J 20 A_Scream
    BSPI K 7 A_NoBlocking
    BSPI LMNO 7
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BSPI P -1 A_BossDeath
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BSPI I 5 A_GenericFreezeDeath
    BSPI I 1 A_FreezeDeathChunks
    wait
  Raise:
    BSPI P 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BSPI ONMLKJ 5
    Goto See+1
 }
}

actor ArachnotronMK2 : Arachnotron 26526
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Arachnotron Type"
  Obituary "%o was toasted by an augmented arachnotron."
  Health 1000
  Radius 64
  Height 64
  Mass 900
  Speed 14
  Scale 1

  BloodColor "bf af 20"
  SeeSound "baby/sight"
  PainSound "arachnotron/pain" 
  DeathSound "baby/death"
  ActiveSound "baby/active"

  DamageFactor "Normal", 0.75
  RadiusDamageFactor 0.75
  DamageFactor "Explosive", 0.75

  DamageFactor "Crush", 5.2
  DamageFactor "Fire", 0.75
  DamageFactor "Thunder", 1.75
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 64
  Painchance "Fist", 96 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 160 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 96 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Fire", 72
  Painchance "Thunder", 168
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 
  
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana2 18
  dropitem Cell 2 20
  dropitem Cell 2 20
  dropitem CellPack 2 100
  dropitem PlasmaRifle 2 40
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor

  Species "Arachnotron"
  +DONTHURTSPECIES

  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    BSP2 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BSP2 AB 10 A_Look
    goto Spawn+1
  See:
    BSP2 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    BSP2 A 20
    BSP2 A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_BabyMetal;
	}
    BSP2 ABBCC 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    BSP2 D 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_BabyMetal;
	}
    BSP2 DEEFF 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Goto See+2
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BSP2 AA 6 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }

	 A_FaceTarget;
	}
  Missile2:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BSP2 G 2 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMissile("ArachnotronPlasmaCrisis",19,-12);
	 }
	 else
	 {
	  A_CustomMissile("ArachnotronPlasma",19,-12);
	 }
	}
    BSP2 R 2 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	}
    BSP2 H 2 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMissile("ArachnotronPlasmaCrisis",19,12);
	 }
	 else
	 {
	  A_CustomMissile("ArachnotronPlasma",19,12);
	 }
	}
    BSP2 Q 2 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_SpidRefire;
	}
    Goto Missile2

  Pain:
    BSP2 I 3
    BSP2 I 3 A_Pain
    Goto See+2
  Pain.Fist:
    BSP2 I 3
    BSP2 I 3 A_Pain
    BSP2 II 3
    Goto See+2
  Pain.Kick:
    BSP2 I 3
    BSP2 I 3 A_Pain
    BSP2 IIII 3
    Goto See+2

  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    BSP2 I 3
    BSP2 I 3
    BSP2 I 3 A_Pain
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    BSP2 I 3
    BSP2 I 3
    BSP2 I 3
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    BSP2 I 3
    BSP2 I 3
    BSP2 I 3
    Goto See+1
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BSP2 J 20 A_Scream
    BSP2 K 7 A_NoBlocking
    BSP2 LMNO 7 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BSP2 P -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BSP2 I 5 A_GenericFreezeDeath
    BSP2 I 1 A_FreezeDeathChunks
    wait
  Raise:
    BSP2 P 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BSP2 ONMLKJ 5
    Goto See+1
  }
}

actor FusionArachnotron : Arachnotron 20000
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Arachnotron Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  var int user_spread1; var int user_spread2;
  dropitem DoomSpellMana2 36
  dropitem CellPack 2 100
  dropitem CellPack 2 100
  dropitem CellPack 2 100
  dropitem PlasmaRifle 2 40
  dropitem PlasmaRifle 2 40
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor

  OBITUARY "%o was vaporized by a fusion cannon Arachnotron"
  Health 1000
  Radius 64
  Height 64
  Mass 600
  Speed 12
  PainChance 30 
  DamageFactor "Normal", 0.875
  RadiusDamageFactor 0.875
  DamageFactor "Explosive", 0.875
  SEESOUND "baby/sight"
  PAINSOUND "baby/pain"
  DEATHSOUND "baby/death"
  ACTIVESOUND "baby/active"
  MONSTER
  +FloorClip
  +MissileMore
  +MissileEvenMore
  +AVOIDMELEE

  DamageFactor "Crush", 5.2
  DamageFactor "Fire", 0.75
  DamageFactor "Thunder", 1.75
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 96
  Painchance "Fist", 144 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 240 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 144 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Fire", 72
  Painchance "Thunder", 168
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  PainSound "farachnotron/pain" 

  Species "Arachnotron"
  +DONTHURTSPECIES

  states
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    FSPI A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    FSPI AB 10 A_Look
    goto Spawn+1
  See:
    FSPI A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    FSPI A 20
    FSPI A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_BabyMetal;
	}
    FSPI ABBCC 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    FSPI D 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_BabyMetal;
	}
    FSPI DEEFF 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    goto See+2

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    FSPI A 4 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_shotsfired",0);
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetUserVar("user_spread1",-2); A_SetUserVar("user_spread2",2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetUserVar("user_spread1",-3); A_SetUserVar("user_spread2",3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetUserVar("user_spread1",-4); A_SetUserVar("user_spread2",4); }
	 else { A_SetUserVar("user_spread1",-5); A_SetUserVar("user_spread2",5); }

	 A_SetUserVar("user_shotsfiredmax",8);
	 A_FaceTarget;
	}
  MissileHold:
    FSPI GH 3 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	  
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("FusionShotCrisis",24,0,5*random(user_spread1,user_spread2));
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_CustomMissile("FusionShotCrisis",24,0,5*random(user_spread1,user_spread2)); }
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 300) { A_CustomMissile("FusionShotCrisis",24,0,5*random(user_spread1,user_spread2)); }
	 }
	 else
	 {
	  A_CustomMissile("FusionShot",24,0,5*random(user_spread1,user_spread2));
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_CustomMissile("FusionShot",24,0,5*random(user_spread1,user_spread2)); }
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 300) { A_CustomMissile("FusionShot",24,0,5*random(user_spread1,user_spread2)); }
	 }

	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
	 if (user_shotsfired >= user_shotsfiredmax) { return state("MissileEnd"); }
	 return state("");
	}
	loop
  MissileEnd:
    FSPI H 1 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(0); }

	 if (random(1,32) == 1) { return state("Missile"); }
	 return state("");
	}
    Goto See+2

  Pain:
    FSPI I 3
    FSPI I 3 A_Pain
    Goto See+2
  Pain.Fist:
    FSPI I 3
    FSPI I 3 A_Pain
    FSPI II 3
    Goto See+2
  Pain.Kick:
    FSPI I 3
    FSPI I 3 A_Pain
    FSPI IIII 3
    Goto See+2

  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    FSPI I 3
    FSPI I 3
    FSPI I 3 A_Pain
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    FSPI I 3
    FSPI I 3
    FSPI I 3
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    FSPI I 3
    FSPI I 3
    FSPI I 3
    Goto See+1
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    FSPI J 20 A_Scream
    FSPI K 7 A_NoBlocking
    FSPI LMNO 7
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    FSPI P -1 A_BossDeath
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    FSPI I 5 A_GenericFreezeDeath
    FSPI I 1 A_FreezeDeathChunks
    wait
  Raise:
    FSPI P 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    FSPI ONMLKJ 5
    Goto See+1
  }
}

actor DSRailArachnotron 3125
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Arachnotron Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana2 36
  dropitem CellPack 2 100
  dropitem CellPack 2 100
  dropitem CellPack 2 100
  dropitem CellPack 2 40
  dropitem CellPack 2 40
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor

  DamageFactor "Crush", 5.2
  DamageFactor "Fire", 0.75
  DamageFactor "Thunder", 1.75
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance

  Painchance 128
  Painchance "Fist", 192 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 192 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Fire", 96
  Painchance "Thunder", 224
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

 Health 500
 Radius 64
 Height 64
 Mass 600
 Speed 12
 PainChance 192
 Damage 30
 Monster
 +FLOORCLIP
 SeeSound "baby/sight"
 PainSound "arachnotron/pain" 
 DeathSound "baby/death"
 ActiveSound "baby/active"
 Obituary "%o was railed by an arachnotron."
 Decal RedRailScorch

 Species "Arachnotron"
 +DONTHURTSPECIES

 States
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    RSPI A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    RSPI AB 10 A_Look
    goto Spawn+1
  See:
    RSPI A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    RSPI A 20
    RSPI A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_BabyMetal;
	}
    RSPI ABBCC 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    RSPI D 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_BabyMetal;
	}
    RSPI DEEFF 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    goto See+2

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    RSPI A 0 A_PlaySound ("baby/chargerailgun")
    RSPI AG 16
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 210) { A_SetTics(9); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(11); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(12); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(13); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 30) { A_SetTics(15); }
	 A_FaceTarget;
	}
    RSPI H 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomRailgun ((30 * ACS_NamedExecuteWithResult("CrisisMultiplier")), 0, AA0000, FF0000, 0, 1);
	 }
	 else
	 {
	  A_CustomRailgun (30, 0, AA0000, FF0000, 0, 1);
	 }
	}
    RSPI G 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	}
    Goto See+2

  Pain:
    RSPI I 3
    RSPI I 3 A_Pain
    Goto See+2
  Pain.Fist:
    RSPI I 3
    RSPI I 3 A_Pain
    RSPI II 3
    Goto See+2
  Pain.Kick:
    RSPI I 3
    RSPI I 3 A_Pain
    RSPI IIII 3
    Goto See+2

  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    RSPI I 3
    RSPI I 3
    RSPI I 3 A_Pain
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    RSPI I 3
    RSPI I 3
    RSPI I 3
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    RSPI I 3
    RSPI I 3
    RSPI I 3
    Goto See+1
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    RSPI J 20 A_Scream
    RSPI K 7 A_NoBlocking
    RSPI LMNO 7
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    RSPI P -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    RSPI I 5 A_GenericFreezeDeath
    RSPI I 1 A_FreezeDeathChunks
    wait
  Raise:
    RSPI P 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    RSPI ONMLKJ 5
    Goto See+1
 }
}


actor DSHellKnight : HellKnight 26538
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Hell Nobles"
 bloodcolor "green"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana2 24
 dropitem Backpack 2
 dropitem Backpack 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem SauronHelmet 1
 dropitem FloraRandomArmor

 DamageFactor "Crush", 4.4
 DamageFactor "Wind", 0.02
 DamageFactor "PoisonElemental", 1.5
 DamageFactor "Holy", 2 // Demons = +200% Holy Damage
 Painchance "Holy", 150 // Demons = +300% Pain Chance

 Painchance 50
 Painchance "Fist", 75 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "Kick", 125 // Kick attacks have a +150% chance of stunning an enemy
 Painchance "Gauntlets", 75 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "PoisonElemental", 75
 Painchance "Wind", 1
 Painchance "GravityHP", 255
 Painchance "GravityMP", 255
 Painchance "GravityHPMP", 255 

 Species "HellNoble"
 +DONTHURTSPECIES

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    BOS2 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BOS2 AB 10 A_Look
    goto Spawn+1
  See:
    BOS2 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    BOS2 AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BOS2 EF 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    BOS2 G 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomComboAttack("HellKnightBallCrisis", 32, ((random(5,10)*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee");
	 }
	 else
	 {
      A_CustomComboAttack("HellKnightBall", 32, random(5,10)*random(1,8), "imp/melee");
	 }
	}
    goto See

  Pain:
    BOS2 H 2
    BOS2 H 2 A_Pain
    Goto See
  Pain.Fist:
    BOS2 H 2
    BOS2 H 2 A_Pain
    BOS2 HH 2
    Goto See
  Pain.Kick:
    BOS2 H 2
    BOS2 H 2 A_Pain
    BOS2 HHHH 2
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BOS2 I 8
    BOS2 J 8 A_Scream
    BOS2 K 8
    BOS2 L 8 A_NoBlocking
    BOS2 MN 8
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BOS2 O -1 A_BossDeath
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BOS2 H 5 A_GenericFreezeDeath
    BOS2 H 1 A_FreezeDeathChunks
    wait
  Raise:
    BOS2 O 8 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BOS2 NMLKJI 8
    Goto See
 }
}


actor DSFatso : Fatso 26540
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Mancubus Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana2 20
 dropitem RocketLauncher 2 1
 dropitem RocketLauncher 2 1
 dropitem MegaSphere2 2
 dropitem BlueArmor 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem SauronHelmet 1
 dropitem FloraRandomArmor

 DamageFactor "Crush", 3.6
 DamageFactor "Holy", 2 // Demons = +200% Holy Damage
 Painchance "Holy", 240 // Demons = +300% Pain Chance
 Species "Mancubi"
 +DONTHARMSPECIES
 
 Painchance 80
 Painchance "Fist", 120 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "Kick", 200 // Kick attacks have a +150% chance of stunning an enemy
 Painchance "Gauntlets", 120 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "GravityHP", 255
 Painchance "GravityMP", 255
 Painchance "GravityHPMP", 255 

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    FATT A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    FATT AB 15 A_Look
    goto Spawn+1
  See:
    FATT A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    FATT AABBCCDDEEFF 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    loop


  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    FATT G 20 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(17); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(18); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetTics(19); }

	 A_FatRaise;
	}
    FATT H 10 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_FatAttack1("FatShotCrisis");
	 }
	 else
	 {
	  A_FatAttack1;
	 }
	}
    FATT IG 5 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_FaceTarget;
	}
    FATT H 10 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_FatAttack2("FatShotCrisis");
	 }
	 else
	 {
	  A_FatAttack2;
	 }
	}
    FATT IG 5 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_FaceTarget;
	}
    FATT H 10 bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_FatAttack3("FatShotCrisis");
	 }
	 else
	 {
	  A_FatAttack3;
	 }
	}
    FATT IG 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_FaceTarget;
	}
    goto See

  Pain:
    FATT J 3
    FATT J 3 A_Pain
    Goto See
  Pain.Fist:
    FATT J 3
    FATT J 3 A_Pain
    FATT JJ 3
    Goto See
  Pain.Kick:
    FATT J 3
    FATT J 3 A_Pain
    FATT JJJJ 3
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    FATT K 6
    FATT L 6 A_Scream
    FATT M 6 A_NoBlocking
    FATT NOPQRS 6
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    FATT T -1 A_BossDeath
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    FATT J 5 A_GenericFreezeDeath
    FATT J 1 A_FreezeDeathChunks
    wait
  Raise:
    FATT R 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    FATT QPONMLK 5
    Goto See
 }
}

actor Hectebus : Fatso 5007
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Mancubus Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem RocketLauncher 2 1
  dropitem RocketLauncher 2 1
  dropitem RocketLauncher 2 1
  dropitem RocketLauncher 2 1
  dropitem BFG9000 2 40
  dropitem MegaSphere2 2
  dropitem MegaSphere2 2
  dropitem StoneSkin 2
  dropitem StoneSkin 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor


  SEESOUND "hect/see"
  DEATHSOUND "hect/die"  
  Health 1200
  Obituary "%o was cremated by a hectebus."
  Species "Mancubi"
  +DONTHARMSPECIES
  +AVOIDMELEE
  
  DamageFactor "Normal", 0.95
  RadiusDamageFactor 0.95
  DamageFactor "Explosive", 0.95

  DamageFactor "Crush", 3.6
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 60 // Demons = +300% Pain Chance

  Painchance 40
  Painchance "Fist", 60 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 100 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 60 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    HECT A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HECT AB 12 A_Look
    goto Spawn+1
  See:
    HECT A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    HECT AABBCCDDEEFF 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    HECT G 0 A_PlaySound("fatso/raiseguns")
    HECT G 20 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(17); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(18); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetTics(19); }

	 A_FaceTarget;
	}
    HECT H 10 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("HectShotCrisis",28,0,0,1);
      A_CustomMissile("HectShotCrisis",28,0,5.625,1);
      A_CustomMissile("HectShotCrisis",28,0,11.25,1);
      A_CustomMissile("HectShotCrisis",28,0,16.875,1);
	 }
	 else
	 {
      A_CustomMissile("HectShot",28,0,0,1);
      A_CustomMissile("HectShot",28,0,5.625,1);
      A_CustomMissile("HectShot",28,0,11.25,1);
      A_CustomMissile("HectShot",28,0,16.875,1);
	 }
	}
    HECT IG 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_FaceTarget;
	}
    HECT H 10 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("HectShotCrisis",28,0,0,1);
      A_CustomMissile("HectShotCrisis",28,0,-5.625,1);
      A_CustomMissile("HectShotCrisis",28,0,-11.25,1);
      A_CustomMissile("HectShotCrisis",28,0,-16.875,1);
	 }
	 else
	 {
      A_CustomMissile("HectShot",28,0,0,1);
      A_CustomMissile("HectShot",28,0,-5.625,1);
      A_CustomMissile("HectShot",28,0,-11.25,1);
      A_CustomMissile("HectShot",28,0,-16.875,1);
	 }
	}
    HECT IG 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_FaceTarget;
	}
    HECT H 10 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("HectShotCrisis",28,0,-11.25,1);
      A_CustomMissile("HectShotCrisis",28,0,-5.625,1);
      A_CustomMissile("HectShotCrisis",28,0,0,1);
      A_CustomMissile("HectShotCrisis",28,0,5.625,1);
      A_CustomMissile("HectShotCrisis",28,0,11.25,1);
	 }
	 else
	 {
      A_CustomMissile("HectShot",28,0,-11.25,1);
      A_CustomMissile("HectShot",28,0,-5.625,1);
      A_CustomMissile("HectShot",28,0,0,1);
      A_CustomMissile("HectShot",28,0,5.625,1);
      A_CustomMissile("HectShot",28,0,11.25,1);
	 }
	}
    HECT IG 5 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_FaceTarget;
	}
    goto See

  Pain:
    HECT J 3
    HECT J 3 A_Pain
    Goto See
  Pain.Fist:
    HECT J 3
    HECT J 3 A_Pain
    HECT JJ 3
    Goto See
  Pain.Kick:
    HECT J 3
    HECT J 3 A_Pain
    HECT JJJJ 3
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HECT K 6
    HECT L 6 A_Scream
    HECT M 6 A_NoBlocking
    HECT NOPQRS 6
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    HECT T -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    HECT J 5 A_GenericFreezeDeath
    HECT J 1 A_FreezeDeathChunks
    wait
  Raise:
    HECT R 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HECT QPONMLK 5
    Goto See
  }
}

// Daedabus
Actor Daedabus 24559
{
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem RocketLauncher 2 1
  dropitem RocketLauncher 2 1
  dropitem RocketLauncher 2 1
  dropitem RocketLauncher 2 1
  dropitem RocketLauncher 2 1
  dropitem BFG9000 2 40
  dropitem MegaSphere2 2
  dropitem MegaSphere2 2
  dropitem MegaSphere2 2
  dropitem DiamondSkin 2
  dropitem DiamondSkin 2
  dropitem DiamondSkin 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor

  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Mancubus Type"
  Health 2100
  Radius 48
  Height 64
  Mass 1600
  Speed 8
  Species "Mancubi"
  +DONTHARMSPECIES
  +AVOIDMELEE
  
  DamageFactor "Normal", 0.90
  RadiusDamageFactor 0.90
  DamageFactor "Explosive", 0.90

  DamageFactor "Crush", 3.6
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 60 // Demons = +300% Pain Chance

  Painchance 40
  Painchance "Fist", 60 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 100 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 60 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  BloodColor "73 00 00"
  SeeSound "Daedabus/Sight"
  PainSound "Daedabus/Pain"
  DeathSound "Daedabus/Death"
  ActiveSound "Daedabus/Active"
  MONSTER
  +FLOORCLIP
  +DONTHURTSPECIES
  Obituary "%o was Torched by a Daedabus."
  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    DAED A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DAED AB 15 A_Look
    goto Spawn+1
  See:
    DAED A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    DAED AABBCCDDEEFF 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); A_SetTics(3); }
	 A_Chase;
	}
    Loop
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    DAED G 0 A_PlaySound("Daedabus/Attack")
    DAED G 18 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 210) { A_SetTics(11); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(12); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(13); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 30) { A_SetTics(17); }
	 A_FaceTarget;
	}
    DAED H 9 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(8); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("DaedFireCrisis",28,0,11.25);
      A_CustomMissile("DaedFireCrisis",28,0,5.625);
      A_CustomMissile("DaedFireCrisis",28,0,0);
      A_CustomMissile("DaedFireCrisis",28,0,-5.625);
	 }
	 else
	 {
      A_CustomMissile("DaedFireNew",28,0,11.25);
      A_CustomMissile("DaedFireNew",28,0,5.625);
      A_CustomMissile("DaedFireNew",28,0,0);
      A_CustomMissile("DaedFireNew",28,0,-5.625);
	 }
	}
    DAED I 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    DAED G 4 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
	}
    DAED H 9 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(8); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomMissile("DaedFireCrisis",28,0,5.625);
      A_CustomMissile("DaedFireCrisis",28,0,0);
      A_CustomMissile("DaedFireCrisis",28,0,-5.625);
      A_CustomMissile("DaedFireCrisis",28,0,-11.25);
	 }
	 else
	 {
      A_CustomMissile("DaedFireNew",28,0,5.625);
      A_CustomMissile("DaedFireNew",28,0,0);
      A_CustomMissile("DaedFireNew",28,0,-5.625);
      A_CustomMissile("DaedFireNew",28,0,-11.25);
	 }
	}
    DAED I 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    DAED G 4 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
	}
    DAED H 9 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(8); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("DaedFireCrisis",28,0,16.875);
      A_CustomMissile("DaedFireCrisis",28,0,11.25);
      A_CustomMissile("DaedFireCrisis",28,0,5.625);
      A_CustomMissile("DaedFireCrisis",28,0,0);
      A_CustomMissile("DaedFireCrisis",28,0,-5.625);
      A_CustomMissile("DaedFireCrisis",28,0,-11.25);
      A_CustomMissile("DaedFireCrisis",28,0,-16.875);
	 }
	 else
	 {
      A_CustomMissile("DaedFireNew",28,0,16.875);
      A_CustomMissile("DaedFireNew",28,0,11.25);
      A_CustomMissile("DaedFireNew",28,0,5.625);
      A_CustomMissile("DaedFireNew",28,0,0);
      A_CustomMissile("DaedFireNew",28,0,-5.625);
      A_CustomMissile("DaedFireNew",28,0,-11.25);
      A_CustomMissile("DaedFireNew",28,0,-16.875);
	 }
	}
    DAED I 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    DAED G 4 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
	}
	TNT1 A 0 A_Jump(128,2)
	TNT1 A 0 A_MonsterRefire(192,"See")
	TNT1 A 0 
    Goto See
	
  Pain:
    DAED J 3
    DAED J 3 A_Pain
    Goto See
  Pain.Fist:
    DAED J 3
    DAED J 3 A_Pain
    DAED JJ 3
    Goto See
  Pain.Kick:
    DAED J 3
    DAED J 3 A_Pain
    DAED JJJJ 3
    Goto See
	
  Pain.GravityHP:
    TNT1 A 0 A_Jump(248,2) // 1/32 chance of working
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    TNT1 A 0 
    Goto See
  Pain.GravityMP:
    TNT1 A 0 A_Jump(248,2) // 1/32 chance of working
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    TNT1 A 0 
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 A_Jump(248,2) // 1/32 chance of working
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    TNT1 A 0 
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DAED K 6
    DAED L 6 A_Scream
    DAED M 6 A_NoBlocking
    DAED NOPQRS 6
	TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DAED T -1 A_BossDeath
    Stop
  Raise:
    DAED R 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DAED QPONMLK 5
    Goto See
  XDeath:
    goto Death
   }
}

actor DSArchvile : Archvile 26543
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Archvile Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana1 36
 dropitem DoomSpellMana2 24
 dropitem RandomPowerupSpawner 2
 dropitem HasteSphere 2
 dropitem SoulSphere2 2
 dropitem BlurSphere2 2
 dropitem MegaSphere2 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem SauronHelmet 1
 dropitem FloraRandomArmor

  +AVOIDMELEE

  DamageFactor "Crush", 3.4
  DamageFactor "Fire", 0.1
  DamageFactor "Ice", 1.66
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 30 // Demons = +300% Pain Chance
  DamageFactor "Magic", 0.64

  Damagefactor "Stomp", 2.5
  DamageFactor "Fist", 2.5
  DamageFactor "Kick", 2.5
  DamageFactor "Gauntlets", 2.5
  DamageFactor "Sceptre", 2.5
  DamageFactor "Chainsaw", 2.5

  Painchance 10
  Painchance "Stomp", 100 // Archviles are hyper suspectible to Stomp attacks [10x pain chance]
  Painchance "Magic", 4 // Archviles super resistant to magic attacks [0.4x pain chance]
  Painchance "Fist", 50 // Archviles are super suspectible to Punch attacks [10x pain chance]
  Painchance "Kick", 255 // Archviles are always flinched by the kick attack [50x pain chance]
  Painchance "Gauntlets", 50 // Archviles are super suspectible to Punch attacks [10x pain chance]
  Painchance "Chainsaw", 50 // Archviles are super suspectible to Chainsaw attacks [10x pain chance]
  PainChance "Fire", 1
  PainChance "Ice", 35
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    VILE A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    VILE AB 10 A_Look
    goto Spawn+1
  See:
    VILE A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    VILE AABBCCDDEEFF 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_VileChase;
	}
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    VILE G 0 BRIGHT A_VileStart
    VILE G 10 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 200) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(9); }

	 A_FaceTarget;
	}
    VILE H 8 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }

	 A_VileTarget;
	}
    VILE IJKLMN 8 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }

	 A_FaceTarget;
	}
    VILE O 8 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_VileAttack("vile/stop",(20 * ACS_NamedExecuteWithResult("CrisisMultiplier")),(70 * ACS_NamedExecuteWithResult("CrisisMultiplier")),(20 * ACS_NamedExecuteWithResult("CrisisMultiplier")),8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
	 }
	 else
	 {
      A_VileAttack("vile/stop",20,70,20,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
	 }
	}
    VILE P 20 BRIGHT
	{
	}
    Goto See

  Heal:
    VILE "[" 10 Bright
    VILE "\" 10 Bright
    {
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120)
	 {
	  A_CustomMissile("ReviveProj2", 0, 0, 0, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 72, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 144, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 216, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 288, 0);
	 }
	 else
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60)
	 {
	  A_CustomMissile("ReviveProj2", 0, 0, 0, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 120, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 240, 0);
	 }
    }
    VILE "]" 10 Bright
    goto See

  Pain:
   VILE Q 5   
   VILE Q 5 A_Pain
   Goto See
  Pain.Fist:
   VILE Q 5
   VILE Q 5 A_Pain
   VILE QQ 5
   Goto See
  Pain.Kick:
   VILE Q 5
   VILE Q 5 A_Pain
   VILE QQQQ 5
   Goto See
  Pain.Ice:
   VILE Q 5   
   VILE Q 5 A_Pain
   VILE Q 10
   VILE Q 0 A_Jump(128, 4)
   VILE Q 5
   VILE Q 0 A_Jump(128, 2)
   VILE Q 5
   VILE Q 0
   Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    VILE Q 7
    VILE R 7 A_Scream
    VILE S 7 A_NoBlocking
    VILE TUVWXY 7
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    VILE Z -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    VILE Q 5 A_GenericFreezeDeath
    VILE Q 1 A_FreezeDeathChunks
    wait
  Raise:
    VILE Y 7 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    VILE XWVVUTSRQ 7
    Goto See
 }
}

actor Diabloist : Archvile 30112 
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Archvile Type"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 var int user_gravitytype;

 dropitem DoomSpellMana1 36
 dropitem DoomSpellMana1 36
 dropitem DoomSpellMana2 24
 dropitem DoomSpellMana2 24
 dropitem DoomSpellMana3 12
 dropitem RandomPowerupSpawner 2
 dropitem RandomPowerupSpawner 2
 dropitem HasteSphere 2
 dropitem HasteSphere 2
 dropitem HasteSphere 2
 dropitem HasteSphere 2
 dropitem SoulSphere2 2
 dropitem SoulSphere2 2
 dropitem BlurSphere2 2
 dropitem BlurSphere2 2
 dropitem MegaSphere2 2
 dropitem MegaSphere2 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem SauronHelmet 1
 dropitem FloraRandomArmor

 Obituary "%o got was set ablaze by a Diabloist."
 Health 1400
 Radius 20 
 Height 56 
 Mass 1000 
 Speed 22.5
 BloodColor "08 08 08"
 MONSTER
 +NODROPOFF
 +FIRERESIST
 +FLOORCLIP 
 +NOTARGET 
 +NORADIUSDMG
 +MISSILEMORE
 +DONTHURTSPECIES
 +NOTARGETSWITCH
 +AVOIDMELEE
 SeeSound "monster/diasit" 
 PainSound "monster/diapai" 
 DeathSound "monster/diadth" 
 ActiveSound "monster/diaact" 

 DamageFactor "Normal", 0.875
 RadiusDamageFactor 0.875
 DamageFactor "Explosive", 0.875

 DamageFactor "Crush", 6.8
 DamageFactor "Fire", 0
 DamageFactor "Ice", 1.66
 DamageFactor "Holy", 2 // Demons = +200% Holy Damage
 Painchance "Holy", 30 // Demons = +300% Pain Chance
 DamageFactor "Magic", 0.48
 PainChance "Magic", 128

 Damagefactor "Stomp", 5
 DamageFactor "Fist", 5
 DamageFactor "Kick", 5
 DamageFactor "Gauntlets", 5
 DamageFactor "Sceptre", 5
 DamageFactor "Chainsaw", 5

 Painchance 10
 Painchance "Stomp", 100 // Archviles are hyper suspectible to Stomp attacks [10x pain chance]
 Painchance "Fist", 100 // Archvile are super suspectible to Punch attacks [10x pain chance]
 Painchance "Kick", 255 // Archviles are hyper suspectible to Kick attack [50x pain chance]
 Painchance "Gauntlets", 100 // Archvile are super suspectible to Punch attacks [10x pain chance]
 Painchance "Chainsaw", 100 // Archvile are super suspectible to Chainsaw attacks [10x pain chance]
 PainChance "Fire", 0
 PainChance "Ice", 35
 Painchance "GravityHP", 255
 Painchance "GravityMP", 255
 Painchance "GravityHPMP", 255 

 States 
 { 
 Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    DIAB G 0 A_Jump(85, "GravityAttackCheck")
 Attack1:
    DIAB G 0 BRIGHT A_Jump (128,"Attack2")
    DIAB G 0 BRIGHT A_FaceTarget
    DIAB GH 3 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 A_FaceTarget;
	}
    DIAB I 3 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 A_VileTarget("DFire");
	}
    DIAB HGHIHGHIHGHIGH 3 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 A_FaceTarget;
	}
    DIAB I 3 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_VileAttack("vile/stop",(40 * ACS_NamedExecuteWithResult("CrisisMultiplier")),(140 * ACS_NamedExecuteWithResult("CrisisMultiplier")),(140 * ACS_NamedExecuteWithResult("CrisisMultiplier")),12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
	 }
	 else
	 {
      A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
	 }
	}
    DIAB G 0 BRIGHT A_Jump (128,"Attack3")
    Goto See

  Attack2:
    DIAB NOPNOPNOPNOPNOP 5 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile ("DFlareCrisis",40,0,random(-4,4));
	 }
	 else
	 {
      A_CustomMissile ("DFlare",40,0,random(-4,4));
	 }
	}
    DIAB P 0 BRIGHT A_Jump (64,"Attack3")
    DIAB P 0 BRIGHT A_Jump (128,"Attack4")
    Goto See

  Attack3:
    DIAB GHIJKLMN 5 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_FaceTarget;
	}
    DIAB O 5 BRIGHT 
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_Playsound ("weapons/firbfi");
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("DMissileCrisis",32,0,0);
	 }
	 else
	 {
      A_CustomMissile("DMissile",32,0,0);
	 }
	}
    DIAB P 5 BRIGHT
    DIAB P 0 BRIGHT A_Jump (128,"Attack4")
    Goto See

  Attack4:
    DIAB "[\" 8 BRIGHT
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }

	 A_FaceTarget;
	}
    DIAB ] 8 BRIGHT
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }

	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("DTracerCrisis",0,-40,0);
      A_CustomMissile("DTracerCrisis",0,40,0);
	 }
	 else
	 {
      A_CustomMissile("DTracer",0,-40,0);
      A_CustomMissile("DTracer",0,40,0);
	 }
	}
    Goto See 

  GravityAttackCheck:
    DIAB G 0 BRIGHT A_CheckFlag("FRIENDLY", "Missile")
    DIAB G 0 BRIGHT
	{
	 if (random(1,8) <= 3)
	 {
	  A_SetUserVar("user_gravitytype",3);
	 }
	 else
	 {
	  A_SetUserVar("user_gravitytype",random(1,2));
	 }
	}
  Attack5:
    DIAB G 0 BRIGHT A_FaceTarget
    DIAB G 3 BRIGHT
    {
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 if (user_gravitytype == 1 || user_gravitytype == 3) 
	 {
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_VileTarget("DiabloistGravityHPTargeter3"); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_VileTarget("DiabloistGravityHPTargeter2"); }
 	  else { A_VileTarget("DiabloistGravityHPTargeter"); }
	 }
	 if (user_gravitytype == 2 || user_gravitytype == 3)
	 {
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_VileTarget("DiabloistGravityManaTargeter3"); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_VileTarget("DiabloistGravityManaTargeter2"); }
 	  else { A_VileTarget("DiabloistGravityManaTargeter"); }
	 }
	 A_FaceTarget;
	}
    DIAB HIHGHIHGHIHGHIHGHIHGHI 3 Bright // 72/48/24
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 A_FaceTarget;
	}
    DIAB I 0 BRIGHT A_JumpIfTargetinLOS(2)
    DIAB I 0 BRIGHT A_Jump(256, 3)
    DIAB I 0 BRIGHT A_PlaySound("monster/diagra")
    DIAB I 0 BRIGHT
    {
	 if (user_gravitytype == 1) { ACS_NamedExecuteAlways("DiabloistGravity",0,0,0,0); }
	 if (user_gravitytype == 2) { ACS_NamedExecuteAlways("DiabloistGravity",0,0,1,0); }
	 if (user_gravitytype == 3) { ACS_NamedExecuteAlways("DiabloistGravity",0,0,2,0); }
	}
    DIAB H 3 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 A_FaceTarget;
	}
    Goto See

  ApplyDesperate:
    TNT1 A 0 
    {
     A_GiveInventory("5PercentDMGReduction",1);
     A_GiveInventory("10PercentDMGBonus",1);
     A_GiveInventory("12PercentSpeedBonus",1);
	}
    goto See+2

  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    DIAB A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DIAB AB 10 A_Look 
    goto Spawn+1
  See:
    DIAB A 0 A_JumpIfHealthLower(user_HPBuffRange, "ApplyDesperate")
    DIAB A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    DIAB A 0 ACS_NamedExecute("DiabloistGravityLock",0,0,0)
    DIAB AABBCCDDEEFF 2 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase("","Missile", CHF_FASTCHASE | CHF_RESURRECT); // A_VileChase 
	}
    Loop 

  Heal:
    DIAB "[" 10 BRIGHT
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120)
	 {
	  A_CustomMissile("ReviveProj2", 0, 0, 0-24, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 72-24, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 144-24, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 216-24, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 288-24, 0);
	 }
	 else
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60)
	 {
	  A_CustomMissile("ReviveProj2", 0, 0, 0-40, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 120-40, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 240-40, 0);
	 }
    }
    DIAB "\" 10 BRIGHT
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120)
	 {
	  A_CustomMissile("ReviveProj2", 0, 0, 0, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 72, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 144, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 216, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 288, 0);
	 }
	 else
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60)
	 {
	  A_CustomMissile("ReviveProj2", 0, 0, 0, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 120, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 240, 0);
	 }
	}
    DIAB "]" 10 BRIGHT
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120)
	 {
	  A_CustomMissile("ReviveProj2", 0, 0, 0+24, 0);
 	  A_CustomMissile("ReviveProj2", 0, 0, 72+24, 0);
 	  A_CustomMissile("ReviveProj2", 0, 0, 144+24, 0);
 	  A_CustomMissile("ReviveProj2", 0, 0, 216+24, 0);
	  A_CustomMissile("ReviveProj2", 0, 0, 288+24, 0);
	 }
	 else
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60)
	 {
	  A_CustomMissile("ReviveProj2", 0, 0, 0+24, 0);
 	  A_CustomMissile("ReviveProj2", 0, 0, 120+40, 0);
 	  A_CustomMissile("ReviveProj2", 0, 0, 240+40, 0);
	 }
	}
    Goto See

  Pain: 
    DIAB Q 5 
    DIAB Q 5 A_Pain 
    DIAB G 0 A_Jump(112, "GravityAttackCheck")
    DIAB G 0 A_Jump(120, "Attack1")
    Goto See 
  Pain.Fist:
    DIAB Q 5
    DIAB Q 5 A_Pain
    DIAB QQ 5
    DIAB G 0 A_Jump(112, "GravityAttackCheck")
    DIAB G 0 A_Jump(120, "Attack1")
    Goto See
  Pain.Kick:
    DIAB Q 5
    DIAB Q 5 A_Pain
    DIAB QQQQ 5
    DIAB G 0 A_Jump(112, "GravityAttackCheck")
    DIAB G 0 A_Jump(120, "Attack1")
    Goto See
  Pain.Ice:
    DIAB Q 5   
    DIAB Q 5 A_Pain
    DIAB Q 10
    DIAB Q 0 A_Jump(128, 4)
    DIAB Q 5
    DIAB Q 0 A_Jump(128, 2)
    DIAB Q 5
    DIAB Q 0
    Goto See
  Pain.DoomSpell: 
    TNT1 A 0 A_Jump(224, "GravityAttackCheck")
    TNT1 A 0 A_Jump(240, "AttackCheck1")
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DIAB Q 7 
    DIAB R 7 A_Scream 
    DIAB S 7 A_NoBlocking 
    DIAB TUVW 7 
    DIAB XY 5 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DIAB Z -1 
    Stop    
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    DIAB Q 5 A_GenericFreezeDeath
    DIAB Q 1 A_FreezeDeathChunks
    wait
  Raise:
    DIAB Y 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DIAB X 5
    DIAB WVUTSRQ 7
    goto See
 } 
}


actor DSBaronofHell : BaronofHell 26546
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Hell Nobles"
 bloodcolor "green"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 dropitem DoomSpellMana1 24
 dropitem DoomSpellMana2 20
 dropitem DoomSpellMana3 16
 dropitem Backpack 2
 dropitem Backpack 2
 dropitem Berserk 2
 dropitem Berserk 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem SauronGauntlets 1
 dropitem FloraRandomArmor

 DamageFactor "Crush", 4.4
 DamageFactor "Wind", 0.02
 DamageFactor "PoisonElemental", 1.5
 DamageFactor "Holy", 2 // Demons = +200% Holy Damage
 Painchance "Holy", 150 // Demons = +300% Pain Chance

 Painchance 50
 Painchance "Fist", 75 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "Kick", 125 // Kick attacks have a +150% chance of stunning an enemy
 Painchance "Gauntlets", 75 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "PoisonElemental", 75
 Painchance "Wind", 1
 Painchance "GravityHP", 255
 Painchance "GravityMP", 255
 Painchance "GravityHPMP", 255 

 PainSound "baron/pain" 

 Species "HellNoble"
 +DONTHURTSPECIES

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    BOSS A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BOSS AB 10 A_Look
    goto Spawn+1
  See:
    BOSS A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    BOSS AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BOSS EF 8
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    BOSS G 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomComboAttack("BaronOfHellBallCrisis", 32, ((random(10,15)*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee");
	 }
	 else
	 {
      A_CustomComboAttack("BaronOfHellBall", 32, random(10,15)*random(1,8), "imp/melee");
	 }
	}
    goto See

  Pain:
    BOSS H 2
    BOSS H 2 A_Pain
    Goto See
  Pain.Fist:
    BOSS H 2
    BOSS H 2 A_Pain
    BOSS HH 2
    Goto See
  Pain.Kick:
    BOSS H 2
    BOSS H 2 A_Pain
    BOSS HHHH 2
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BOSS I 8
    BOSS J 8 A_Scream
    BOSS K 8
    BOSS L 8 A_NoBlocking
    BOSS MN 8
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BOSS O -1 A_BossDeath
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BOSS H 5 A_GenericFreezeDeath
    BOSS H 1 A_FreezeDeathChunks
    wait
  Raise:
    BOSS O 8 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BOSS NMLKJI 8
    Goto See
 }
}

actor Belphegor : HellKnight 5008
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Hell Nobles"
  bloodcolor "green"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana3 24
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem DiamondSkin 2
  dropitem DiamondSkin 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor

  Health 1500
  PainChance 25
  SeeSound "belphegor/sight"
  PainSound "belphegor/pain" 
  DeathSound "belphegor/death"
  ActiveSound "baron/active"
  Obituary "%o was slain by a Belphegor."
  HitObituary "%o was slain by a Belphegor."

  DamageFactor "Normal", 0.975
  RadiusDamageFactor 0.975
  DamageFactor "Explosive", 0.975

 DamageFactor "Crush", 4.4
 DamageFactor "Wind", 0.02
 DamageFactor "PoisonElemental", 1.5
 DamageFactor "Holy", 2 // Demons = 200% Holy Damage
 Painchance "Holy", 75 // Demons = 300% Pain Chance

 Painchance 25
 Painchance "Fist", 38 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "Kick", 63 // Kick attacks have a +150% chance of stunning an enemy
 Painchance "Gauntlets", 38 // Fist attacks have a +50% chance of stunning an enemy
 Painchance "PoisonElemental", 38
 Painchance "Wind", 1
 Painchance "GravityHP", 255
 Painchance "GravityMP", 255
 Painchance "GravityHPMP", 255 

  Species "HellNoble"
  +DONTHURTSPECIES

  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    BOS3 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BOS3 A 0 A_SetUserVar("user_shotsfired",0)
    BOS3 AB 10 A_Look
    goto Spawn+1
  See:
    BOS3 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    BOS3 A 0 A_SetUserVar("user_shotsfired",0)
    BOS3 AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    TNT1 A 0 A_Jump(32,2) // 12.5% chance of skipping the shotsfired check and possibly shooting an extra shot/nova
    TNT1 A 0 A_JumpIf(user_shotsfired > 2, "See")
    BOS3 EF 6
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    BOS3 G 6
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomComboAttack("BelphegorBallCrisis", 40, ((12.5*random(1,8)) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee");
	 }
	 else
	 {
      A_CustomComboAttack("BelphegorBall", 40, (12.5*random(1,8)), "imp/melee");
	 }
	}
    TNT1 A 0 A_SetUserVar("user_shotsfired",user_shotsfired+1)
    goto Missile

  Pain:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    BOS3 H 2
    BOS3 H 2 A_Pain
    Goto See
  Pain.Fist:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    BOS3 H 2
    BOS3 H 2 A_Pain
    BOS3 HH 2
    Goto See
  Pain.Kick:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    BOS3 H 2
    BOS3 H 2 A_Pain
    BOS3 HHHH 2
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BOS3 I 8
    BOS3 J 8 A_Scream
    BOS3 K 8
    BOS3 L 8 A_NoBlocking
    BOS3 MN 8
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BOS3 O -1 A_BossDeath
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BOS3 H 5 A_GenericFreezeDeath
    BOS3 H 1 A_FreezeDeathChunks
    wait
  Raise:
    BOS3 O 8 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BOS3 NMLKJI 8
    Goto See
  }
}

actor BruiserDemon : BaronOfHell 3333
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Hell Nobles"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  PainChance "Ice", 60
  DamageFactor "Ice", 3.33
  DamageFactor "Fire", 0.2
  DamageFactor "Normal", 0.875
  RadiusDamageFactor 0.5
  DamageFactor "Explosive", 0.5
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana3 24
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem DiamondSkin 2
  dropitem DiamondSkin 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor

  Health 2000
  Radius 24
  Height 64
  Mass 1750
  Speed 8
  Monster
  +FLOORCLIP
  +MISSILEEVENMORE
  Species "HellNoble"
  +DONTHURTSPECIES
  +AVOIDMELEE
  MissileType BruiserBall
  SeeSound "superbaron/scream"
  PainSound "superbaron/pain"
  DeathSound "superbaron/death"
  ActiveSound "superbaron/act"
  MeleeSound "baron/melee"
  Obituary "%o was slaughtered by a Bruiser demon."
  HitObituary "%o was cremated by a Bruiser demon."
  MeleeDamage 20
  Scale 1.125

  DamageFactor "Crush", 4.0
  DamageFactor "Wind", 0.5
  DamageFactor "PoisonElemental", 1.5
  DamageFactor "Ice", 2.5
  DamageFactor "Fire", 0.5
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 45 // Demons = +300% Pain Chance

  Painchance 15
  Painchance "Fist", 23 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 38 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 23 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "PoisonElemental", 23
  Painchance "Wind", 8
  PainChance "Ice", 42
  PainChance "Fire", 7
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  States
  {
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BRUS E 0 Bright A_Jump(24, "AttackCheck5") // Jump to Fire Wave
    BRUS E 0 Bright A_Jump(144, "AttackCheck3") // Jump to Swipe attack #1
  // Bruiser Main Fireball #1 - Normal
  Attack1:
    BRUS EF 6 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    BRUS G 6 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("BruiserBallCrisis",56,0,0,0);
	 }
	 else
	 {
      A_CustomMissile("BruiserBall",56,0,0,0);
	 }
	}
    BRUS G 0 Bright A_Jump(96, "Attack2") // Jump to Main Fireball #2
    Goto See

  // Bruiser Main Fireball #2 - Normal
  Attack2:
    BRUS HI 6 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    BRUS J 6 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("BruiserBallCrisis",56,0,0,0);
	 }
	 else
	 {
      A_CustomMissile("BruiserBall",56,0,0,0);
	 }
	}
    Goto See

  // Bruiser Fire Swipe #1 - Normal
  AttackCheck3:
    BRUS E 0 Bright A_Jump(96, "AttackCheck5") // Jump to Ground Fire Attack
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckCrisisAttackType") == 0, "Attack3")
    BRUS E 0 A_JumpIfHealthLower(user_HPCritRange, "AltShock3")
    BRUS E 0 A_JumpIfHealthLower(user_HPLowRange, "AltShockCheck3")
  Attack3:
    BRUS E 6 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    BRUS F 4 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
	}
    BRUS F 2 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_FaceTarget;
	 A_CustomMissile("BruiserBall2",56,0,-40,0);
	}
    BRUS G 1 Bright A_CustomMissile("BruiserBall2",56,0,-30,0)
    BRUS G 1 Bright A_CustomMissile("BruiserBall2",56,0,-20,0)
    BRUS G 1 Bright A_CustomMissile("BruiserBall2",56,0,-10,0)
    BRUS G 1 Bright A_CustomMissile("BruiserBall2",56,0,0,0)
    BRUS G 1 Bright A_CustomMissile("BruiserBall2",56,0,10,0)
    BRUS G 1 Bright A_CustomMissile("BruiserBall2",56,0,20,0)
    BRUS G 0 Bright A_Jump(96, "AttackCheck4") // Jump to Fire Swipe #2
    Goto See

  // Bruiser Fire Swipe #1 - Alt-Crisis
  AltShockCheck3:
    BRUS E 0 A_Jump(192, "Attack3")
  AltShock3:
    BRUS E 6 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    BRUS F 4 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
	}
    BRUS F 2 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
     A_PlaySound("crisisattack2",7);
     A_PlaySound("crisisattack",6);
	 A_CustomMissile("BruiserBall2Crisis",56,0,-40,0);
	}
    BRUS G 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,-30,0)
    BRUS G 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,-20,0)
    BRUS G 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,-10,0)
    BRUS G 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,0,0)
    BRUS G 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,10,0)
    BRUS G 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,20,0)
    BRUS G 0 Bright A_Jump(96, "AttackCheck4") // Jump to Fire Swipe #2
    Goto See

  // Bruiser Fire Swipe #2 - Normal
  AttackCheck4:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckCrisisAttackType") == 0, "Attack4")
    BRUS E 0 A_JumpIfHealthLower(user_HPCritRange, "AltShock4")
    BRUS E 0 A_JumpIfHealthLower(user_HPLowRange, "AltShockCheck4")
  Attack4:
    BRUS H 6 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    BRUS I 4 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    BRUS I 2 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_FaceTarget;
	 A_CustomMissile("BruiserBall2",56,0,40,0);
	}
    BRUS J 1 Bright A_CustomMissile("BruiserBall2",56,0,30,0)
    BRUS J 1 Bright A_CustomMissile("BruiserBall2",56,0,20,0)
    BRUS J 1 Bright A_CustomMissile("BruiserBall2",56,0,10,0)
    BRUS J 1 Bright A_CustomMissile("BruiserBall2",56,0,0,0)
    BRUS J 1 Bright A_CustomMissile("BruiserBall2",56,0,-10,0)
    BRUS J 1 Bright A_CustomMissile("BruiserBall2",56,0,-20,0)
    Goto See

  // Bruiser Fire Swipe #2 - Alt-Crisis
  AltShockCheck4:
    BRUS E 0 A_Jump(192, "Attack4")
  AltShock4:
    BRUS H 6 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    BRUS I 4 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
	}
    BRUS I 2 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_FaceTarget;
     A_PlaySound("crisisattack2",7);
     A_PlaySound("crisisattack",6);
	 A_CustomMissile("BruiserBall2Crisis",56,0,40,0);
	}
    BRUS J 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,30,0)
    BRUS J 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,20,0)
    BRUS J 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,10,0)
    BRUS J 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,0,0)
    BRUS J 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,-10,0)
    BRUS J 1 Bright A_CustomMissile("BruiserBall2Crisis",56,0,-20,0)
    Goto See

  // Bruiser Ground Fire - Normal
  AttackCheck5:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckCrisisAttackType") == 0, "Attack5")
    BRUS E 0 A_JumpIfHealthLower(user_HPCritRange, "AltShock5")
    BRUS E 0 A_JumpIfHealthLower(user_HPLowRange, "AltShockCheck5")
  Attack5:
    BRUS KL 6 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    BRUS M 2 Bright 
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_CustomMissile("BruiserFireSpawner",16,0,-15,0);
	}
    BRUS M 2 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_CustomMissile("BruiserFireSpawner",16,0,0,0);
	}
    BRUS M 2 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_CustomMissile("BruiserFireSpawner",16,0,15,0);
	}
    TNT1 A 0 A_Jump(32,"AttackCheck5")
    Goto See

  // Bruiser Ground Fire - Alt-Crisis
  AltShockCheck5:
    BRUS E 0 A_Jump(192, "Attack5")
  AltShock5:
    BRUS KL 6 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    BRUS M 2 Bright 
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_FaceTarget;
	 A_PlaySound("crisisattack2",7);
	 A_PlaySound("crisisattack",6);
	 A_CustomMissile("BruiserFireSpawnerCrisis",16,0,-15,0);
	}
    BRUS M 2 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_CustomMissile("BruiserFireSpawnerCrisis",16,0,0,0);
	}
    BRUS M 2 Bright
 	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_CustomMissile("BruiserFireSpawnerCrisis",16,0,15,0);
	}
    TNT1 A 0 A_Jump(32,"AttackCheck5")
    Goto See

  ApplyDesperate:
    TNT1 A 0 
    {
     A_GiveInventory("15PercentDMGReduction",1);
     A_GiveInventory("30PercentDMGBonus",1);
	 if (user_isstealth <= 0) { A_GiveInventory("EnemyShadow",1); }
	}
    goto See+2

  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  ResetLevel:
    BRUS A 1 A_Look
    BRUS A 1 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BRUS A 1 A_SetUserVar("user_ressurrectstr",user_ressurrectstr+random(10,20))
    BRUS A 1 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
	goto Spawn+1
  Spawn:
    BRUS A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BRUS AB 10 BRIGHT A_Look
    goto Spawn+1
  See:
    BRUS A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    BRUS A 0 A_JumpIfHealthLower(user_HPBuffRange, "ApplyDesperate")
    BRUS AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BRUS EF 6 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_FaceTarget;
	}
    BRUS G 6 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 270) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(5); }
	 A_ComboAttack;
	}
    Goto See
  Pain:
    BRUS N 5 Bright A_Pain
    Goto See
  Pain.Fist:
    BRUS N 5 Bright A_Pain
    BRUS NN 5 Bright
    Goto See
  Pain.Kick:
    BRUS N 5 Bright A_Pain
    BRUS NNNN 5 Bright
    Goto See
  Pain.Ice:
    BRUS N 5 Bright A_Pain
    BRUS N 20 Bright
    BRUS N 0 Bright A_Jump (128, 4)
    BRUS N 5 Bright
    BRUS N 0 Bright A_Jump (128, 2)
    BRUS N 5 Bright
    BRUS N 0 Bright
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BRUD A 6 Bright A_Scream
    BRUD BCD 4 Bright 
    BRUD EFG 4 Bright
    BRUD H 4 Bright A_Fall
    BRUD IJKLMNOP 4 Bright
    BRUD QRSTUV 4
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BRUD W -1   
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BRUS N 5 A_GenericFreezeDeath
    BRUS N 1 A_FreezeDeathChunks
    wait
  Raise:
    BRUD V 4 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BRUD UTSRQPONMLKJIHGFEDCBA 4
    Goto See
  }
}

actor ArchonOfHell : BaronOfHell 30104
{ 
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Hell Nobles"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana3 24
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem DiamondSkin 2
  dropitem DiamondSkin 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor

  Health 2000 
  Radius 24 
  Height 64 
  Mass 1750 
  Speed 8 
  MONSTER
  MeleeDamage 10
  Obituary "%o was no match for an archon of hell."
  HitObituary "%o was ripped apart by an archon of hell."
  BloodColor "20 60 20"
  +FLOORCLIP 
  +MISSILEMORE
  Species "HellNoble"
  +DONTHURTSPECIES
  +AVOIDMELEE
  SeeSound "monster/ar2sit" 
  PainSound "archon/pain" 
  DeathSound "monster/ar2dth"
  MeleeSound "baron/melee"
  Scale 1.125

  DamageFactor "Crush", 4.0
  DamageFactor "Normal", 0.875
  DamageFactor "Wind", 0.5
  DamageFactor "PoisonElemental", 1.5
  DamageFactor "Ice", 3.33
  DamageFactor "Fire", 0.4
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  RadiusDamageFactor 0.5
  DamageFactor "Explosive", 0.5

  Painchance 20
  Painchance "Fist", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 50 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "PoisonElemental", 30
  Painchance "Wind", 8
  PainChance "Ice", 80
  PainChance "Fire", 8
  Painchance "Holy", 45 // Demons = +300% Pain Chance
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  States 
  { 
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BOS4 E 0 A_Jump(128, "AttackComet") // Jumps to Comet Attack
    goto AttackThrow1

  // Comet Attack - Normal
  AttackComet:
    BOS4 O 0 Bright A_Jump(128, "AttackThrowWave") // Jumps to Wave Throw
    BOS4 MN 8 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    BOS4 O 4 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("ArchonCometCrisis",28,0,0,0);
	 }
	 else
	 {
      A_CustomMissile("ArchonComet",28,0,0,0);
	 }
	}
    BOS4 P 4 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    Goto See

    // Right Throw - Normal
  AttackThrow1:
    BOS4 EF 8 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    BOS4 G 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,0,0);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,-4,0);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,4,0);
	 }
	 else
	 {
      A_CustomMissile("ArchonOfHellBall",28,0,0,0);
      A_CustomMissile("ArchonOfHellBall",28,0,-4,0);
      A_CustomMissile("ArchonOfHellBall",28,0,4,0);
	 }
	}
    BOS4 H 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
	}
    BOS4 H 0 Bright A_Jump(64, "AttackComet") // Jumps to Comet Attack
    Goto AttackThrow2 // Jumps to Left Throw

  // Left Throw - Normal
  AttackThrow2:
    BOS4 IJ 8 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    BOS4 K 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,0,0);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,-4,0);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,4,0);
	 }
	 else
	 {
      A_CustomMissile("ArchonOfHellBall",28,0,0,0);
      A_CustomMissile("ArchonOfHellBall",28,0,-4,0);
      A_CustomMissile("ArchonOfHellBall",28,0,4,0);
	 }
	}
    BOS4 L 4 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    BOS4 L 0 Bright A_Jump(64, "AttackComet") // Jumps to Comet Attack
    Goto See

  // Middle Attack - Normal
  AttackThrowWave:
    BOS4 MN 8 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    BOS4 O 4 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,6,0);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,4,0);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,2,0);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,0,0);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,-2,0);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,-4,0);
      A_CustomMissile("ArchonOfHellBallCrisis",28,0,-6,0);
	 }
	 else
	 {
      A_CustomMissile("ArchonOfHellBall",28,0,-6,0);
      A_CustomMissile("ArchonOfHellBall",28,0,-4,0);
      A_CustomMissile("ArchonOfHellBall",28,0,-2,0);
      A_CustomMissile("ArchonOfHellBall",28,0,0,0);
      A_CustomMissile("ArchonOfHellBall",28,0,2,0);
      A_CustomMissile("ArchonOfHellBall",28,0,4,0);
      A_CustomMissile("ArchonOfHellBall",28,0,6,0);
	 }
	}
    BOS4 P 4 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    Goto See

  ApplyDesperate:
    TNT1 A 0 
    {
     A_GiveInventory("15PercentDMGReduction",1);
     A_GiveInventory("30PercentDMGBonus",1);
	 if (user_isstealth <= 0) { A_GiveInventory("EnemyShadow",1); }
	}
    goto See+2

  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  ResetLevel:
    BOS4 A 1 A_Look
    BOS4 A 1 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BOS4 A 1 A_SetUserVar("user_ressurrectstr",user_ressurrectstr+random(10,20))
    BOS4 A 1 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
	goto Spawn+1
  Spawn:
    BOS4 A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BOS4 AB 10 A_Look
    goto Spawn+1
  See:
    BOS4 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    BOS4 A 0 A_JumpIfHealthLower(user_HPBuffRange, "ApplyDesperate")
    BOS4 AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    loop

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BOS4 EF 8 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    BOS4 G 4 Bright
	{
	 A_FaceTarget;
	 A_MeleeAttack;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    BOS4 H 4 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    BOS4 H 0 A_Jump (128,1)
    Goto See
    BOS4 IJ 8 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    BOS4 K 4 Bright
	{
	 A_FaceTarget;
	 A_MeleeAttack;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    BOS4 L 4 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    BOS4 L 0 A_Jump (64,1)
    Goto See
    BOS4 MN 8 Bright
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    BOS4 O 4 Bright
	{
	 A_FaceTarget;
	 A_MeleeAttack;
	 A_MeleeAttack;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    BOS4 P 4 Bright
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    Goto See
  Pain: 
    BOS4 Q 2 
    BOS4 Q 2 A_Pain 
    Goto See 
  Pain.Fist: 
    BOS4 Q 2 
    BOS4 Q 2 A_Pain 
    BOS4 QQ 2 
    Goto See 
  Pain.Kick: 
    BOS4 Q 2 
    BOS4 Q 2 A_Pain 
    BOS4 QQQQ 2 
    Goto See 
  Pain.Ice:
    BOS4 Q 2 
    BOS4 Q 2 A_Pain 
    BOS4 Q 12 
    BOS4 Q 0 Bright A_Jump (128, 4)
    BOS4 Q 6 Bright
    BOS4 Q 0 Bright A_Jump (128, 2)
    BOS4 Q 6 Bright
    BOS4 Q 0 Bright
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BOS4 R 6 Bright 
    BOS4 S 6 Bright A_Scream 
    BOS4 T 6 Bright 
    BOS4 U 6 Bright A_NoBlocking 
    BOS4 VW 6 Bright 
    BOS4 X 6 Bright A_CustomMissile("ArchonSoul",86,0,0,2,90)
    BOS4 YZ 6 Bright 
    BOS4 [ 6 Bright A_Fall 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BOS4 Q 5 A_GenericFreezeDeath
    BOS4 Q 1 A_FreezeDeathChunks
    wait
  } 
}

actor PyroDemon : BaronofHell 30105
{ 
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Hell Nobles"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana1 72
  dropitem DoomSpellMana1 72
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana2 60
  dropitem DoomSpellMana2 60
  dropitem DoomSpellMana3 24
  dropitem DoomSpellMana3 48
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem DiamondSkinGA 2
  dropitem StoneSkinGA 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor

  DamageFactor "Crush", 3.4
  DamageFactor "Normal", 0.8334
  DamageFactor "Wind", 0.5
  DamageFactor "PoisonElemental", 1.5
  DamageFactor "Ice", 8.88
  DamageFactor "Fire", 0.05
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  RadiusDamageFactor 0.5
  DamageFactor "Explosive", 0.5

  Painchance 20
  Painchance "Fist", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 50 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Wind", 8
  Painchance "PoisonElemental", 30
  PainChance "Ice", 160
  PainChance "Fire", 1
  Painchance "Holy", 60 // Demons = +300% Pain Chance
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  Scale 1.1875
  Health 3000
  Radius 24 
  Height 64 
  Mass 2250 
  Speed 8 
  MONSTER
  MeleeDamage 10
  OBITUARY "%o was burnt to a crisp by a pyro demon"
  HITOBITUARY "%o was melted my a pyro demon"
  Bloodcolor "75 25 00"
  +NOTARGET
  +FLOORCLIP
  +MISSILEMORE
  Species "HellNoble"
  +DONTHURTSPECIES
  +AVOIDMELEE
  SEESOUND "pyro/see" 
  PAINSOUND "pyro/pain" 
  DEATHSOUND "pyro/death"
  ACTIVESOUND "pyro/idle"
  states 
  { 
  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    PYRO E 0 A_Jump(32,"Attack4")
    PYRO E 0 A_Jump(32,"Attack3")
  // Fire Shots - Normal
  Attack1:
    PYRO EF 8 BRIGHT
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    PYRO G 4 BRIGHT
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("FireShotCrisis",28,0,-4,0);
      A_CustomMissile("FireShotCrisis",28,0,0,0);
      A_CustomMissile("FireShotCrisis",28,0,4,0);
	 }
	 else
	 {
      A_CustomMissile("FireShot",28,0,-4,0);
      A_CustomMissile("FireShot",28,0,0,0);
      A_CustomMissile("FireShot",28,0,4,0);
	 }
	}
    PYRO H 4 BRIGHT
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    PYRO H 0 A_Jump(32,"Attack2")
  Attack1a:
    PYRO IJ 8 BRIGHT
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    PYRO K 4 BRIGHT
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("FireShotCrisis",28,0,-4,0);
      A_CustomMissile("FireShotCrisis",28,0,0,0);
      A_CustomMissile("FireShotCrisis",28,0,4,0);
	 }
	 else
	 {
      A_CustomMissile("FireShot",28,0,-4,0);
      A_CustomMissile("FireShot",28,0,0,0);
      A_CustomMissile("FireShot",28,0,4,0);
	 }
	}
    PYRO L 4 BRIGHT
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    PYRO L 0 A_Jump(32,"Attack2")
    Goto See

  // Pyro Blast - Normal
  Attack2:
    PYRO MN 8 BRIGHT
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    PYRO O 4 BRIGHT
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("PyroBlastCrisis",28,0,0,0);
	 }
	 else
	 {
      A_CustomMissile("PyroBlast",28,0,0,0);
	 }
	}
    PYRO P 4 BRIGHT
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    Goto See

  // Comet Rain Attack - Normal
  Attack3:
    PYRO MN 8 BRIGHT
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    PYRO O 4 BRIGHT
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("RainCometNullCrisis",28,0,0,0);
      A_CustomMissile("RainCometNullCrisis",28,0,90,0);
      A_CustomMissile("RainCometNullCrisis",28,0,180,0);
      A_CustomMissile("RainCometNullCrisis",28,0,270,0);
	 }
	 else
	 {
      A_CustomMissile("RainCometNull",28,0,0,0);
      A_CustomMissile("RainCometNull",28,0,90,0);
      A_CustomMissile("RainCometNull",28,0,180,0);
      A_CustomMissile("RainCometNull",28,0,270,0);
	 }
	}
    PYRO P 4 BRIGHT
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	}
    Goto See

   // Teleportation w/ Pyroballs - Normal
   Attack4:
    PYRO O 1 A_FaceTarget
    PYRO O 0
	{
     A_SetInvulnerable;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("EscapeExplosionCrisis",28,10,0,0);
      A_Mushroom("PyroballCrisis",16); //,MSF_DontHurt
	 }
	 else
	 {
      A_CustomMissile("EscapeExplosion",28,10,0,0);
      A_Mushroom("Pyroball",16); //,MSF_DontHurt
	 }
	}
    PYRO O 3 
    PYRO P 3 BRIGHT
    PYRO A 0 A_UnSetShootable
    PYRO A 1 A_PlaySound("pyro/tele")
    PYRO A 1 A_SetTranslucent(0.90)
    PYRO A 1 A_SetTranslucent(0.80)
    PYRO A 1 A_SetTranslucent(0.70)
    PYRO A 1 A_SetTranslucent(0.60)
    PYRO A 1 A_SetTranslucent(0.50)
    PYRO A 1 A_SetTranslucent(0.40)
    PYRO A 1 A_SetTranslucent(0.30)
    PYRO A 1 A_SetTranslucent(0.20)
    PYRO A 1 A_SetTranslucent(0.10)
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander
    TNT1 A 0 A_Jump(128,25)
    TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_ExtChase(0,0,1,1)
    PYRO A 1 A_PlaySound("pyro/tele")
    PYRO A 1 A_SetTranslucent(0.10)
    PYRO A 1 A_SetTranslucent(0.20)
    PYRO A 1 A_SetTranslucent(0.30)
    PYRO A 1 A_SetTranslucent(0.40)
    PYRO A 1 A_SetTranslucent(0.50)
    PYRO A 1 A_SetTranslucent(0.60)
    PYRO A 1 A_SetTranslucent(0.70)
    PYRO A 1 A_SetTranslucent(0.80)
    PYRO A 1 A_SetTranslucent(0.90)
    PYRO A 1 A_SetTranslucent(1.0)
    PYRO A 0 
	{
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("EscapeExplosionCrisis",28,10,0,0);
      A_Mushroom("PyroballCrisis",16); //,MSF_DontHurt
	 }
	 else
	 {
      A_CustomMissile("EscapeExplosion",28,10,0,0);
      A_Mushroom("Pyroball",16); //,MSF_DontHurt
	 }
	}
    PYRO A 0 A_SetShootable
    PYRO A 0 A_UnSetInvulnerable
    Goto See

  ApplyDesperate:
    TNT1 A 0 
    {
     A_GiveInventory("20PercentDMGReduction",1);
     A_GiveInventory("40PercentDMGBonus",1);
	 if (user_isstealth <= 0) { A_GiveInventory("EnemyShadow",1); }
	}
    goto See+2

  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  ResetLevel:
    PYRO A 1 A_Look
    PYRO A 1 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    PYRO A 1 A_SetUserVar("user_ressurrectstr",user_ressurrectstr+random(10,20))
    PYRO A 1 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
	goto Spawn+1
  Spawn:
    PYRO A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    PYRO AB 10 A_Look
    goto Spawn+1
  See:
    PYRO A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    PYRO A 0 A_JumpIfHealthLower(user_HPBuffRange, "ApplyDesperate")
    PYRO AA 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    PYRO A 0
	{
	 if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("WalkFire",0,0,0,1,0,0,0,128); }
	}
    PYRO B 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    PYRO B 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	  A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
    PYRO B 0
	{
	 if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("WalkFire",0,0,0,1,0,0,0,128); }
	}
    PYRO C 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
    PYRO C 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    PYRO C 0
	{
	 if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("WalkFire",0,0,0,1,0,0,0,128); }
	}
    PYRO DD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    PYRO D 0
	{
	 if (GetCVar("dvds_gfxeffectlevel") == 0) { A_SpawnItemEx("WalkFire",0,0,0,1,0,0,0,128); }
	}
    Loop 

  Pain: 
    PYRO Q 2 
    PYRO Q 2 A_Pain 
    PYRO A 0 A_Jump(8,"Attack4")
    Goto See 
  Pain.Fist: 
    PYRO Q 2 
    PYRO Q 2 A_Pain 
    PYRO QQ 2 
    PYRO A 0 A_Jump(8,"Attack4")
    Goto See 
  Pain.Kick: 
    PYRO Q 2 
    PYRO Q 2 A_Pain 
    PYRO QQQQ 2 
    PYRO A 0 A_Jump(8,"Attack4")
    Goto See 
  Pain.Ice:
    PYRO Q 2 
    PYRO Q 2 A_Pain 
    PYRO Q 36 
    PYRO Q 0 Bright A_Jump (128, 8)
    PYRO Q 24 Bright
    PYRO Q 0 Bright A_Jump (128, 6)
    PYRO Q 18 Bright
    PYRO Q 0 Bright A_Jump (128, 4)
    PYRO Q 12 Bright
    PYRO Q 0 Bright A_Jump (128, 2)
    PYRO Q 6 Bright
    PYRO Q 0 Bright
    PYRO A 0 A_Jump(128,"Attack4")
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    PYRO Q 2 
    PYRO Q 2 A_Pain 
    PYRO A 0 A_Jump(32,"Attack4")
    Goto See 
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    PYRO R 20 BRIGHT A_Scream
    PYRO S 20 BRIGHT
    PYRO T 20 BRIGHT 
    PYRO U 20 BRIGHT A_NoBlocking 
    PYRO VW 6 BRIGHT 
    PYRO X 6 BRIGHT
    PYRO Y 3 BRIGHT 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    PYRO Z -1 BRIGHT
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    PYRO Q 5 A_GenericFreezeDeath
    PYRO Q 1 A_FreezeDeathChunks
    wait
  Raise:
    PYRO Y 3 BRIGHT ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    PYRO XWV 6 BRIGHT
    PYRO UTSR 20 BRIGHT
    Goto See
  } 
}


actor DSSpiderMastermind : SpiderMastermind 26552
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Boss Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  var float user_shotaccuracy; var float user_shotaccuracy1; var float user_shotaccuracy2;
  var float user_shotzaccuracy; var float user_shotzaccuracy1; var float user_shotzaccuracy2;
  var int user_pelletsfired;
  dropitem RandomPowerupSpawner 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem DoomSpellMana1 88
  dropitem DoomSpellMana2 66
  dropitem DoomSpellMana3 44
  dropitem ChainGun 32 10
  dropitem ChainGun 2 30
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem FloraRandomArmor

  +AVOIDMELEE
  PainSound "mastermind/pain"
  AttackSound "spider/attack" 

  DamageFactor "Crush", 1.6
  DamageFactor "Thunder", 1.75
  Painchance "Thunder", 70 // Demons = +300% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 120 // Demons = +300% Pain Chance

  Painchance 40
  Painchance "Fist", 60 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 100 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 60 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

 Species "SpiderMastermind"
 +DONTHARMSPECIES
 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    SPID A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SPID AB 10 A_Look
    goto Spawn+1
  See:
    SPID A 0
	{ 
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0);
	 A_SetUserVar("user_shotsfired",0);	 
	}
    SPID A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Metal;
    }
    SPID ABB 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Chase;
    }
    SPID C 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Metal;
    }
    SPID CDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Chase;
    }
    SPID E 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Metal;
    }
    SPID EFF 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Chase;
    }
    loop

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    TNT1 A 0
	{
 	 A_SetUserVar("user_shotsfiredmax",random(75,125));
 	 A_SetUserVar("user_shotsfiredmax",random(75,125));
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(30,60))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(25,50))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(20,40))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(15,30))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(10,20))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(5,10))); }
    }
    SPID A 20 BRIGHT
	{
	 A_FaceTarget;
	 A_SetUserVar("user_shotaccuracy",22.5);
	 A_SetUserVar("user_shotzaccuracy",0.0);
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*13)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*13)/19)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetTics(15); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*14)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*14)/19)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(16); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*15)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*15)/19)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(17); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*16)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*16)/19)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(18); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*17)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*17)/19)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetTics(19); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*18)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*18)/19)); }
	 A_SetUserVar("user_shotaccuracy1",user_shotaccuracy/-2); A_SetUserVar("user_shotaccuracy2",user_shotaccuracy/2);
	 A_SetUserVar("user_shotzaccuracy1",user_shotzaccuracy/-2); A_SetUserVar("user_shotzaccuracy2",user_shotzaccuracy/2);
	}
	SPID A 0 A_MonsterRefire(10,"See")
  Attack:
    SPID G 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_FaceTarget;
     A_PlaySound("shotguy/attack");
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }

	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomBulletAttack (user_shotaccuracy, user_shotzaccuracy, 3, ((random(1,5) * 3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, 1);
	  }
	  else
	  {
	   A_CustomBulletAttack (user_shotaccuracy, user_shotzaccuracy, 3, random(1,5) * 3, "BulletPuff", 0, 1);
	  }
	 }
	 else
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       for (A_SetUserVar(user_pelletsfired, 0); user_pelletsfired < 3; A_SetUserVar(user_pelletsfired, user_pelletsfired + 1))
       {
	    A_CustomMissile("ZombieBulletTracerCrisis", 48, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	   }
	  }
	  else
	  {
       for (A_SetUserVar(user_pelletsfired, 0); user_pelletsfired < 3; A_SetUserVar(user_pelletsfired, user_pelletsfired + 1))
       {
   	    A_CustomMissile("ZombieBulletTracer", 48, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	   }
	  }
	 }

     A_SetUserVar("user_shotsfired",user_shotsfired+1);
     If (A_JumpIf(user_shotsfired > user_shotsfiredmax, "EndMissile")) { return state("EndMissile"); }
	 return state("");
	}
    SPID G 0 A_MonsterRefire(10,"See")
    SPID H 4 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_FaceTarget;
     A_PlaySound("shotguy/attack");
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }

	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomBulletAttack (user_shotaccuracy, user_shotzaccuracy, 3, ((random(1,5) * 3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, 1);
	  }
	  else
	  {
	   A_CustomBulletAttack (user_shotaccuracy, user_shotzaccuracy, 3, random(1,5) * 3, "BulletPuff", 0, 1);
	  }
	 }
	 else
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       for (A_SetUserVar(user_pelletsfired, 0); user_pelletsfired < 3; A_SetUserVar(user_pelletsfired, user_pelletsfired + 1))
       {
	    A_CustomMissile("ZombieBulletTracerCrisis", 48, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	   }
	  }
	  else
	  {
       for (A_SetUserVar(user_pelletsfired, 0); user_pelletsfired < 3; A_SetUserVar(user_pelletsfired, user_pelletsfired + 1))
       {
   	    A_CustomMissile("ZombieBulletTracer", 48, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	   }
	  }
	 }

     A_SetUserVar("user_shotsfired",user_shotsfired+1);
     If (A_JumpIf(user_shotsfired > user_shotsfiredmax, "EndMissile")) { return state("EndMissile"); }
	 return state("");
	}
    SPID H 1 A_MonsterRefire(10,"EndMissile")
    loop

  EndMissile:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    SPID H 0 A_FaceTarget
    Goto See

  Pain:
    SPID I 3
    SPID I 3 A_Pain
    Goto See
  Pain.Fist:
    SPID I 3
    SPID I 3 A_Pain
    SPID II 3
    Goto See
  Pain.Kick:
    SPID I 3
    SPID I 3 A_Pain
    SPID IIII 3
    Goto See
  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    SPID I 3
    SPID I 3
    SPID I 3 A_Pain
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    SPID I 3
    SPID I 3
    SPID I 3
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    SPID I 3
    SPID I 3
    SPID I 3
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Raise:
    SPID S 30
    SPID RQPONML 10
    SPID K 10
    SPID J 20
    goto See
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    SPID J 20 A_Scream
    SPID K 10 A_NoBlocking
    SPID LMNOPQR 10
    SPID S 30
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    SPID S -1 A_BossDeath
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    SPID I 5 A_GenericFreezeDeath
    SPID I 1 A_FreezeDeathChunks
    wait
  Raise:
    SPID S 30 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    SPID QRPONMLK 10
    SPID J 20
    goto See
  }
}

actor Demolisher : SpiderMastermind 30110
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Boss Type"
  dropitem RandomPowerupSpawner 2
  dropitem RandomPowerupSpawner 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem DoomSpellMana1 88
  dropitem DoomSpellMana2 66
  dropitem DoomSpellMana3 44
  dropitem ChainGun 32 10
  dropitem ChainGun 2 30
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem ClipBox 4 50
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem FloraRandomArmor

  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  var float user_shotaccuracy; var float user_shotaccuracy1; var float user_shotaccuracy2;
  var float user_shotzaccuracy; var float user_shotzaccuracy1; var float user_shotzaccuracy2;
  var int user_pelletsfired;
  Obituary "%o felt the power of the Spider-Demolisher."
  Health 6000 
  Radius 96 
  Height 100 
  Mass 1000 
  Speed 16 
  MONSTER
  +NOTARGET
  +FLOORCLIP 
  +BOSS 
  +MISSILEEVENMORE
  +NORADIUSDMG 
  +AVOIDMELEE
  SeeSound "monster/demsit" 
  AttackSound "spider2/attack" 
  PainSound "demolisher/pain"
  DeathSound "monster/demdth" 
  ActiveSound "spider/active" 

  DamageFactor "Normal", 0.875
  RadiusDamageFactor 0.875
  DamageFactor "Explosive", 0.875

  DamageFactor "Crush", 1.6
  DamageFactor "Thunder", 1.75
  Painchance "Thunder", 35 // Demons = +300% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 60 // Demons = +300% Pain Chance

  Painchance 20
  Painchance "Fist", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 50 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  Species "SpiderMastermind"
  +DONTHARMSPECIES
  States 
  { 
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    DEMO A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DEMO AB 10 A_Look
    goto Spawn+1
  See:
    DEMO A 0
	{ 
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0);
	 A_SetUserVar("user_shotsfired",0);	 
	}
    DEMO A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Metal;
    }
    DEMO ABB 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Chase;
    }
    DEMO C 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Metal;
    }
    DEMO CDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Chase;
    }
    DEMO E 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Metal;
    }
    DEMO EFF 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
     A_Chase;
    }
    loop

  Missile:
    TNT1 A 0
	{
	 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1);
 	 A_SetUserVar("user_shotsfiredmax",random(75,125));
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(30,60))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(25,50))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(20,40))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(15,30))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(10,20))); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetUserVar("user_shotsfiredmax",user_shotsfiredmax+(random(5,10))); }
    }
    DEMO A 0 BRIGHT A_Jump (48, "Attack2")

  Attack1:
    DEMO A 20 BRIGHT
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetTics(15); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(16); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(17); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(18); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetTics(19); }
	 A_FaceTarget;
	}
	DEMO A 0 A_MonsterRefire(10,"See")
  Attack1Start:
    DEMO T 1 BRIGHT A_Playsound ("weapons/bfgf")
    DEMO TT 4 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
	}
    DEMO TTTT 5 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    DEMO U 10 BRIGHT
	{
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("BFGBallCrisis",32,0,22.5);
	  A_CustomMissile("BFGBallCrisis",32,0,0);
	  A_CustomMissile("BFGBallCrisis",32,0,-22.5);
	 }
	 else
	 {
	  A_CustomMissile("BFGBall",32,0,22.5);
	  A_CustomMissile("BFGBall",32,0,0);
	  A_CustomMissile("BFGBall",32,0,-22.5);
	 }
	}
    DEMO T 0 BRIGHT A_MonsterRefire(10,"See")
    DEMO T 0 BRIGHT A_Jump (88, "Attack2")
    DEMO T 1 BRIGHT A_Playsound ("weapons/bfgf")
    DEMO TT 4 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;
	}
    DEMO TTTT 5 BRIGHT 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    DEMO U 10 BRIGHT
	{
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("BFGBallCrisis",32,0,11.25);
	  A_CustomMissile("BFGBallCrisis",32,0,0);
	  A_CustomMissile("BFGBallCrisis",32,0,-11.25);
	 }
	 else
	 {
	  A_CustomMissile("BFGBall",32,0,11.25);
	  A_CustomMissile("BFGBall",32,0,0);
	  A_CustomMissile("BFGBall",32,0,-11.25);
	 }
	}
    DEMO T 0 BRIGHT A_MonsterRefire(10,"See")
    DEMO T 0 BRIGHT A_Jump (8, "Attack1Start")
    DEMO T 0 BRIGHT A_Jump (192, "Attack2")
    Goto See

  Attack2:
    DEMO A 20 BRIGHT
	{
	 A_FaceTarget;
	 A_SetUserVar("user_shotaccuracy",33.75);
	 A_SetUserVar("user_shotzaccuracy",6.4);
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(14); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*13)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*13)/19)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 100) { A_SetTics(15); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*14)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*14)/19)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(16); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*15)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*15)/19)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(17); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*16)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*16)/19)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(18); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*17)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*17)/19)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 20) { A_SetTics(19); A_SetUserVar("user_shotaccuracy",((user_shotaccuracy*18)/19)); A_SetUserVar("user_shotzaccuracy",((user_shotzaccuracy*18)/19)); }
	 A_SetUserVar("user_shotaccuracy1",user_shotaccuracy/-2); A_SetUserVar("user_shotaccuracy2",user_shotaccuracy/2);
	 A_SetUserVar("user_shotzaccuracy1",user_shotzaccuracy/-2); A_SetUserVar("user_shotzaccuracy2",user_shotzaccuracy/2);
	}
	DEMO A 0 A_MonsterRefire(10,"See")
   Attack2Start:
    DEMO G 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_PlaySound("spider2/attack");
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }

	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomBulletAttack (user_shotaccuracy, user_shotzaccuracy, 12, ((random(1,5) * 3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, 1);
	  }
	  else
	  {	 
	   A_CustomBulletAttack (user_shotaccuracy, user_shotzaccuracy, 12, random(1,5) * 3, "BulletPuff", 0, 1);
	  }
	 }
	 else
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
       for (A_SetUserVar(user_pelletsfired, 0); user_pelletsfired < 12; A_SetUserVar(user_pelletsfired, user_pelletsfired + 1))
       {
	    A_CustomMissile("ZombieBulletTracerCrisis", 24, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	   }
	  }
	  else
	  {
       for (A_SetUserVar(user_pelletsfired, 0); user_pelletsfired < 12; A_SetUserVar(user_pelletsfired, user_pelletsfired + 1))
       {
	    A_CustomMissile("ZombieBulletTracer", 24, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	   }
	  }
	 }

     A_SetUserVar("user_shotsfired",user_shotsfired+1);
     If (A_JumpIf(user_shotsfired > user_shotsfiredmax, "EndMissile")) { return state("EndMissile"); }
	 return state("");
	}
    DEMO G 0 BRIGHT A_MonsterRefire(10,"See")
    DEMO H 4
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_PlaySound("spider2/attack");
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if (GetCVar("dvds_monsterbulletstracers") == 0)
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomBulletAttack (user_shotaccuracy, user_shotzaccuracy, 12, ((random(1,5) * 3) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "BulletPuff", 0, 1);
	  }
	  else
	  {	 
	   A_CustomBulletAttack (user_shotaccuracy, user_shotzaccuracy, 12, random(1,5) * 3, "BulletPuff", 0, 1);
	  }
	 }
	 else
	 {
	  if(user_canusecrisisatk == 1)
	  {
       A_PlaySound("crisisattack",6);
       A_PlaySound("crisisattack2",7);
	   A_CustomMissile("ZombieBulletTracerCrisis", 24, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	  }
	  else
	  {
	   A_CustomMissile("ZombieBulletTracer", 24, 0, frandom(user_shotaccuracy1,user_shotaccuracy2), CMF_OFFSETPITCH, frandom(user_shotzaccuracy1,user_shotzaccuracy2));
	  }
	 }
     A_SetUserVar("user_shotsfired",user_shotsfired+1);
     If (A_JumpIf(user_shotsfired > user_shotsfiredmax, "EndMissile")) { return state("EndMissile"); }
	 return state("");
	}
    DEMO H 1 BRIGHT A_MonsterRefire(10,"EndMissile")
    loop

  EndMissile:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    SPID H 0 A_FaceTarget
    Goto See

  Pain: 
    DEMO I 3 
    DEMO I 3 A_Pain 
    Goto See 
  Pain.Fist:
    DEMO I 3
    DEMO I 3 A_Pain
    DEMO II 3
    Goto See
  Pain.Kick:
    DEMO I 3
    DEMO I 3 A_Pain
    DEMO IIII 3
    Goto See
  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    DEMO I 3 
    DEMO I 3 
    DEMO I 3 A_Pain 
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    DEMO I 3 
    DEMO I 3 
    DEMO I 3 
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    DEMO I 3 
    DEMO I 3 
    DEMO I 3 
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DEMO J 20 A_Scream
    DEMO K 10 Bright A_NoBlocking 
    DEMO LMNOPQR 10 Bright
    DEMO S 30 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DEMO S -1 A_BossDeath 
    Stop 
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    DEMO I 5 A_GenericFreezeDeath
    DEMO I 1 A_FreezeDeathChunks
    wait
  Raise:
    DEMO S 30 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DEMO QRPONMLK 10
    DEMO J 20
    goto See
  } 
}


actor DSCyberdemon : Cyberdemon 26554
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Boss Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  dropitem RandomPowerupSpawner 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem DoomSpellMana1 112
  dropitem DoomSpellMana2 84
  dropitem DoomSpellMana3 56
  dropitem RocketLauncher 32 5
  dropitem RocketLauncher 2 15
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem FloraRandomArmor

  +AVOIDMELEE
  Species "Cyberdemon"
  +DONTHARMSPECIES
  DamageFactor "Crush", 1.2
  DamageFactor "Thunder", 1.75
  Painchance "Thunder", 35 // Demons = +300% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 60 // Demons = +300% Pain Chance

  Painchance 20
  Painchance "Fist", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 50 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  PainSound "cyberdemon/pain" 
  MeleeRange 180

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    CYBR A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    CYBR AB 10 A_Look
    goto Spawn+1
  See:
    CYBR A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    CYBR A 0
	{
	 A_SetUserVar("user_shotsfired",0);
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120)
	 {
	  if (random(1,8) == 1) { A_SetUserVar("user_shotsfiredmax",6); } else { A_SetUserVar("user_shotsfiredmax",5); }
	 }
	 else
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60)
	 {
	  if (random(1,8) == 1) { A_SetUserVar("user_shotsfiredmax",5); } else { A_SetUserVar("user_shotsfiredmax",4); }
	 }
	 else
	 {
	  if (random(1,8) == 1) { A_SetUserVar("user_shotsfiredmax",4); } else { A_SetUserVar("user_shotsfiredmax",3); }
	 }
	}
    CYBR A 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Hoof;
	 A_JumpIfCloser(120, "Stomp");
	}
    CYBR ABBCC 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	 A_JumpIfCloser(120, "Stomp");
	}
    CYBR D 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Metal;
	 A_JumpIfCloser(120, "Stomp");
	}
    CYBR D 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	 A_JumpIfCloser(120, "Stomp");
	}
    loop

  Stomp:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
	CYBR Z 5
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }

	 A_FaceTarget;
	}
	CYMA A 7
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	}
	CYMA B 7
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	 
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("CyberStompCrisis",10,0,0,0);
	  A_Quake(5,21,0,512,"nosound/silent");
	 }
	 else
	 {
	  A_Quake(2,21,0,512,"nosound/silent");
	  A_CustomMissile("CyberStomp",10,0,0,0);
	 }
	}
	CYMA B 7
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	}
	CYMA B 0 A_Jump(64,2)
	CYMA B 0 A_JumpIfCloser(180, "Stomp")
	CYMA B 0
	Goto See

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
	TNT1 A 0 A_JumpIfCloser(180, "Stomp")
    CYBR E 6
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
  MissileB:
    CYBR F 12
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(8); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(9); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(10); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 30) { A_SetTics(11); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("RocketCrisis");
	 }
	 else
	 {
	  A_CustomMissile("RocketMonster");
	 } 
	}
	CYBR E 0
	{
	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
	 if (user_shotsfired >= user_shotsfiredmax) { if (random(1,4) > 1) { return state("See"); } return state(""); }
	 return state("");
	}
	CYBR E 0 A_JumpIfCloser(180, "Stomp")
    CYBR E 12
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    loop

  Pain:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    CYBR G 5 
    CYBR G 5 A_Pain
    Goto See
  Pain.Fist:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    CYBR G 5 
    CYBR G 5 A_Pain
    CYBR GG 5 
    Goto See
  Pain.Kick:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    CYBR G 5 
    CYBR G 5 A_Pain
    CYBR GGGG 5 
    Goto See
  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    CYBR G 5 
    CYBR G 5 
    CYBR G 5 A_Pain
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    CYBR G 5 
    CYBR G 5 
    CYBR G 5 
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    CYBR G 5 
    CYBR G 5 
    CYBR G 5 
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    CYBR H 10
    CYBR I 10 A_Scream
    CYBR JKL 10
    CYBR M 10 A_NoBlocking
    CYBR NO 10
    CYBR P 30
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    CYBR P -1 A_BossDeath
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    CYBR G 5 A_GenericFreezeDeath
    CYBR G 1 A_FreezeDeathChunks
    wait
  Raise:
    CYBR O 10 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    CYBR NMLKJHI 10
    goto See
 }
}

actor Annihilator : Cyberdemon 30111 
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Boss Type"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  dropitem RandomPowerupSpawner 2
  dropitem RandomPowerupSpawner 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem DoomSpellMana1 112
  dropitem DoomSpellMana1 112
  dropitem DoomSpellMana2 84
  dropitem DoomSpellMana2 84
  dropitem DoomSpellMana2 84
  dropitem DoomSpellMana3 56
  dropitem DoomSpellMana3 56
  dropitem RocketLauncher 32 5
  dropitem RocketLauncher 32 5
  dropitem RocketLauncher 2 15
  dropitem RocketLauncher 2 15
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem RocketBox 4 5
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem FloraRandomArmor

  Obituary "The Cyber Annihilator blew %o away with its rockets."
  Health 8000 
  Radius 40 
  Height 110 
  Mass 1000 
  Speed 16 
  MeleeRange 180
  MONSTER
  +NOTARGET 
  +FLOORCLIP 
  +NORADIUSDMG 
  +BOSS 
  +MISSILEEVENMORE 
  +AVOIDMELEE
  Species "Cyberdemon"
  +DONTHARMSPECIES
  SeeSound "monster/annsit" 
  DeathSound "monster/anndth" 
  ActiveSound "cyber/active" 

  DamageFactor "Normal", 0.875
  RadiusDamageFactor 0.875
  DamageFactor "Explosive", 0.875

  DamageFactor "Crush", 1.2
  DamageFactor "Thunder", 1.75
  Painchance "Thunder", 17 // Demons = +300% Pain Chance
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 30 // Demons = +300% Pain Chance

  Painchance 10
  Painchance "Fist", 15 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 25 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 15 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  PainSound "annihilator/pain" 

  States 
  {
  Stomp:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
	ANNI B 5 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
	ANMA A 7
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	}
	ANMA B 7
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	 
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("AnnhiliatorStompCrisis",10,0,0,0);
	  A_Quake(9,32,0,768,"nosound/silent");
	 }
	 else
	 {
 	  A_Quake(3,32,0,768,"nosound/silent");
	  A_CustomMissile("AnnhiliatorStomp",10,0,0,0);
	 }
	}
	ANMA B 7
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	}
	ANMA B 0 A_Jump(64,2)
	ANMA B 0 A_JumpIfCloser(180, "Stomp")
	ANMA B 0
	Goto See

  AttackPhaseChange:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    ANNI E 0 A_Jump (128, "Attack2")
    goto See

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
	TNT1 A 0 A_JumpIfCloser(180, "Stomp")
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    ANNI E 0 A_Jump (128, "Attack2")

  Attack1:
    ANNI E 6 
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    ANNI F 12 Bright 
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(8); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(9); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(10); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 30) { A_SetTics(11); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile ("Rocket2Crisis",40,27,0);
	  A_CustomMissile ("Rocket2Crisis",40,-27,0);
	 }
	 else
	 {
	  A_CustomMissile ("Rocket2",40,27,0);
	  A_CustomMissile ("Rocket2",40,-27,0);
	 }
	}
    ANNI E 6
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
	TNT1 A 0 A_JumpIfCloser(180, "Stomp")
    TNT1 A 0 A_SetUserVar("user_shotsfired",user_shotsfired+1)
    TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax, "AttackPhaseChange")
    Goto Attack1

  Attack2:
    ANNI E 6
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
    ANNI F 12 Bright
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(8); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(9); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(10); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 30) { A_SetTics(11); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile ("HomRocket1Crisis",40,27,0);
	  A_CustomMissile ("HomRocket1Crisis",40,-27,0);
	 }
	 else
	 {
	  A_CustomMissile ("HomRocket1",40,27,0);
	  A_CustomMissile ("HomRocket1",40,-27,0);
	 }
	}
    ANNI E 6
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
	 else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 A_FaceTarget;
	}
	TNT1 A 0 A_JumpIfCloser(180, "Stomp")
    TNT1 A 0 A_SetUserVar("user_shotsfired",user_shotsfired+1)
    TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax, "See")
    Goto Attack2

  ApplyDesperate:
    TNT1 A 0 
    {
     A_GiveInventory("20PercentDMGWeakness",1);
     A_GiveInventory("40PercentDMGBonus",1);
	 if (user_isstealth <= 0) { A_GiveInventory("EnemyShadowLight",1); }
	}
    goto See+2

  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn: 
    ANNI A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    ANNI AB 10 A_Look 
    goto Spawn+1
  See:
    ANNI A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    ANNI A 0 A_JumpIfHealthLower(user_HPBuffRange, "ApplyDesperate")
    ANNI A 0
	{
 	 A_SetUserVar("user_shotsfired",0);
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120)
	 {
	  if (random(1,8) == 1) { A_SetUserVar("user_shotsfiredmax",6); } else { A_SetUserVar("user_shotsfiredmax",5); }
	 }
	 else
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60)
	 {
	  if (random(1,8) == 1) { A_SetUserVar("user_shotsfiredmax",5); } else { A_SetUserVar("user_shotsfiredmax",4); }
	 }
	 else
	 {
	  if (random(1,8) == 1) { A_SetUserVar("user_shotsfiredmax",4); } else { A_SetUserVar("user_shotsfiredmax",3); }
	 }
	}
    ANNI A 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }

	 A_Playsound ("monster/anhoof");
	 A_Chase;
	 A_JumpIfCloser(120, "Stomp");
	}
    ANNI ABBCC 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }

	 A_Chase;
	 A_JumpIfCloser(120, "Stomp");
	}
    ANNI D 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }

	 A_Playsound ("monster/anhoof");
	 A_Chase;
	 A_JumpIfCloser(120, "Stomp");
	}
    ANNI D 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }

	 A_Chase;
	 A_JumpIfCloser(120, "Stomp");
	}
    Loop 

  Pain: 
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    ANNI G 5
    ANNI G 5 A_Pain 
    Goto See 
  Pain.Fist: 
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    ANNI G 5
    ANNI G 5 A_Pain 
    ANNI GG 5
    Goto See 
  Pain.Kick: 
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    ANNI G 5
    ANNI G 5 A_Pain 
    ANNI GGGG 5
    Goto See 
  Pain.Electric:
  Pain.Lightning:
  Pain.Thunder:
    TNT1 A 0 A_SetUserVar("user_shotsfired",0)
    CYBR G 5 
    CYBR G 5 
    CYBR G 5 A_Pain
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    CYBR G 5 
    CYBR G 5 
    CYBR G 5 
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    CYBR G 5 
    CYBR G 5 
    CYBR G 5 
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    ANNI H 10 Bright
    ANNI I 10 Bright A_Scream 
    ANNI JKL 10 Bright
    ANNI M 10 Bright A_NoBlocking 
    ANNI NO 10 Bright
    ANNI P 30 
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    ANNI P -1 A_BossDeath 
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    ANNI G 5 A_GenericFreezeDeath
    ANNI G 1 A_FreezeDeathChunks
    wait
  Raise:
    ANNI O 10 Bright ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    ANNI NMLKJIH 10 Bright
    goto See
   } 
}


Actor HellCleric 21123
{
 //$Angled
 //$Color 12
 //$Category "DV-DS Monsters/Others"
 var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
 var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
 var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
 var int user_attacktype;
 var int user_attacks;
 var int user_attackmax;
 dropitem DoomSpellMana1 36
 dropitem DoomSpellMana2 30
 dropitem DoomSpellMana3 24
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem HealthBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem ArmorBonus 2
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem MaxHealthBonus 1
 dropitem SauronGauntlets 1
 dropitem SauronHelmet 1
 dropitem FloraRandomArmor

 Health 175
 Height 56
 Radius 20
 Mass 175
 Speed 8
 FastSpeed 16
 ReactionTime 8
 seesound "hellcleric/sight"
 painsound "hellcleric/pain"
 deathsound "hellcleric/death"
 activesound "hellcleric/active" 
 Monster
 +Solid
 +FloorClip
 +DontHurtSpecies
 Damage ((3+(11*(random(6,13))))/2) // 69-146 per whack
 Obituary "%o was burned and flamed by a Hell Cleric."
 HitObituary "%o had %p head bashed in by a Hell Cleric."

  Damagefactor "Magic", 1.65
  Damagefactor "Crush", 3.2
  DamageFactor "Holy", 2.5 // Demons = +250% Holy Damage
  DamageFactor "Fire", 0.75 // Demons = -25% Fire Damage
  DamageFactor "Ice", 1.33 // Demons = +33% Ice Damage

  Damagefactor "Stomp", 0.4 // Hell Clerics are pretty resistant to Stomps from Cyberdemon types
  DamageFactor "Fist", 0.4 // Hell Clerics are pretty resistant to melee damage
  DamageFactor "Kick", 0.4 // Hell Clerics are pretty resistant to melee damage
  DamageFactor "Gauntlets", 0.4 // Hell Clerics are pretty resistant to melee damage
  DamageFactor "Sceptre", 0.4 // Hell Clerics are pretty resistant to melee damage
  DamageFactor "Chainsaw", 0.4 // Hell Clerics are pretty resistant to melee damage

  Painchance 24
  Painchance "Fist", 3 // Hell Clerics are more resistant to pain from punches
  Painchance "Kick", 16 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 3 // Hell Clerics are more resistant to pain from punches
  Painchance "Chainsaw", 3 // Hell Clerics are more resistant to pain from punches
  Painchance "Holy", 72 // Demons = +300% Pain Chance
  Painchance "Magic", 120
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

 states
 {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
   HELC A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
   HELC A 4 A_Look
   HELC A 4 A_Look
   goto Spawn+1

  See:
   HELC A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
   HELC AA 2
   {
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
    else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
    else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }

	if (random(1,16) == 1)
	{
     A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
	else
	{
     A_Chase;
	}
   }
   HELC BB 2
   {
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
    else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
    else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }

    if (random(1,4) == 1)
	{
     A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
	else
	{
     A_Chase;
	}
   }
   HELC CC 2
   {
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
    else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
    else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }

    if (random(1,8) == 1)
	{
     A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
	else
	{
     A_Chase;
	}
   }
   HELC DD 2
   {
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
    else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
    else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }

    if (random(1,2) == 1)
	{
     A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	}
	else
	{
     A_Chase;
	}
   }
   loop

  Melee:
  Missile:
   TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
   HELC E 4 
   {
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
    else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

    A_SetUserVar("user_attacktype",random(1,2));
	A_SetUserVar("user_attacks",0);
	A_SetUserVar("user_attackmax",3);
    A_FaceTarget;
   }
  MissileLoop:
   HELC G 4 
   {
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
    else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

    A_SetUserVar("user_canusecrisisatk",0);
    if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
    if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
    if (user_attacktype == 1)
	{
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomComboAttack("HellClericDarkBallCrisis", 24, ((7+(12*(random(6,12)))/2)* ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee", "Melee", true);
	 }
	 else
	 {
      A_CustomComboAttack("HellClericDarkBall", 24, (7+(12*(random(6,12)))/2), "imp/melee", "Melee", true);
	 }
	}
	else
	{
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomComboAttack("HellClericBallCrisis", 24, ((3+(11*(random(6,13)))/2) * ACS_NamedExecuteWithResult("CrisisMultiplier")), "imp/melee", "Melee", true);
	 }
	 else
	 {
      A_CustomComboAttack("HellClericBall", 24, (3+(11*(random(6,13)))/2), "imp/melee", "Melee", true);
	 }
	}
	A_SetUserVar("user_attacks",user_attacks+1);
   }
   HELC F 0
   {
    if (random(1,8) > 1) { if (user_attacks >= user_attackmax) { return state("See"); } return state(""); }    
	return state("");
   }
   HELC F 3 
   {
    if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
    A_FaceTarget;
   }
   loop

  Pain:
    HELC H 2 A_PlaySound("hellcleric/pain")
    goto See
  Pain.Fist:
    HELC H 2 A_PlaySound("hellcleric/pain")
    HELC H 1
    goto See
  Pain.Kick:
    HELC H 2 A_PlaySound("hellcleric/pain")
    HELC H 2
    goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HELC I 5
    HELC J 5 A_PlaySound("hellcleric/death")
    HELC K 5
    HELC L 5 A_NoBlocking
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    HELC M -1

  XDeath:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HELC N 5
    HELC O 5 A_XScream
    HELC P 5
    HELC Q 5 A_NoBlocking
    HELC RSTU 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    HELC V -1
 
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    HELC H 5 A_GenericFreezeDeath
    HELC H 1 A_FreezeDeathChunks
    wait

  Raise:
    HELC L 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HELC KJI 5
    goto See
 }
}


Actor FlyingBalrog // 21122 // Afrit
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Hell Nobles"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_fastchasechance;
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana3 24
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem DiamondSkin 2
  dropitem DiamondSkin 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor

  Health 1500
  Speed 8
  Radius 24
  Height 64
  Mass 1600
  Meleedamage 10
  SeeSound "flyingbalrog/sight"
  PainSound "flyingbalrog/pain"
  DeathSound "flyingbalrog/death"
  ActiveSound "flyingbalrog/idle"
  MeleeSound "Baron/Melee"
  ReactionTime 5
  Monster
  +NoGravity
  +NoBlood
  +Float
  Species "HellNoble"
  +DontHurtSpecies
  Obituary "%o was flash-fried by a Flying Balrog."
  HitObituary "%o found the Flying Balrog too hot to handle."

  Damagefactor "Crush", 4.0
  Damagefactor "Fire", 0.125
  Damagefactor "Ice", 1.875
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Damagefactor "Stomp", 0.0 // Immune to Stomps from Cyberdemon types

  PainChance 30
  Painchance "Fist", 45 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 75 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 45 // Fist attacks have a +50% chance of stunning an enemy
  PainChance "Ice", 200
  PainChance "Fire", 2
  Painchance "Holy", 90 // Demons = +300% Pain Chance
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    FRIT A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    FRIT AABB 4 Bright A_Look
    Goto Spawn+1
  Idle:
    FRIT A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    FRIT ABCD 4 Bright A_Look
    Loop
  See:
    FRIT A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    FRIT AABBCCDD 2 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); A_SetUserVar("user_fastchasechance",4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); A_SetUserVar("user_fastchasechance",8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); A_SetUserVar("user_fastchasechance",12); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); A_SetUserVar("user_fastchasechance",16); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }

	 if (random(1,user_fastchasechance) == 1)
	 {
      A_Chase("Melee","Missile", CHF_FASTCHASE | CHF_NIGHTMAREFAST);
	 }
	 else
	 {
	  A_Chase;
	 }
	}
    Loop

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    FRIT EF 6 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 225) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
// Five Shot1s (spreading pattern)
    FRIT G 4 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;

     A_SetUserVar("user_canusecrisisatk",0);
     if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
 	  A_CustomMissile("FlyingBalrogShot1Crisis", 44, 12, 15); // Off Left
 	  A_CustomMissile("FlyingBalrogShot1Crisis", 44, 8, 10); // Partially Left
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 135) { A_CustomMissile("FlyingBalrogShot1Crisis", 44, 4, 5); }
      A_CustomMissile("FlyingBalrogShot1Crisis", 44, 0, 0); // Center
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 135) { A_CustomMissile("FlyingBalrogShot1Crisis", 44, -4, -5); }
 	  A_CustomMissile("FlyingBalrogShot1Crisis", 44, -8, -10); // Partially Right
      A_CustomMissile("FlyingBalrogShot1Crisis", 44, -12, -15); // Off Right
	 }
	 else
	 {
 	  A_CustomMissile("FlyingBalrogShot1", 44, 12, 15); // Off Left
 	  A_CustomMissile("FlyingBalrogShot1", 44, 8, 10); // Partially Left
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 135) { A_CustomMissile("FlyingBalrogShot1Crisis", 44, 4, 5); }
      A_CustomMissile("FlyingBalrogShot1", 44, 0, 0); // Center
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 135) { A_CustomMissile("FlyingBalrogShot1Crisis", 44, -4, -5); }
 	  A_CustomMissile("FlyingBalrogShot1", 44, -8, -10); // Partially Right
      A_CustomMissile("FlyingBalrogShot1", 44, -12, -15); // Off Right
	 }
	}
// Three Shot2s (straight shots)
    FRIT G 4 Bright 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }
	 A_FaceTarget;

     A_SetUserVar("user_canusecrisisatk",0);
     if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 135) { A_CustomMissile("FlyingBalrogShot2Crisis", 44, 12, 18); }
      A_CustomMissile("FlyingBalrogShot2Crisis", 44, 6, 9);
      A_CustomMissile("FlyingBalrogShot2Crisis", 44, 0, 0);
	  A_CustomMissile("FlyingBalrogShot2Crisis", 44, -6, -9);
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 135) { A_CustomMissile("FlyingBalrogShot2Crisis", 44, -12, -18); }
	 }
	 else
	 {
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 135) { A_CustomMissile("FlyingBalrogShot2", 44, 12, 18); }
      A_CustomMissile("FlyingBalrogShot2", 44, 6, 9);
      A_CustomMissile("FlyingBalrogShot2", 44, 0, 0);
	  A_CustomMissile("FlyingBalrogShot2", 44, -6, -9);
	  if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 135) { A_CustomMissile("FlyingBalrogShot2", 44, -12, -18); }
	 }
	}
    FRIT G 6 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 225) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    Goto See

  Pain:
    FRIT H 4 Bright
    FRIT H 4 Bright A_Pain
    Goto See
  Pain.Fist:
    FRIT H 4 Bright
    FRIT H 4 Bright A_Pain
    FRIT HH 4 Bright
    Goto See
  Pain.Kick:
    FRIT H 4 Bright
    FRIT H 4 Bright A_Pain
    FRIT HHHH 4 Bright
    Goto See
  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    FRIT I 0 Bright A_NoGravity
    FRIT I 6 Bright A_Scream
    FRIT I 0 Bright A_PlaySound("flyingbalrog/death2",3)
    FRIT J 5 Bright A_NoBlocking
    FRIT KLMNOPQR 4 Bright
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    Stop
  Ice:
   TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
   TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
   FRIT H 5 A_GenericFreezeDeath
   FRIT H 1 A_FreezeDeathChunks
   wait
  }
}

Actor WeakenedFlyingBalrog : FlyingBalrog 26557
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Hell Nobles"
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana3 24
  dropitem Berserk 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor 64

  Health 375 // 75% weaker
  PainChance 120 // 4x more likely to flinch
  Mass 100 // 75% lighter
  Meleedamage 3 // 75% weaker
  Alpha 0.75

  States
  {
  See:
    FRIT A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    FRIT AABBCCDD 2 Bright A_Chase
    Loop

  Melee:
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    FRIT E 6 Bright A_FaceTarget
    FRIT F 6 Bright A_FaceTarget
// Five Shot1s (spreading pattern)
    FRIT G 0 Bright A_FaceTarget
    FRIT G 0 Bright A_CustomMissile("WeakenedBalrogShot1", 44, 12, 15) // Off Left
    FRIT G 0 Bright A_CustomMissile("WeakenedBalrogShot1", 44, 0, 0) // Center
    FRIT G 1 Bright A_CustomMissile("WeakenedBalrogShot1", 44, -12, -15) // Off Right
    FRIT G 0 Bright A_FaceTarget
    FRIT G 0 Bright A_CustomMissile("WeakenedBalrogShot1", 44, 8, 10) // Partially Left
    FRIT G 3 Bright A_CustomMissile("WeakenedBalrogShot1", 44, -8, -10) // Partially Right
// Three Shot2s (straight shots)
    FRIT G 0 Bright A_FaceTarget
    FRIT G 0 Bright A_CustomMissile("WeakenedBalrogShot2", 44, 6, 9)
    FRIT G 0 Bright A_CustomMissile("WeakenedBalrogShot2", 44, 0, 0)
    FRIT G 4 Bright A_CustomMissile("WeakenedBalrogShot2", 44, -6, -9)
    FRIT G 6 Bright A_FaceTarget
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    FRIT I 0 Bright A_NoGravity
    FRIT I 6 Bright A_Scream
    FRIT I 0 Bright A_PlaySound("flyingbalrog/death2",3)
    FRIT J 5 Bright A_NoBlocking
    FRIT KLMNOPQR 4 Bright
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    FRIT H 5 A_GenericFreezeDeath
    FRIT H 1 A_FreezeDeathChunks
    wait
 }
}

// CyBruiser [Brusier/Archon tier Hell Noble]

Actor Cybruiser : BaronOfHell 30128
{ 
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Hell Nobles"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana1 36
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana2 30
  dropitem DoomSpellMana3 24
  dropitem DoomSpellMana3 24
  dropitem RandomPowerupSpawner 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Berserk 2
  dropitem Berserk 2
  dropitem DiamondSkin 2
  dropitem DiamondSkin 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem SauronGauntlets 1
  dropitem SauronHelmet 1
  dropitem FloraRandomArmor

  DamageFactor "Crush", 4.0
  DamageFactor "Fire", 0.75
  DamageFactor "Thunder", 1.75
  DamageFactor "Holy", 2 // Demons = +200% Holy Damage
  Painchance "Holy", 255 // Demons = +300% Pain Chance
  RadiusDamageFactor 0.5
  DamageFactor "Explosive", 0.5

  PainChance 20 
  Painchance "Fist", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 50 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Fire", 96
  Painchance "Thunder", 224
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  Health 2000 
  Radius 24 
  Height 64 
  Mass 1250 
  Speed 8 
  Monster
  MeleeDamage 10
  Obituary "%o was blown away by a Cybruiser."
  HitObituary "%o was smashed by a Cybruiser."
  +FLOORCLIP
  +MISSILEMORE
  +DONTHURTSPECIES
  +AVOIDMELEE
  SeeSound "monster/cbrusit" 
  PainSound "monster/cbrupn" 
  DeathSound "monster/cbrudth"
  MeleeSound "baron/melee"
  Species "HellNoble"
  States 
  { 
  ApplyDesperate:
    TNT1 A 0 
    {
     A_GiveInventory("15PercentDMGReduction",1);
     A_GiveInventory("30PercentDMGBonus",1);
	 if (user_isstealth <= 0) { A_GiveInventory("EnemyShadow",1); }
	}
    goto See+3

  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn: 
    CBRS A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    CBRS AB 10 A_Look 
    goto Spawn+1
  See:
    CBRS A 0
	{
     ACS_NamedExecuteAlways("RefreshStealthInfo",0,0);
	 A_SetUserVar("user_shotsfired",0);
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120)
	 {
	  if (random(1,8) == 1) { A_SetUserVar("user_shotsfiredmax",6); } else { A_SetUserVar("user_shotsfiredmax",5); }
	 }
	 else
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60)
	 {
	  if (random(1,8) == 1) { A_SetUserVar("user_shotsfiredmax",5); } else { A_SetUserVar("user_shotsfiredmax",4); }
	 }
	 else
	 {
	  if (random(1,8) == 1) { A_SetUserVar("user_shotsfiredmax",4); } else { A_SetUserVar("user_shotsfiredmax",3); }
	 }
	}
    CBRS A 0 A_JumpIfHealthLower(user_HPBuffRange, "ApplyDesperate")
    CBRS A 0 A_Playsound("monster/cbruwlk")
    CBRS AABB 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    CBRS C 0 A_Playsound("monster/cbruwlk")
    CBRS CCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop 

  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
  AttackStart:
    CBRS E 0 A_JumpIfTargetInsideMeleeRange("Melee")
    CBRS E 6
	{
	 if (user_shotsfired > 0) 
	 { 
	  A_SetTics(12); 
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(6); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(7); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(8); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(9); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(10); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 30) { A_SetTics(11); }
	 }
	 else
	 {
	  A_SetTics(6); 
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(3); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(4); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(5); }
	 }
	 A_FaceTarget;
	}
	goto Attack
  Attack:
	TNT1 A 0
    { 
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
      A_CustomMissile("CyBruiserMissileCrisis",38,15,0,0);
	 }
	 else
	 {
	  A_CustomMissile("CyBruiserMissile",38,15,0,0);
	 }
	}
    goto AttackEnd
  AttackEnd:
    CBRS F 12
	{
	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(7); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(9); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 30) { A_SetTics(11); }
	}
    TNT1 A 0 A_SetUserVar("user_shotsfired",user_shotsfired+1)
    TNT1 A 0 A_JumpIf(user_shotsfired >= user_shotsfiredmax, "See")
    goto AttackStart

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    CBRS GH 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    CBRS I 8 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMeleeAttack((10*ACS_NamedExecuteWithResult("CrisisMultiplier")),"baron/melee","none","Melee",1); // A_MeleeAttack;
	 }
	 else
	 {
	  A_CustomMeleeAttack(10,"baron/melee","none","Melee",1); // A_MeleeAttack;
	 }
	}
    Goto See

  Pain: 
    CBRS J 2 
    CBRS J 2 A_Pain 
    Goto See 
  Pain.Fist: 
    CBRS J 2 
    CBRS J 2 A_Pain 
    CBRS JJ 2 
    Goto See 
  Pain.Kick: 
    CBRS J 2 
    CBRS J 2 A_Pain 
    CBRS JJJJ 2 
    Goto See 
  Pain.Electric: 
  Pain.Lightning: 
  Pain.Thunder: 
    CBRS J 2 
    CBRS J 2 
    CBRS J 2 A_Pain 
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    CBRS J 2 
    CBRS J 2 
    CBRS J 2 
    TNT1 A 0 A_PlaySound("elecstun")
    TNT1 A 0 A_SpawnItemEx ("ElectricDischarge", random(-15, -15), random(-15, -15), random(-15, -15), 0, 0, 0, 0, SXF_NOCHECKPOSITION) 
    CBRS J 2 
    CBRS J 2 
    CBRS J 2 
    Goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    CBRS K 6 Bright A_Scream
    CBRS LMN 6 Bright
    CBRS O 6 Bright A_NoBlocking
    CBRS QR 6 Bright
    CBRS S 6
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    CBRS T -1
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    CBRS J 5 A_GenericFreezeDeath
    CBRS J 1 A_FreezeDeathChunks
    wait
  Raise:
    CBRS S 6 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    CBRS RQONMLK 6
    Goto See

 } 
}

// Suicide Bomber

actor SuicideBomber 26528
{
  //$Angled
  //$Color 12
  //$Category "DV-DS Monsters/Others"
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  dropitem DoomSpellMana 32
  dropitem DoomSpellMana 8
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  obituary "%o was killed by a crazy suicide bomber."
  health 80
  radius 20
  height 56
  mass 100
  speed 16
  PainChance 20 
  Painchance "Fist", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 50 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 30 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255 

  DamageFactor "Crush", 8.0
  seesound "suicide/sit"
  attacksound "shotguy/death"
  painsound "shotguy/pain"
  deathsound "shotguy/death"
  MONSTER
  +FLOORCLIP
  +NOTARGETSWITCH
  +JUMPDOWN
  +NOTARGET
  +NEVERTARGET
  +NOINFIGHTING
  +NOFEAR
  states
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    BMBE A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BMBE AB 10 A_Look
    goto Spawn+1
  See:
    BMBE A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    BMBE AAABBBCCCDDD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(1); }
	 A_Chase;
	}
    BMBE A 0 A_PlaySound("suicide/scream")
    loop
  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    BMBE A 0 A_Die
    stop

  Pain:
    BMBE A 3
    BMBE A 3 A_Pain
    goto See
  Pain.Fist:
    BMBE A 3
    BMBE A 3 A_Pain
    BMBE AA 3
    goto See
  Pain.Kick:
    BMBE A 3
    BMBE A 3 A_Pain
    BMBE AAAA 3
    goto See

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    BMBE M 0 bright A_Explode ((128+random(-64,64)), (128+random(-64,64)))
    BMBE M 5 bright A_PlaySound ("weapons/rocklx")
    BMBE N 5 bright A_XScream
    BMBE O 5 A_NoBlocking
    BMBE PQRST 5
    TNT1 A 0 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    BMBE U -1
    stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    BMBE D 5 A_GenericFreezeDeath
    BMBE D 1 A_FreezeDeathChunks
    wait
  Raise:
    BMBE T 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    BMBE SRQPONM 5
    Goto See
  }
}

// Hierophant
Actor Hierophant 30135
{
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.
  var int user_shotsfired; var int user_shotsfiredmax;
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem Backpack 2
  dropitem RandomPowerupSpawner 2
  dropitem RandomPowerupSpawner 2
  dropitem RandomPowerupSpawner 2
  dropitem DoomSpellMana 32
  dropitem DoomSpellMana 8
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem HealthBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem ArmorBonus 2
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem MaxHealthBonus 1
  dropitem FloraRandomArmor

  Health 2700
  Radius 24
  Height 60
  Mass 2500
  Speed 15
  PainChance 24
  Painchance "Fist", 36 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 60 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 36 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Fire", 3
  Painchance "Ice", 192
  Painchance "GravityHP", 128
  Painchance "GravityMP", 128
  Painchance "GravityHPMP", 128
  RadiusDamageFactor 0.25
  DamageFactor "Fire", 0.25
  DamageFactor "Ice", 2.5
  DamageFactor "Holy", 1.75
  DamageFactor "Crush", 3.2
  MeleeDamage 15
  Obituary "%o was hexed by a Hierophant."
  HitObituary "%o got shredded by a Hierophant."
  Monster
  +NoTarget
  +FloorClip
  +MissileMore
  +Float
  +NoGravity
  Species "HellNoble"
  +DontHurtSpecies
  SeeSound "monster/Hiesit"
  PainSound "monster/Hiepai"
  DeathSound "monster/Hiedth"
  MeleeSound "baron/melee"
  ActiveSound "monster/Hieact"
  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn: 
    HIER A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HIER AC 5 A_Look 
    goto Spawn+1 
  See:
    HIER A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    HIER AABBAACCDDCC 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
  	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("AVOIDMELEE",1); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
    }
    HIER A 0 A_Jump(64, "Blur") 
    Loop
  Blur:
    HIER A 1 A_Playsound("monster/blur")
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    HIER A 0 A_SpawnItemEx("HieroFX",0,0,0,0,0,0,0,128,0)
    HIER A 1 A_Chase
    Goto See 
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    HIER A 0 A_FaceTarget
    HIER A 0 A_Jump(256, "Missile1", "Missile2", "Missile3")
  Missile1:
    HIER EF 7 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	}
    HIER G 7 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("HieroBall1Crisis",26,0,random(-6,-1),0);
      A_CustomMissile("HieroBall1Crisis",26,0,random(1,6),0);
	 }
	 else
	 {
	  A_CustomMissile("HieroBall1",26,0,random(-6,-1),0);
      A_CustomMissile("HieroBall1",26,0,random(1,6),0);
	 }
	}
    HIER A 3 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	}
    HIER HI 7 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	}
    HIER J 7 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("HieroBall1Crisis",26,0,random(-6,-1),0);
      A_CustomMissile("HieroBall1Crisis",26,0,random(1,6),0);
	 }
	 else
	 {
	  A_CustomMissile("HieroBall1",26,0,random(-6,-1),0);
      A_CustomMissile("HieroBall1",26,0,random(1,6),0);
	 }
	}
    HIER A 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	 A_SpidRefire;
	}
    HIER A 0 A_Jump(64, "Missile1")
    Goto See
  Missile2: // Curse Shot
    HIER HI 7 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;
	}
    HIER J 7 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	 A_FaceTarget;

	 A_CustomMissile("CurseBall",26,0,0,0);
	}
    HIER A 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	 A_SpidRefire;
	}
    HIER EF 7 Bright
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) 
	 {
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	  A_FaceTarget;
	 }
	 else
	 {
	  A_SetTics(0);
	 }
	}
    HIER G 7 Bright 
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) 
	 {
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(4); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(6); }
	  A_FaceTarget;

	  A_CustomMissile("CurseBall",26,0,0,0);
	 }
	 else
	 {
	  A_SetTics(0);
	 }
	}
    HIER A 3 
	{
	 if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) 
	 {
      if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
      else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	  A_SpidRefire;
	 }
	 else
	 {
	  A_SetTics(0);
	 }	 
	}
    HIER A 0 A_Jump(128,"Missile1","Missile3")
    Goto See
  Missile3:
    HIER KLM 5 Bright
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 
	 A_SetUserVar("user_shotsfired",0);
	 A_SetUserVar("user_shotsfiredmax",2*random(8,10));
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetUserVar("user_shotsfiredmax",2*random(32,34)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 165) { A_SetUserVar("user_shotsfiredmax",2*random(30,32)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetUserVar("user_shotsfiredmax",2*random(28,30)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 135) { A_SetUserVar("user_shotsfiredmax",2*random(26,28)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetUserVar("user_shotsfiredmax",2*random(24,26)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 105) { A_SetUserVar("user_shotsfiredmax",2*random(22,24)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetUserVar("user_shotsfiredmax",2*random(20,22)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetUserVar("user_shotsfiredmax",2*random(18,20)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetUserVar("user_shotsfiredmax",2*random(16,18)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetUserVar("user_shotsfiredmax",2*random(14,16)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 30) { A_SetUserVar("user_shotsfiredmax",2*random(12,14)); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 15) { A_SetUserVar("user_shotsfiredmax",2*random(10,12)); }
	 A_FaceTarget;
	}
  Missile3Loop:
    HIER N 1 Bright
	{
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMissile("HieroBall2Crisis",32,0,0,0,0);
	 }
	 else
	 {
	  A_CustomMissile("HieroBall2",32,0,0,0,0);
	 }
	}
    HIER O 1 Bright A_FaceTarget
    HIER O 0 Bright 
	{
	 A_SetUserVar("user_shotsfired",user_shotsfired+1);
	 if (user_shotsfired >= user_shotsfiredmax) { return state("Missile3End"); }
	 return state("");
	}
	loop
  Missile3End:
    HIER L 5 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(4); }
	 A_FaceTarget;
	}
    Goto See

  Melee:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    HIER EF 8  
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(7); }
	 A_FaceTarget;
	}
    HIER G 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMeleeAttack((15*ACS_NamedExecuteWithResult("CrisisMultiplier")),"baron/melee","none","Melee",1); // A_MeleeAttack;
	 }
	 else
	 {
	  A_CustomMeleeAttack(15,"baron/melee","none","Melee",1); // A_MeleeAttack;
	 }
	}
    HIER A 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	}
    HIER A 0 A_Jump(128, 1)
    Goto See
    HIER HI 8  
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(7); }
	 A_FaceTarget;
	}
    HIER J 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack",6);
      A_PlaySound("crisisattack2",7);
	  A_CustomMeleeAttack((15*ACS_NamedExecuteWithResult("CrisisMultiplier")),"baron/melee","none","Melee",1); // A_MeleeAttack;
	 }
	 else
	 {
	  A_CustomMeleeAttack(15,"baron/melee","none","Melee",1); // A_MeleeAttack;
	 }
	}
    HIER A 3 
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(2); }
	}
    Goto See

  Pain: 
    HIER P 2 
    HIER P 2 A_Pain 
    Goto See 
  Pain.Fist: 
    HIER P 2 
    HIER P 2 A_Pain 
    HIER PP 2 
    Goto See 
  Pain.Kick: 
    HIER P 2 
    HIER P 2 A_Pain 
    HIER PPPP 2 
    Goto See 
  Pain.Ice:
    HIER P 2 
    HIER P 2 A_Pain 
    HIER P 2 
    HIER P 2 
    HIER P 2 
    HIER P 2 
    Goto See 
  Pain.Holy:
    HIER P 2 
    HIER P 2 A_Pain 
    HIER P 2 
    HIER P 2 
    Goto See 

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HIER Q 6  
    HIER R 6 A_Scream 
    HIER S 6 A_NoBlocking 
    HIER TUV 6
    HIER W 6 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    HIER X -1 A_SetFloorClip 
    Stop
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    HIER P 5 A_GenericFreezeDeath
    HIER P 1 A_FreezeDeathChunks
    wait
  Raise:
    HIER W 6 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
	HIER VUTSRQ 6
	goto See
  } 
}

ACTOR DSHelperDog : MBFHelperDog replaces MBFHelperDog
{
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.

  Health 375
  Speed 15

  PainChance 120
  Painchance "Fist", 180 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 255 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 180 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "GravityHP", 255
  Painchance "GravityMP", 255
  Painchance "GravityHPMP", 255

  DamageFactor "Crush", 10.0
  Radius 12
  Height 28
  Mass 100
  Monster
  +JUMPDOWN
  ActiveSound "dog/active"
  AttackSound "dog/attack"
  DeathSound "dog/death"
  PainSound "dog/pain"
  SeeSound "dog/sight"
  Obituary "$OB_DOG" // "%o was mauled by a dog."
  States
  {
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn:
    DOGS A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DOGS AB 10 A_Look
    goto Spawn+1
  See:
    DOGS A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    DOGS AABBCCDD 2
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(1); }
	 A_Chase;
	}
    Loop
  Melee:
    DOGS A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1)
    DOGS EF 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(7); }
	 A_FaceTarget;
	}
    DOGS G 8
 	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 160) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 80) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 40) { A_SetTics(7); }
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
      A_CustomMeleeAttack( ((random(1,10)*4) * ACS_NamedExecuteWithResult("CrisisMultiplier")) ,"none","none","Melee",true); // A_SargAttack
	 }
	 else
	 {
	  A_CustomMeleeAttack(random(1,10)*4,"none","none","Melee",true); // A_SargAttack
	 }
	}
    Goto See

  Pain:
    DOGS H 2
    DOGS H 2 A_Pain
    Goto See
  Pain.Fist: 
    DOGS H 2
    DOGS H 2 A_Pain
    DOGS HH 2 
    Goto See 
  Pain.Kick: 
    DOGS H 2
    DOGS H 2 A_Pain
    DOGS HHHH 2 
    Goto See 

  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+((HP/300)/10)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    DOGS I 8
    DOGS J 8 A_Scream
    DOGS K 4
    DOGS L 4 A_Fall
    DOGS M 4 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    DOGS N -1
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    DOGS H 5 A_GenericFreezeDeath
    DOGS H 1 A_FreezeDeathChunks
    wait
  Raise:
    DOGS N 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    DOGS MLKJI 5
    Goto See
  }
}

// Hell Warrior
ACTOR HellWarrior 3119
{ 
  var int user_theta; var int user_dormant; var int user_isstealth; var int user_basespeed; var int user_baseattack; var int user_basedefense; var int user_basemass; var int user_monsterlevel; var int user_legendaryevolved; var int user_extraevolvechance; var int user_extrastealthchance;
  var int user_MaxHP; var int user_HPLowRange; var int user_HPCritRange; var int user_HPBuffRange; var int user_HPXDeathRange;
  var int user_checkmapskill; var int user_ressurrectstr; var int user_resurrectedtimes; var int user_canusecrisisatk; // For checking if a monster has been given Skill/Map inventory items yet.

  //$Category "KDIZD Monsters"
  Health 400 
  Speed 8
  Radius 24
  Height 64
  PainChance 50
  Painchance "Fist", 75 // Fist attacks have a +50% chance of stunning an enemy
  Painchance "Kick", 125 // Kick attacks have a +150% chance of stunning an enemy
  Painchance "Gauntlets", 75 // Fist attacks have a +50% chance of stunning an enemy
  DamageFactor "Crush", 4.0
  Mass 1000
  Meleedamage 8 
  SeeSound "hellwarrior/sight"
  PainSound "hellwarrior/pain"
  DeathSound "hellwarrior/death"
  ActiveSound "knight/active"
  MeleeSound "baron/melee"
  DamageFactor "Normal", 0.67
  REACTIONTIME 8 
  MONSTER 
  +FLOORCLIP
  Missiletype HellWarriorBall
  Obituary "%o was tagged by the hell warrior's fireball." 
  HitObituary "%o was torn apart by a hell warrior." 
  States 
  { 
  Pain.Charm: TNT1 A 0 { A_PlaySound("Munchies/Charmed"); A_ChangeFlag("FRIENDLY",1); Thing_ChangeTID(0,1000); } Goto See  Pain.Heal1: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,0); } Goto See  Pain.Heal2: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,1); } Goto See  Pain.Heal3: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,2); } Goto See  Pain.Heal4: TNT1 A 0 { ACS_NamedExecuteAlways("Healing_Actor",0,3); } Goto See Goto See
  Spawn: 
    HWAR A 0 NoDelay ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HWAR AB 10 A_Look 
    Loop 
  See:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,0)
    HWAR A 0
	{
     A_ChangeFlag("NOBLOOD", 0); A_ChangeFlag("NOPAIN", 0); A_ChangeFlag("REFLECTIVE", 0);
	 A_TakeInventory("EWShieldDefendMode",9999); // A_UnSetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
    }
    HWAR AABBCCDD 3
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",1); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_ChangeFlag("MISSILEEVENMORE",1); A_ChangeFlag("MISSILEMORE",0); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_ChangeFlag("MISSILEMORE",1); A_ChangeFlag("MISSILEEVENMORE",0); }
	 else { A_ChangeFlag("MISSILEMORE",0); A_ChangeFlag("MISSILEEVENMORE",0); }
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(2); }
	 A_Chase;
	}
    Loop 
  Missile:
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    HWAR E 0 A_Jump(128, "Missile2")
    HWAR EF 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    HWAR G 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomComboAttack ("HellWarriorBallCrisis", 32, (8*ACS_NamedExecuteWithResult("CrisisMultiplier")), "baron/melee", "Melee", true);
	 }
	 else
	 {
	  A_CustomComboAttack ("HellWarriorBall", 32, 8, "baron/melee", "Melee", true);
	 }
	}
    Goto See
  Missile2:
    HWAR H 0 A_Jump(128, "Missile2b")
    HWAR H 6
	{
     A_ChangeFlag("NOPAIN", 1); A_ChangeFlag("NOBLOOD", 1); A_ChangeFlag("REFLECTIVE", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 225) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    HWAR I 4 BRIGHT
	{
     A_ChangeFlag("NOPAIN", 1); A_ChangeFlag("NOBLOOD", 1); A_ChangeFlag("REFLECTIVE", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMissile("HellWarriorBall2Crisis", 25, 0, 0);
	 }
	 else
	 {
	  A_CustomMissile("HellWarriorBall2", 25, 0, 0);
	 }
	}
    HWAR H 6
	{
     A_ChangeFlag("NOPAIN", 1); A_ChangeFlag("NOBLOOD", 1); A_ChangeFlag("REFLECTIVE", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 225) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    HWAR A 0
	{
     A_ChangeFlag("NOBLOOD", 0); A_ChangeFlag("NOPAIN", 0); A_ChangeFlag("REFLECTIVE", 0);
	 A_TakeInventory("EWShieldDefendMode",9999); // A_UnSetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);

	 A_FaceTarget;
	}
    Goto See
  Missile2b:
    HWAR H 6
	{
     A_ChangeFlag("NOPAIN", 1); A_ChangeFlag("NOBLOOD", 1); A_ChangeFlag("REFLECTIVE", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 225) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    HWAR I 4 BRIGHT
	{
     A_ChangeFlag("NOPAIN", 1); A_ChangeFlag("NOBLOOD", 1); A_ChangeFlag("REFLECTIVE", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMissile("HellWarriorBall2Crisis", 25, 0, 0);
	 }
	 else
	 {
	  A_CustomMissile("HellWarriorBall2", 25, 0, 0);
	 }
	}
    HWAR H 16
	{
     A_ChangeFlag("NOPAIN", 1); A_ChangeFlag("NOBLOOD", 1); A_ChangeFlag("REFLECTIVE", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(8); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 157) { A_SetTics(9); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 135) { A_SetTics(10); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 112) { A_SetTics(11); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(12); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 67) { A_SetTics(13); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 45) { A_SetTics(14); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 22) { A_SetTics(15); }
	 A_SpidRefire;
	}
    HWAR I 4 BRIGHT
	{
     A_ChangeFlag("NOPAIN", 1); A_ChangeFlag("NOBLOOD", 1); A_ChangeFlag("REFLECTIVE", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(2); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 90) { A_SetTics(3); }

	 A_SetUserVar("user_canusecrisisatk",0);
	 if(health <= user_HPLowRange) { if(health <= user_HPCritRange) { A_SetUserVar("user_canusecrisisatk",1); } else { if (random(1,4) == 4) { A_SetUserVar("user_canusecrisisatk",1);	} } }
     if(GetCVar("dvds_monstercrisisattacks") == 0) { A_SetUserVar("user_canusecrisisatk",0); }
	 if(user_canusecrisisatk == 1)
	 {
      A_PlaySound("crisisattack2",7);
      A_PlaySound("crisisattack",6);
	  A_CustomMissile("HellWarriorBall2Crisis", 25, 0, 0);
	 }
	 else
	 {
	  A_CustomMissile("HellWarriorBall2", 25, 0, 0);
	 }
	}
    HWAR H 6
	{
     A_ChangeFlag("NOPAIN", 1); A_ChangeFlag("NOBLOOD", 1); A_ChangeFlag("REFLECTIVE", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 

     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 225) { A_SetTics(3); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 150) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 75) { A_SetTics(5); }
	 A_FaceTarget;
	}
    HWAR A 0
	{
     A_ChangeFlag("NOBLOOD", 0); A_ChangeFlag("NOPAIN", 0); A_ChangeFlag("REFLECTIVE", 0);
	 A_TakeInventory("EWShieldDefendMode",9999); // A_UnSetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);

	 A_FaceTarget;
	 if (random(1,6) == 1) { return state("Missile2b"); }
	 return state(""); 
	}
    Goto See  
  Melee: 
    TNT1 A 0 ACS_NamedExecuteAlways("RefreshStealthInfo",0,1) // makes a Stealth Monster become more visible
    HWAR EF 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	}
    HWAR G 8
	{
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 240) { A_SetTics(4); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) { A_SetTics(5); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) { A_SetTics(6); }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) { A_SetTics(7); }
	 A_FaceTarget;
	 A_ComboAttack;
	}
    Goto See 
  Pain:
    HWAR J 6 A_Pain 
    HWAR J 0 { if (random(1,256) > 248) { return state("See"); } return state(""); }	
    Goto PainShield 
  Pain.Fist:
    HWAR J 6 A_Pain 
    HWAR JJ 6 
    HWAR J 0 { if (random(1,256) > 236) { return state("See"); } return state(""); }	
    Goto PainShield 
  Pain.Kick:
    HWAR J 6 A_Pain 
    HWAR JJJJ 6 
    HWAR J 0 { if (random(1,256) > 224) { return state("See"); } return state(""); }	
    Goto PainShield 
  PainShield:
    HWAR H 0 A_Jump(16,"Missile2")
    HWAR H 0
	{
     A_ChangeFlag("NOPAIN", 1); A_ChangeFlag("NOBLOOD", 1); A_ChangeFlag("REFLECTIVE", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	}
    HWAR HHHHHHH 6
	{
     A_ChangeFlag("NOPAIN", 1); A_ChangeFlag("NOBLOOD", 1); A_ChangeFlag("REFLECTIVE", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_GiveInventory("EWShieldDefendMode",1); // A_SetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);

	 A_FaceTarget;
     if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 180) 
	 {
	  A_SetTics(9); 
	  if (random(1,256) > 192) { return state("Missile2"); } return state("");
	 }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 120) 
	 {
 	  A_SetTics(8); 
	  if (random(1,256) > 224) { return state("Missile2"); } return state("");
	 }
     else if (GetCVar("dvds_monsterlevelbehavior") > 0 && user_monsterlevel > 60) 
	 {
	  A_SetTics(7); 
	  if (random(1,256) > 240) { return state("Missile2"); } return state("");
	 }
	 else
	 {
	  if (random(1,256) > 248) { return state("Missile2"); } return state("");
	 }
	}
    HWAR H 0 
	{
     A_ChangeFlag("NOBLOOD", 0); A_ChangeFlag("NOPAIN", 0); A_ChangeFlag("REFLECTIVE", 0);
	 A_TakeInventory("EWShieldDefendMode",9999); // A_UnSetInvulnerable
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	}
    Goto See 


  Pain.GravityHP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,0,0,0)
    Goto See
  Pain.GravityMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,1,0,0)
    Goto See
  Pain.GravityHPMP:
    TNT1 A 0 ACS_NamedExecuteAlways("Hand-GravityAttack",0,2,0,0)
    Goto See
  Pain.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,10) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 
    Goto Pain
  Death.Sceptre:
    TNT1 A 0 A_CheckFlag("FRIENDLY",2,AAPTR_DEFAULT)
    TNT1 A 0 ACS_NamedExecuteAlways("AddSceptreEXP",0,0,0,1) // Increase EXP for Sceptre [1+(HP/300)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Pain.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,1,0) // Give some life when hurting a monster [1+(HP/500)]
    Goto Pain
  Death.Gauntlets:
    TNT1 A 0 ACS_NamedExecuteAlways("SauronGauntletsHit",0,0,2,0) // Give some life when killing a monster [3+(HP/100)]
    TNT1 A 0 A_JumpIfHealthLower(user_HPXDeathRange,"XDeath")
    Goto Death
  Death:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    HWAR K 5 A_CustomMissile("EvilWarriorShield", 25, 0, 60)
    HWAR L 5 A_Scream
    HWAR M 5
    HWAR N 5 A_NoBlocking 
    HWAR OPQR 5  
    HWAR S 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,1)
    HWAR T -1 
    Stop 
  Raise: 
    HWAR Q 5 ACS_NamedExecuteAlways("MonsterStatsHP_ATK_DEF_SPD",0,0)
    HWAR PONMLK 5 
    Goto See 
  Ice:
    TNT1 A 0 ACS_NamedExecuteAlways("AddEXP",0,-2,0,1)
    TNT1 A 0 A_ChangeFlag("CANTSEEK", TRUE)
    HWAR J 5 A_GenericFreezeDeath
    HWAR J 1 A_FreezeDeathChunks
    wait
   } 
}

actor DeadHellWarrior : DeadMarine 25220
{
  //$Category Decoration
  States 
  {
   Spawn:  
    HWAR T -1 
    Stop 
  } 
}