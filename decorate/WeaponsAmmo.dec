actor PlasmaBallPlayer : PlasmaBall
{
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",11))
}

actor PlasmaBall1Player : PlasmaBall1
{
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",12))
}

actor PlasmaBall2Player : PlasmaBall2
{
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",13))
}

actor BFGBallPlayer : BFGBall
{
  Game Doom
  SpawnID 128
  Radius 13
  Height 8
  Speed 25
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",14))
  Projectile
  +RANDOMIZE
  RenderStyle Add
  Alpha 0.75
  DeathSound "weapons/bfgx"
  Obituary "$OB_MPBFG_BOOM"
  States
  {
  Spawn:
    BFS1 AB 4 Bright
    Loop
  Death:
    BFE1 AB 8 Bright
    BFE1 C 8 Bright A_BFGSpray("BFGExtra",ACS_NamedExecuteWithResult("GetBFGTracers"),ACS_NamedExecuteWithResult("GetPlayerATKDMG",15),ACS_NamedExecuteWithResult("GetBFGTracerAngle"),ACS_NamedExecuteWithResult("GetBFGTracerRange"),ACS_NamedExecuteWithResult("GetBFGTracerVAngle"),0)
    BFE1 DEF 8 Bright
    Stop
  }
}


actor WindyProjectile
{
  height 4
  radius 2
  speed 20
  damage (0)
  +RIPPER
  +PAINLESS 
  PROJECTILE
  states
  {
   Spawn:
    TNT1 A 2 A_RadiusThrust (2500, 320, 0)
    TNT1 A 2 A_RadiusThrust (5000, 480, 0)
    TNT1 A 2 A_RadiusThrust (7500, 560, 0)
    TNT1 A 2 A_RadiusThrust (10000, 640, 0)
    TNT1 A 2 A_RadiusThrust (7500, 560, 0)
    TNT1 A 2 A_RadiusThrust (5000, 480, 0)
    Loop
  Death:
    TNT1 A 0 A_RadiusThrust (12500, 800, 0)
    Stop
  }
}

actor DBTPuff : BulletPuff replaces BulletPuff
{
 Game Doom
 +NOBLOCKMAP
 +NOGRAVITY
 +ALLOWPARTICLES
 +RANDOMIZE
 +NOINTERACTION
 RenderStyle Translucent
 Alpha 0.5
 VSpeed 1
 Mass 1
 DamageType "Bullet"
 States
 {
 Spawn:
  TNT1 A 0
  TNT1 A 0 A_Jump(128,2)
  TNT1 A 0 A_PlaySound("puff/ric")
  TNT1 A 0 A_SpawnItemEx("DBTYellowSpark",0,0,0,0,0,0,0,32)
  TNT1 AA 0 A_SpawnItemEx("DBTPuffSmoke",0,0,0,0,0,frandom(0.1,0.3),0,32)
  TNT1 AAAAAAAAAA 0 A_SpawnItemEx("DBTSparkExtra",0,0,0,frandom(0.1,0.5),0,0,random(1,360))
  TNT1 a 1
  Stop
 }
}

Actor DBTPuffSmoke 
{
 +NOINTERACTION
 +FORCEXYBILLBOARD
 Scale 0.03
 States
 {
  Spawn:
   TNT1 A 0 A_Jump(128,"T2")
  T1:
   X143 J 1 A_FadeOut(0.03)
   Wait
  T2:
   X143 K 1 A_FadeOut(0.03)
   Wait
 }
}

Actor DBTYellowSpark
{
 +NOINTERACTION
 Scale 0.16
 RenderStyle Add
 +FORCEXYBILLBOARD
 States
 {
  Spawn:
   TNT1 A 0
   // TNT1 A 0 A_PlayWeaponSound("hxn2/weapons/baldehitwall")
   TNT1 A 0 A_Jump(255,"Type1","Type2")
  Type1:
   FX26 A 2 Bright
   FX26 BCD 2 Bright
   FX26 EFGHI 2 Bright
   FX26 J 1 Bright A_FadeOut
   Wait
  Type2:
   FX26 P 2 Bright
   FX26 QRS 2 Bright
   FX26 TUVWX 2 Bright
   FX26 Y 1 Bright A_FadeOut
   Wait
 }
}

Actor DBTSparkExtra
{
 Height 1
 Radius 1
 Speed 3
 Scale 0.15
 +NOCLIP
 PROJECTILE
 -NOGRAVITY
 Gravity 0.09
 +DONTSPLASH
 +DONTBLAST
 +THRUactorS
 RenderStyle Add
 +FORCEXYBILLBOARD
 States
 {
  Spawn:
   TNT1 A 0 // ICPR D 0
   FX26 K 1 Bright ThrustThingZ(0,frandom(0.8,3.5),0,1)
   FX26 KKKLMNO 3 Bright A_FadeOut(0.05)
   Stop
 }
}

actor DiarisArrow : Ammo 27335
{
  //$NotAngled
  //$Color 6
  //$Category "DV-DS Ammunition/Flora"
  ConversationID 364 // 345+ are unused by Strife, this is for use in DIALOUxx/SCRIPTxx references
  Tag "Diaris Arrows [6]: Ammo for Flora's Diaris Longbow."
  Scale 0.276
  Inventory.PickupMessage "Picked up \cj6 Diaris Arrows\c-."
  Inventory.Amount 6
  inventory.maxamount 999999
  Ammo.BackpackAmount 6
  Ammo.BackpackMaxAmount 999999
  Inventory.Icon "ARSEA0"
  States
  {
   Spawn:
    TNT1 A 0 NoDelay ACS_NamedExecuteAlways("CheckFloraItems",0,0,0,0)
   Idle:
    ARSE A 2
    loop
  }
}

actor DiarisArrowQuiver : DiarisArrow 27336
{
  //$NotAngled
  //$Color 6
  //$Category "DV-DS Ammunition/Flora"
  ConversationID 365 // 345+ are unused by Strife, this is for use in DIALOUxx/SCRIPTxx references
  Tag "Diaris Arrows [30]: Ammo for Flora's Diaris Longbow."
  Scale 0.276
  Inventory.PickupMessage "Picked up a quiver of \cj30 Diaris Arrows\c-."
  Inventory.Amount 30
  inventory.maxamount 999999
  Ammo.BackpackAmount 30
  Ammo.BackpackMaxAmount 999999
  Inventory.Icon "ARQUA0"
  States
  {
   Spawn:
    TNT1 A 0 NoDelay ACS_NamedExecuteAlways("CheckFloraItems",0,0,0,0)
   Idle:
    ARQU A 2
    loop
  }
}

actor ManaPickupFlash : PickupFlash
{
  +NOGRAVITY
  States
  {
  Spawn:
    ACLO D 3
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    ACLO C 3
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    ACLO D 3
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    ACLO C 3
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    ACLO B 3
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    ACLO C 3
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    ACLO B 3
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    ACLO A 3
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    ACLO B 3
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    ACLO A 3
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    "####" # 0 A_SpawnItemEx("ManaGlitter", 0, 0, 16, random(-2,2), random(-2,2), random(-2,2) ,64)
    Stop
  }
}

// Small Mana Recharge
actor DoomSpellMana : CustomInventory 27337
{
  //$NotAngled
  //$Color 6
  //$Category "DV-DS Ammunition/Magic"
  Radius 8
  Height 8
  Scale 0.5
  inventory.pickupsound "PickupArtifact"
  inventory.pickupflash "ManaPickupFlash"
  Tag "Small Mana Cube [DV-DS]: Restores about ~50 MP/Mana"
  inventory.pickupmessage "Accquired a \cfSmall Mana Cube\c-"
  +FLOATBOB

  states
  {
  Spawn:
    MAN3 ABCDEFGHIJKLMNOP 4 Bright
    Loop
  Success:
    TNT1 A 0 ACS_NamedExecuteAlways("PickupManaCube",0,1,0)
    Stop
  Pickup:
    TNT1 A 0 { if (ACS_NamedExecuteWithResult("CheckManaLevels",0) > 0) { return state("Success"); } return state(""); }
    Fail
  }
}

actor DoomSpellMana2 : DoomSpellMana 27338
{
  //$NotAngled
  //$Color 6
  //$Category "DV-DS Ammunition/Magic"
  Scale 0.8
  Tag "Mana Cube [DV-DS]: Restores about ~125 MP/Mana"
  inventory.pickupmessage "Accquired a \cfMana Cube\c-"

  states
  {
  Spawn:
    MAN3 ABCDEFGHIJKLMNOP 4 Bright
    Loop
  Success:
    TNT1 A 0 ACS_NamedExecuteAlways("PickupManaCube",0,2,0)
    Stop
  Pickup:
    TNT1 A 0 { if (ACS_NamedExecuteWithResult("CheckManaLevels",0) > 0) { return state("Success"); } return state(""); }
    Fail
  }
}

actor DoomSpellMana3 : DoomSpellMana 27339
{
  //$NotAngled
  //$Color 6
  //$Category "DV-DS Ammunition/Magic"
  Scale 1.2
  Tag "Large Mana Cube [DV-DS]: Restores about ~350 MP/Mana"
  inventory.pickupmessage "Accquired a \cfLarge Mana Cube\c-"

  states
  {
  Spawn:
    MAN3 ABCDEFGHIJKLMNOP 4 Bright
    Loop
  Success:
    TNT1 A 0 ACS_NamedExecuteAlways("PickupManaCube",0,3,0)
    Stop
  Pickup:
    TNT1 A 0 { if (ACS_NamedExecuteWithResult("CheckManaLevels",0) > 0) { return state("Success"); } return state(""); }
    Fail
  }
}

actor FistPuff : BulletPuff
{
  var int user_randompain;
  +NOBLOCKMAP
  +NOGRAVITY
  +ALLOWPARTICLES
  +RANDOMIZE
  +FORCERADIUSDMG +PUFFGETSOWNER +PUFFONACTORS 
  RenderStyle Translucent
  Alpha 0.5
  VSpeed 1
  Mass 5
  damagetype "Fist"
  SeeSound "null" // "FistHit"
  AttackSound "null"

  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 A_SetUserVar("user_randompain",21);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-6); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-8); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-10); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",3),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",3),ACS_NamedExecuteWithResult("QuakeMeleeDuration",3),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",3),"nosound/silent");
   	 if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
    }
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    Stop
  Melee:
    TNT1 A 0
	{
	 A_SetUserVar("user_randompain",21);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-6); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-8); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-10); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",3),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",3),ACS_NamedExecuteWithResult("QuakeMeleeDuration",3),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",3),"nosound/silent");
   	 if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
    }
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    Stop
  Crash:
    PUFF C 0
	{
	 A_SetUserVar("user_randompain",21);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-6); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-8); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-10); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",3),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",3),ACS_NamedExecuteWithResult("QuakeMeleeDuration",3),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",3),"nosound/silent");
   	 if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserkwall",7); } else { A_PlaySound("FistHitWall",7); }
    }
    PUFF C 2
    PUFF C 2
    PUFF D 2
    PUFF D 2
    Stop
  }
}

actor UppercutPuff : FistPuff
{
  ProjectileKickback 0
  +NODAMAGETHRUST
  RenderStyle Translucent
  Alpha 0.875

  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 A_SetUserVar("user_randompain",8);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-7); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",1,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",4),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",4),ACS_NamedExecuteWithResult("QuakeMeleeDuration",4),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",4),"nosound/silent");
   	 if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
    }
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    Stop
  Melee:
    TNT1 A 0
	{
	 A_SetUserVar("user_randompain",8);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-7); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",1,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",4),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",4),ACS_NamedExecuteWithResult("QuakeMeleeDuration",4),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",4),"nosound/silent");
   	 if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
    }
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    Stop
  Crash:
    PUFF C 0
	{
	 A_SetUserVar("user_randompain",8);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-7); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",1,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",4),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",4),ACS_NamedExecuteWithResult("QuakeMeleeDuration",4),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",4),"nosound/silent");
   	 if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserkwall",7); } else { A_PlaySound("FistHitWall",7); }
    }
    PUFF C 2
    PUFF C 2
    PUFF D 2
    PUFF D 2
    Stop
  }
}

actor KickPuff : BulletPuff
{
  var int user_randompain;
  +NOBLOCKMAP
  +NOGRAVITY
  +ALLOWPARTICLES
  +RANDOMIZE
  +FORCERADIUSDMG +PUFFGETSOWNER +PUFFONACTORS 
  RenderStyle Translucent
  ProjectileKickback 1500
  Alpha 0.5
  VSpeed 1
  Mass 5
  damagetype "Kick"
  SeeSound "null" // "FistHit"
  AttackSound "null"

  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 A_SetUserVar("user_randompain",4);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-3); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetKickDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",7),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",7),ACS_NamedExecuteWithResult("QuakeMeleeDuration",7),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",7),"nosound/silent");
   	 if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
    }
  Spawn2:
    TNT1 A 2 A_RadiusThrust(1500,13,0,13)
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    Stop
  Melee:
    TNT1 A 0
	{
	 A_SetUserVar("user_randompain",4);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-3); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetKickDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",7),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",7),ACS_NamedExecuteWithResult("QuakeMeleeDuration",7),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",7),"nosound/silent");
   	 if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserk",7); } else { A_PlaySound("FistHit",7); }
    }
  Melee2:
    TNT1 A 2 A_RadiusThrust(1500,13,0,13)
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    Stop
  Crash:
    PUFF C 0
	{
	 A_SetUserVar("user_randompain",4);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-3); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetKickDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",7),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",7),ACS_NamedExecuteWithResult("QuakeMeleeDuration",7),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",7),"nosound/silent");
   	 if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserkwall",7); } else { A_PlaySound("FistHitWall",7); }
    }
  Crash2:
    PUFF C 2 A_RadiusThrust(1500,13,0,13)
    PUFF C 2
    PUFF D 2
    PUFF D 2
    Stop
  }
}

actor KickPuffNoThrust : KickPuff
{
  ProjectileKickback 0
  +NODAMAGETHRUST
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 A_SetUserVar("user_randompain",4);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-3); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetKickDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",7),0);
    }
  Spawn2:
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    Stop
  Melee:
    TNT1 A 0
	{
	 A_SetUserVar("user_randompain",4);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-3); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetKickDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",7),0);
    }
  Melee2:
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    TNT1 A 2
    Stop
  Crash:
    PUFF C 0
	{
	 A_SetUserVar("user_randompain",4);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 1) { A_SetUserVar("user_randompain",user_randompain-0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 2) { A_SetUserVar("user_randompain",user_randompain-1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 3) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_SetUserVar("user_randompain",user_randompain-2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 5) { A_SetUserVar("user_randompain",user_randompain-3); }
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }

	 A_Explode(ACS_NamedExecuteWithResult("GetKickDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",7),0);
    }
  Crash2:
    PUFF C 2
    PUFF C 2
    PUFF D 2
    PUFF D 2
    Stop
  }
}

actor FistDeggaris : MarineWeapon
{
  Game Doom
  Weapon.SelectionOrder 3700
  Weapon.Kickback 100
  +WEAPON.NOALERT
  +WEAPON.MELEEWEAPON
  +INVENTORY.UNDROPPABLE
  +INVENTORY.UNTOSSABLE
  Tag "Fist"
  Obituary "%o chewed on %k's fist."
  States
  {
  Ready:
    PUNG A 1
	{
	 A_WeaponReady(WRF_ALLOWUSER1);
	 if (random(1,100) <= 55) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
	}
    loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    PUNG A 1 A_Lower
    loop
  Select: 
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    PUNG A 1 A_Raise
    loop
  Fire:
    PUNG A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",0),2) == 1, "PunchSuccess")
    goto Ready
  PunchSuccess:
    TNT1 A 0 A_GiveInventory("UsingMeleeAttack",1)
    TNT1 A 0 A_Jump(128,"RightPunch")
	goto LeftPunch
  LeftPunch:
    PUNG B 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
	}
    PUNG C 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
	 if (random(1,256) <= 4) { A_AlertMonsters; }
	 A_PlaySound("fistswingheavy",1);
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    PUNG D 5
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(3); }
	}
    PUNG C 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
	}
    PUNG B 5
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(3); }
	 A_Refire;
	}
	PUNG B 0 A_TakeInventory("UsingMeleeAttack",9999)
    goto Ready

  RightPunch:
    PUNG F 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
	}
    PUNG G 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
	 if (random(1,256) <= 4) { A_AlertMonsters; }
	 A_PlaySound("fistswingheavy",1);
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    PUNG H 5
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(3); }
	}
    PUNG G 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
	}
    PUNG F 5
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(3); }
	 A_Refire;
	}
	PUNG F 0 A_TakeInventory("UsingMeleeAttack",9999)
    goto Ready
	
  AltFire:
    TNT1 A 0
	{
	 if (ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",4),2) == 0) { return state("Ready"); }
     return state(""); 
	}
    TNT1 A 0
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
	 A_GiveInventory("UsingMeleeAttack",1);
	}
	goto UppercutStart
  UppercutStart:
    MPU0 A 1
    MPU0 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU0 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
    MPU0 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU0 E 1
	{
	 if (random(1,256) > 64) 
	 { 
	  A_GiveInventory("UppercutATKBonus1",1,AAPTR_PLAYER1); 
	  A_GiveInventory("UppercutDEFBonus1",1,AAPTR_PLAYER1); 
      A_GiveInventory("UppercutCritBonus1",1,AAPTR_PLAYER1); 
	 } 
	 else 
	 {
	  A_GiveInventory("UppercutATKBonus2",1,AAPTR_PLAYER1); 
	  A_GiveInventory("UppercutDEFBonus2",1,AAPTR_PLAYER1); 
      A_GiveInventory("UppercutCritBonus2",1,AAPTR_PLAYER1); 
	 }
	}
    MPU1 A 1
	{
     if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }
     if (random(1,256) >= 253)
	 {
	  if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
	  else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
	 }
	 if (random(1,256) <= 75) { A_PlaySound("*grunt",CHAN_VOICE); }
     A_PlaySound("fistswingheavy",1); // D [Left] or B [Right] 
	}
    MPU1 B 1
    MPU1 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU1 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
    MPU1 E 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU1 F 1
	{      
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
  	  A_SetAngle(angle+15); 
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5); A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
 	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    MPU1 G 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU1 F 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
    MPU1 E 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU1 D 1
    MPU1 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU1 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
    MPU1 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU1 A 0 { return state("UppercutEnd"); }
  UppercutEnd:
    TNT1 A 0
	{
 	 A_TakeInventory("UppercutATKBonus1",9999,0,AAPTR_PLAYER1); 
 	 A_TakeInventory("UppercutATKBonus2",9999,0,AAPTR_PLAYER1); 
 	 A_TakeInventory("UppercutDEFBonus1",9999,0,AAPTR_PLAYER1); 
 	 A_TakeInventory("UppercutDEFBonus2",9999,0,AAPTR_PLAYER1); 
     A_TakeInventory("UppercutCritBonus1",9999,0,AAPTR_PLAYER1); 
     A_TakeInventory("UppercutCritBonus2",9999,0,AAPTR_PLAYER1); 
	 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1); 
	}
    MPU0 E 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU0 D 1
    MPU0 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
    MPU0 B 1
    MPU0 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    TNT1 A 0
	{
	 A_TakeInventory("MartArtsMaster1",9999);
	 A_TakeInventory("MartArtsMaster2",9999);
     A_ReFire;
	 return state("Ready");
	}
    goto Ready
  }
}

actor FistIllucia : MarineWeapon
{
  Game Doom
  Weapon.SelectionOrder 3700
  Weapon.Kickback 90
  +WEAPON.NOALERT
  +WEAPON.MELEEWEAPON
  +INVENTORY.UNDROPPABLE
  +INVENTORY.UNTOSSABLE
  Tag "Fist"
  Obituary "%o chewed on %k's fist."
  States
  {
  Ready:
    PUNI A 1
	{
	 A_WeaponReady(WRF_ALLOWUSER1);
	 if (random(1,100) <= 45) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
	}
    loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    PUNI A 1 A_Lower
    loop
  Select: 
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    PUNI A 1 A_Raise
    loop
  Fire:
    PUNI A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",0),2) == 1, "PunchSuccess")
    goto Ready
  PunchSuccess:
    TNT1 A 0 A_GiveInventory("UsingMeleeAttack",1)
    TNT1 A 0 A_Jump(128,"RightPunch")
	goto LeftPunch
  LeftPunch:
    PUNI B 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
	}
    PUNI C 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
	 if (random(1,256) <= 4) { A_AlertMonsters; }
	 A_PlaySound("fistswingmedium",1);
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    PUNI D 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
	}
    PUNI C 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
	}
    PUNI B 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
	 A_ReFire;
	}
	PUNI B 0 A_TakeInventory("UsingMeleeAttack",9999)
    goto Ready

  RightPunch:
    PUNI F 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
	}
    PUNI G 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
	 if (random(1,256) <= 4) { A_AlertMonsters; }
	 A_PlaySound("fistswingmedium",1);
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    PUNI H 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
	}
    PUNI G 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(1); }
	}
    PUNI F 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_SetTics(2); }
	 A_ReFire;
	}
	PUNI F 0 A_TakeInventory("UsingMeleeAttack",9999)
    goto Ready
	
	
  AltFire:
    TNT1 A 0
	{
	 if (ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",4),2) == 0) { return state("Ready"); }
     return state(""); 
	}
    TNT1 A 0
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
	 A_GiveInventory("UsingMeleeAttack",1);
	}
	goto UppercutStart
  UppercutStart:
    MPU2 A 1
    MPU2 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
    MPU2 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU2 E 1
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); }
	 if (random(1,256) > 64) 
	 { 
	  A_GiveInventory("UppercutATKBonus1",1,AAPTR_PLAYER1); 
	  A_GiveInventory("UppercutDEFBonus1",1,AAPTR_PLAYER1); 
      A_GiveInventory("UppercutCritBonus1",1,AAPTR_PLAYER1); 
	 } 
	 else 
	 {
	  A_GiveInventory("UppercutATKBonus2",1,AAPTR_PLAYER1); 
	  A_GiveInventory("UppercutDEFBonus2",1,AAPTR_PLAYER1); 
      A_GiveInventory("UppercutCritBonus2",1,AAPTR_PLAYER1); 
	 }
	}
    MPU3 A 1 // FLUP F 1
	{
     if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
     if (random(1,256) >= 253)
	 {
	  if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
	  else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
	 }
	 if (random(1,256) <= 75) { A_PlaySound("GauntletIlluciaSwing",CHAN_VOICE); }
     A_PlaySound("fistswingheavy",1); // D [Left] or B [Right] 
	}
    MPU3 B 1
    MPU3 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU3 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
    MPU3 E 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU3 F 1
	{ 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
     if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1) { A_SetTics(0); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
  	  A_SetAngle(angle+15); 
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
 	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
 	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
 	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
 	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
 	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
 	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
 	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
 	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
 	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    MPU3 G 1
    MPU3 F 1
    MPU3 E 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU3 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
    MPU3 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU3 B 1
    MPU3 A 1
    MPU3 A 0 { return state("UppercutEnd"); }
  UppercutEnd:
    TNT1 A 0
	{
 	 A_TakeInventory("UppercutATKBonus1",9999,0,AAPTR_PLAYER1); 
 	 A_TakeInventory("UppercutATKBonus2",9999,0,AAPTR_PLAYER1); 
 	 A_TakeInventory("UppercutDEFBonus1",9999,0,AAPTR_PLAYER1); 
 	 A_TakeInventory("UppercutDEFBonus2",9999,0,AAPTR_PLAYER1); 
     A_TakeInventory("UppercutCritBonus1",9999,0,AAPTR_PLAYER1); 
     A_TakeInventory("UppercutCritBonus2",9999,0,AAPTR_PLAYER1); 
	 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1); 
	}
    MPU2 E 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    MPU2 D 1
    MPU2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 5) { A_SetTics(0); } }
    MPU2 B 1
    MPU2 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 3) { A_SetTics(0); } }
    TNT1 A 0
	{
	 A_TakeInventory("MartArtsMaster1",9999);
	 A_TakeInventory("MartArtsMaster2",9999);
     A_ReFire;
	 return state("Ready");
	}
    goto Ready
  }
}

actor ShieldPartPunchAttackNoReflect
{
  Species "Players"
  Health 2147483646
  Painchance 255
  Radius 32 // out of 32
  Height 32 // out of 32
  Scale 1
  RenderStyle None // Add
  Alpha 0.03125 // 0.003125
  +NOTARGET +NEVERTARGET
  +BUDDHA
  +DONTBLAST
  +SHOOTABLE
  +NOGRAVITY
  +NOTELEPORT
  +NODAMAGE
  +DONTRIP
  +NOBLOOD
  +NOBLOODDECALS
  +FLOORCLIP
  +NOTELESTOMP
  +NOTIMEFREEZE
  +THRUSPECIES +MTHRUSPECIES
  -REFLECTIVE
  States
  {
  Spawn:
    HEXA C 0 bright NoDelay	
	{ 
	 if (random(1,16) == 1) { A_ChangeFlag("REFLECTIVE", TRUE); A_ChangeFlag("AIMREFLECT", TRUE); } 
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) > 0)
	 {
	  if (CallACS("MiscVarCheckDECORATE",10035) == 0) { A_SetSize(32,32,0); A_SetScale(1.0); }
	  if (CallACS("MiscVarCheckDECORATE",10035) == 1) { A_SetSize(33,33,0); A_SetScale(1.03125); }
	  if (CallACS("MiscVarCheckDECORATE",10035) == 2) { A_SetSize(34,34,0); A_SetScale(1.0625); }
	  if (CallACS("MiscVarCheckDECORATE",10035) == 3) { A_SetSize(36,36,0); A_SetScale(1.125); }
	  if (CallACS("MiscVarCheckDECORATE",10035) >= 4) { A_SetSize(38,38,0); A_SetScale(1.1875); }
	  if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_SetSize(41,41,0); A_SetScale(1.28125); }
	 }
	 else
	 {
	  if (CallACS("MiscVarCheckDECORATE",10051) == 0) { A_SetSize(32,32,0); A_SetScale(1.0); }
	  if (CallACS("MiscVarCheckDECORATE",10051) == 1) { A_SetSize(33,33,0); A_SetScale(1.03125); }
	  if (CallACS("MiscVarCheckDECORATE",10051) == 2) { A_SetSize(34,34,0); A_SetScale(1.0625); }
	  if (CallACS("MiscVarCheckDECORATE",10051) == 3) { A_SetSize(36,36,0); A_SetScale(1.125); }
	  if (CallACS("MiscVarCheckDECORATE",10051) >= 4) { A_SetSize(38,38,0); A_SetScale(1.1875); }
	  if (CallACS("MiscVarCheckDECORATE",10051) >= 5) { A_SetSize(41,41,0); A_SetScale(1.28125); }
	 }
	}
    HEXA C 1 bright
    stop
  Pain:
    TNT1 A 0 bright { if (CountInv("PowerStrength",AAPTR_PLAYER1) > 0) { A_PlaySound("fisthitberserkwall",7); } else { A_PlaySound("FistHitWall",7); } }
    stop
  }
}

actor ShieldPartPunchAttackReflect : ShieldPartPunchAttackNoReflect
{
  +REFLECTIVE +AIMREFLECT
}

actor FistFlora : FloraWeapon
{
  Game Doom
  Weapon.SelectionOrder 3700
  Weapon.Kickback 80
  +WEAPON.NOALERT
  +WEAPON.MELEEWEAPON
  +INVENTORY.UNDROPPABLE
  +INVENTORY.UNTOSSABLE
  Tag "Fist"
  Obituary "%o chewed on %k's fist."
  States
  {
  Ready:
    FLHN F 1
	{
	 A_WeaponReady(WRF_ALLOWUSER1); // A [Left] or F [Right]
	 if (random(1,100) <= 35) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
	}
    loop
  Deselect:
    FLHN F 0 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_Lower; }
	}
    FLHN F 0 A_Lower
    FLHN F 1 A_Lower
    loop
  Select: 
    FLHN F 0
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_Raise; }
	}
    FLHN F 0 A_Raise
    FLHN F 1 A_Raise
    loop
  Fire:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",0),2) == 0, "Ready")
    TNT1 A 0
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
	}
    TNT1 A 0
	{
	 if (random(1,256) >= 253)
	 {
	  if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
	  else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
	 }
	}
    TNT1 A 0
	{
	 if (GetCVar("dvds_florahokutolol") > 0 && ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4)
	 {
	  if (random(1,256) >= 1) { A_PlaySound("FloraHokutoLol",CHAN_VOICE); }
	 }
	 else
	 {
	  if (random(1,256) >= 224)
	  {
	   A_PlaySound("FloraKiaiFull",CHAN_VOICE);
	  }
	 }
	}
    TNT1 A 0 A_GiveInventory("UsingMeleeAttack",1)
    TNT1 A 0 A_Jump(128,"RightPunch")
	goto LeftPunch
  LeftPunch:
    // 13 Tics [10 (MAMlv2), 8 (MAMlv3), 5 (MAMlv4), 3 (MAMlv5)]
    FLHN G 3 // B [Left] or G [Right]
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
	 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_PlaySound("fistswingmedium0",1); } else { A_PlaySound("fistswinglight0",1); }
	}
    FLHN H 2 // C [Left] or H [Right]
	{ 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
	 }

     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10035) == 0 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 1 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 2 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 3 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) >= 4 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
    }
    FLHN I 3 // D [Left] or I [Right]
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
	}
    FLHN H 2 // C [Left] or H [Right]
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
	}
    FLHN G 3 // B [Left] or G [Right]
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
	 A_TakeInventory("MartArtsMaster1",9999);
	 A_TakeInventory("MartArtsMaster2",9999);
     A_ReFire;
	}
	FLHN G 0 A_TakeInventory("UsingMeleeAttack",9999)
    goto Ready
  RightPunch:
    // 13 Tics [10 (MAMlv2), 8 (MAMlv3), 5 (MAMlv4), 3 (MAMlv5)]
    FLHN B 3 // B [Left] or G [Right]
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_PlaySound("fistswingmedium0",1); } else { A_PlaySound("fistswinglight0",1); }
	}
    FLHN C 2 // C [Left] or H [Right]
	{ 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"FistPuff",ACS_NamedExecuteWithResult("GetMeleeRange",0));
	 }

     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10035) == 0 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 1 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 2 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 3 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) >= 4 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",16), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",48), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
    }
    FLHN D 3 // D [Left] or I [Right]
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
	}
    FLHN C 2 // C [Left] or H [Right]
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); }
	}
    FLHN B 3 // B [Left] or G [Right]
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
	 A_TakeInventory("MartArtsMaster1",9999);
	 A_TakeInventory("MartArtsMaster2",9999);
     A_ReFire;
	}
	FLHN B 0 A_TakeInventory("UsingMeleeAttack",9999)
    goto Ready

  AltFire:
    TNT1 A 0
	{
	 if (ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",4),2) == 0) { return state("Ready"); }
     return state(""); 
	}
    TNT1 A 0
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
	 A_GiveInventory("UsingMeleeAttack",1);
	}
	goto UppercutStart
  UppercutStart:
    // 23 Tics [11 (MAMlv3), 6 (MAMlv5)]
    FLUP A 1
    FLUP B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
    FLUP C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // -1
    FLUP D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
    FLUP E 1
	{
	 if (random(1,256) > 64) 
	 { 
	  A_GiveInventory("UppercutATKBonus1",1,AAPTR_PLAYER1); 
	  A_GiveInventory("UppercutDEFBonus1",1,AAPTR_PLAYER1); 
      A_GiveInventory("UppercutCritBonus1",1,AAPTR_PLAYER1); 
	 } 
	 else 
	 {
	  A_GiveInventory("UppercutATKBonus2",1,AAPTR_PLAYER1); 
	  A_GiveInventory("UppercutDEFBonus2",1,AAPTR_PLAYER1); 
      A_GiveInventory("UppercutCritBonus2",1,AAPTR_PLAYER1); 
	 }
	}
    FLU2 A 1 // FLUP F 1
	{
     if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
     if (random(1,256) >= 253)
	 {
	  if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
	  else { A_AlertMonsters; } // Sometimes a swing will be enough to wake up all monsters in the area.
	 }

	 if (GetCVar("dvds_florahokutolol") > 0 && ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4)
	 {
	  if (random(1,256) >= 1) { A_PlaySound("FloraHokutoLol",CHAN_VOICE); }
	 }
	 else
	 {
	  if (random(1,256) <= 75) { A_PlaySound("FloraKiaiFull",CHAN_VOICE); }
	 }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_PlaySound("fistswingheavy0",1); } else { A_PlaySound("fistswingmedium0",1); }
	}
    FLU2 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // -1
    FLU2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
    FLU2 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // -1
    FLU2 E 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // FLUP IJKL 1
    FLU2 F 1 // FLUP IJKL 1
	{ 
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      
  	  A_SetAngle(angle+15); // Angle + 15, Pitch + 0
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle-7.5); A_SetPitch(pitch+7.5); // Angle + 7.5, Pitch + 7.5
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetPitch(pitch-15); // Angle + 7.5, Pitch - 7.5
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetPitch(pitch+7.5); A_SetAngle(angle-7.5); // Angle + 0, Pitch + 0
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle-7.5); A_SetPitch(pitch-7.5); // Angle - 7.5, Pitch - 7.5
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetPitch(pitch+15); // Angle - 7.5, Pitch + 7.5
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetPitch(pitch-7.5); A_SetAngle(angle-7.5); // Angle - 15, Pitch + 0
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle-15);
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle-15);
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
      A_SetAngle(angle+15);
	 }
	 else
	 {
  	  A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"UppercutPuff",ACS_NamedExecuteWithResult("GetMeleeRange",1));
 	 }

     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10035) == 0 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 1 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 2 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 3 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) >= 4 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",10), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",28), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",42), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",52), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    FLU2 G 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } } // FLUP IJKL 1
    FLU2 F 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // -1
    FLU2 E 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
    FLU2 D 1
    FLU2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
    FLU2 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_SetTics(0); } } // -1
    FLU2 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
    FLU2 A 0 { return state("UppercutEnd"); }
  UppercutEnd:
    TNT1 A 0
	{
 	 A_TakeInventory("UppercutATKBonus1",9999,0,AAPTR_PLAYER1); 
 	 A_TakeInventory("UppercutATKBonus2",9999,0,AAPTR_PLAYER1); 
 	 A_TakeInventory("UppercutDEFBonus1",9999,0,AAPTR_PLAYER1); 
 	 A_TakeInventory("UppercutDEFBonus2",9999,0,AAPTR_PLAYER1); 
     A_TakeInventory("UppercutCritBonus1",9999,0,AAPTR_PLAYER1); 
     A_TakeInventory("UppercutCritBonus2",9999,0,AAPTR_PLAYER1); 
	}
    FLUP E 1
    FLUP D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
    FLUP C 1
    FLUP B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); } }
    FLUP A 1
    TNT1 A 0
	{
	 A_TakeInventory("MartArtsMaster1",9999);
	 A_TakeInventory("MartArtsMaster2",9999);
     A_ReFire;
	 return state("Ready");
	}
    goto Ready
  }
}

actor GauntletPuff : BulletPuff
{
 VSpeed 0
 Scale 0.5
 Alpha 0.5
 RenderStyle Translucent
 decal "GauntletScorch"
 damagetype "Gauntlets"
 SeeSound "GauntletHit"
 AttackSound "GauntletHitWall"
 +FORCERADIUSDMG +PUFFGETSOWNER +PUFFONACTORS 

 States
 {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 if (random(1,25) >= 9) { A_ChangeFlag("FORCEPAIN", TRUE); }
     A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",5),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",5),ACS_NamedExecuteWithResult("QuakeMeleeDuration",5),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",5),"nosound/silent");
    }
    PUF4 A 2 BRIGHT
    PUF4 A 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 F 2 BRIGHT
    PUF4 F 2 BRIGHT
    Stop
  Melee:
    TNT1 A 0
	{
	 if (random(1,25) >= 9) { A_ChangeFlag("FORCEPAIN", TRUE); }
     A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",5),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",5),ACS_NamedExecuteWithResult("QuakeMeleeDuration",5),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",5),"nosound/silent");
    }
    PUF4 A 2 BRIGHT
    PUF4 A 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 F 2 BRIGHT
    PUF4 F 2 BRIGHT
    Stop
  Crash:
    PUF4 A 0
	{
	 if (random(1,25) >= 9) { A_ChangeFlag("FORCEPAIN", TRUE); }
     A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",0,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",5),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",5),ACS_NamedExecuteWithResult("QuakeMeleeDuration",5),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",5),"nosound/silent");
    }
    PUF4 A 2 BRIGHT
    PUF4 A 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 F 2 BRIGHT
    PUF4 F 2 BRIGHT
    Stop
 }
}

actor GauntletAltPuff : GauntletPuff
{
 VSpeed 0
 Scale 0.5
 Alpha 0.5
 RenderStyle Translucent
 decal "GauntletScorch"
 damagetype "Gauntlets"
 SeeSound "GauntletHit"
 AttackSound "GauntletHitWall"
 +FORCERADIUSDMG +PUFFGETSOWNER +PUFFONACTORS 

 States
 {
  Spawn:
    TNT1 A 0 NoDelay
	{
     A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",1,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",6),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",6),ACS_NamedExecuteWithResult("QuakeMeleeDuration",6),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",6),"nosound/silent");
    }
    PUF4 A 2 BRIGHT
    PUF4 A 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 F 2 BRIGHT
    PUF4 F 2 BRIGHT
    Stop
  Melee:
    TNT1 A 0
	{
     A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",1,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",6),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",6),ACS_NamedExecuteWithResult("QuakeMeleeDuration",6),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",6),"nosound/silent");
    }
    PUF4 A 2 BRIGHT
    PUF4 A 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 F 2 BRIGHT
    PUF4 F 2 BRIGHT
    Stop
  Crash:
    PUF4 A 0
	{
     A_Explode(ACS_NamedExecuteWithResult("GetPunchDamage",1,1),ACS_NamedExecuteWithResult("MeleeImpactRadius",6),0);
     A_Quake(ACS_NamedExecuteWithResult("QuakeMeleeIntensity",6),ACS_NamedExecuteWithResult("QuakeMeleeDuration",6),0,ACS_NamedExecuteWithResult("QuakeMeleeTremrad",6),"nosound/silent");
    }
    PUF4 A 2 BRIGHT
    PUF4 A 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 B 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 C 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 D 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 E 2 BRIGHT
    PUF4 F 2 BRIGHT
    PUF4 F 2 BRIGHT
    Stop
 }
}

actor SauronGauntlets : MarineWeapon 27330
{
  var int user_theta;
  Scale 0.925
  Height 16
  Radius 16
  Tag "Sauron's Gauntlets"
  +BLOODSPLATTER
  +FLOATBOB
  +WEAPON.MELEEWEAPON
  +WEAPON.BFG
  +WEAPON.NOALERT
  Weapon.SelectionOrder 3400
  Weapon.KickBack 210
  Inventory.PickupMessage "\cqWhat the feck are these things...?!\c-"
  Obituary "$o was decked to the curb by %k's gauntlets of Sauron."
  AttackSound "GauntletHit"

  States
  {
  DeggarisPickup:
    WGNT A 0 A_SpawnItemEX("SauronGauntlets")
    WGNT A 0 A_FadeOut(1.0)
    Loop
  IlluciaPickup:
    WGNT A 0 A_SpawnItemEX("SauronGauntletsIllucia")
    WGNT A 0 A_FadeOut(1.0)
    Loop
  FloraPickup:
    WGNT A 0 A_SpawnItemEX("SauronGauntletsFlora")
    WGNT A 0 A_FadeOut(1.0)
    Loop
  NoMore:
    WGNT A 0 A_FadeOut(1.0)
    Loop

  Spawn:
    WGNT A 0
    WGNT AAA 1
	{
	 if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 2) { return state("IlluciaPickup"); }
	 else if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 3) { return state("FloraPickup"); }
	 return state("");
	}
  SpawnSoundEmit:
    WGNT A 0 A_Stopsound(CHAN_ITEM)
    WGNT A 0 A_Playsound("SauronGauntlets/Hum",CHAN_ITEM)
    WGNT A 0 A_SetUserVar("user_theta",0)
  SpawnPhase1:
    WGNT AA 1
	{
	 if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 2) { return state("IlluciaPickup"); }
	 else if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 3) { return state("FloraPickup"); }
	 return state("");
	}
    WGNT A 0 A_SetUserVar("user_theta",user_theta+1)
    WGNT A 0 A_JumpIf(user_theta==70,"SpawnSoundEmit")
    loop


  Pickup:
    // Other Things
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckPlayerIfDead") == 1,2)
    TNT1 A 0 A_PlaySound("generalequip", 5)
    TNT1 A 0 
    Stop

  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    FPCH A 1 A_Lower
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    FPCH A 1 A_Raise
    Loop
  Ready:
    FPCH A 1
	{
	 A_WeaponReady(WRF_ALLOWUSER1);
	 if (random(1,100) <= 70) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
	}
    Loop
  Fire:
    TNT1 A 0 A_Jump(244,2)
    TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",1),2) == 1, "PunchSuccess")
    goto Ready
  PunchSuccess:
    DGPH A 5
	{
	 A_GiveInventory("UsingMeleeAttack",1);
	 A_PlaySound("GauntletSwing",CHAN_WEAPON);
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(3); }
	}
    DGPH B 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(2); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",24), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",56), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",24), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",56), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    DGPH C 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(2); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    DGPH B 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(2); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    DGPH A 5
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(3); }
     ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
     A_ReFire;
	}
	DGPH A 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
    Goto Ready

  AltFire:
    TNT1 A 0 A_Jump(200,2)
    TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",2),2) == 1, "AltPunchSuccess")
    goto Ready
  AltPunchSuccess:
    DGPH A 5
	{
	 A_GiveInventory("UsingMeleeAttack",1);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(3); }
     ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
     A_PlaySound("*grunt",CHAN_VOICE,10.0);
	 A_PlaySound("GauntletSwing",CHAN_WEAPON);
	}
    DGPH B 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(2); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",64), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",64), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    DGPH CD 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(2); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    DGPH E 1
	{
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    DGPH F 1
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    DGPH G 1
	{
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    DGPH H 1
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    DGPH I 1
	{
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    DGPH J 1
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    DGPH K 10
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(8); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(6); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
	DGPH K 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
    Goto Ready
  }
}

// Illucia-specfic version with slightly less base damage but more attack speed
actor SauronGauntletsIllucia : MarineWeapon 27331
{
  var int user_theta;
  Tag "Sauron's Gauntlets"
  Scale 0.875
  +BLOODSPLATTER
  +FLOATBOB
  +WEAPON.MELEEWEAPON
  +WEAPON.BFG
  +WEAPON.NOALERT
  Weapon.SelectionOrder 3400
  Weapon.KickBack 175
  Inventory.PickupMessage "'\cdThe hell are these things supposed to be?!\c-'"
  Obituary "$o was decked to the curb by %k's gauntlets of Sauron."
  AttackSound "GauntletHit"

  States
  {
  DeggarisPickup:
    WGNT A 0 A_SpawnItemEX("SauronGauntlets")
    WGNT A 0 A_FadeOut(1.0)
    Loop
  IlluciaPickup:
    WGNT A 0 A_SpawnItemEX("SauronGauntletsIllucia")
    WGNT A 0 A_FadeOut(1.0)
    Loop
  FloraPickup:
    WGNT A 0 A_SpawnItemEX("SauronGauntletsFlora")
    WGNT A 0 A_FadeOut(1.0)
    Loop
  NoMore:
    WGNT A 0 A_FadeOut(1.0)
    Loop

  Spawn:
    TNT1 A 0
    WGNT AAA 1
	{
	 if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 1) { return state("DeggarisPickup"); }
	 else if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 3) { return state("FloraPickup"); }
	 return state("");
	}
  SpawnSoundEmit:
    WGNT A 0 A_Stopsound(CHAN_ITEM)
    WGNT A 0 A_Playsound("SauronGauntlets/Hum",CHAN_ITEM)
    WGNT A 0 A_SetUserVar("user_theta",0)
  SpawnPhase1:
    WGNT AA 1
	{
	 if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 1) { return state("DeggarisPickup"); }
	 else if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 3) { return state("FloraPickup"); }
	 return state("");
	}
    WGNT A 0 A_SetUserVar("user_theta",user_theta+1)
    WGNT A 0 A_JumpIf(user_theta==70,"SpawnSoundEmit")
    loop

  Pickup:
    // Other Things
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckPlayerIfDead") == 1,2)
    TNT1 A 0 A_PlaySound("generalequip", 5)
    TNT1 A 0 
    Stop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    FPCH A 1 A_Lower
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    FPCH A 1 A_Raise
    Loop
  Ready:
    FPCH A 1
	{
	 A_WeaponReady(WRF_ALLOWUSER1);
	 if (random(1,100) <= 60) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
	}
    Loop
  Fire:
    TNT1 A 0 A_Jump(244,2)
    TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",1),2) == 1, "PunchSuccess")
    goto Ready
  PunchSuccess:
    ILPH A 4
	{
	 A_GiveInventory("UsingMeleeAttack",1);
	 A_PlaySound("GauntletSwing",CHAN_WEAPON);
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    ILPH B 3 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
    TNT1 A 0
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",24), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",56), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",24), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",56), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    ILPH C 3 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
    ILPH B 3 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
    ILPH A 4
	{
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
 	 A_ReFire;
	}
	ILPH A 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
    Goto Ready

  AltFire:
    TNT1 A 0 A_Jump(200,2)
    TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",2),2) == 1, "AltPunchSuccess")
    goto Ready
  AltPunchSuccess:
    ILPH A 4
	{
	 A_GiveInventory("UsingMeleeAttack",1);
     ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
     A_PlaySound("GauntletIlluciaSwing",CHAN_VOICE,10.0);
	 A_PlaySound("GauntletSwing",CHAN_WEAPON);
	}
    ILPH B 3 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
    TNT1 A 0
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10051) == 0 && random(1,32) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 1 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 2 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) == 3 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 4 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10051) >= 5 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",64), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",64), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    ILPH CD 3 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
    ILPH EFGHIJ 1 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
    ILPH K 8 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
    ILPH K 8 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0)
	ILPH K 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
    Goto Ready
  }
}

// Flora-specfic version with even less base damage but more attack speed
actor SauronGauntletsFlora : FloraWeapon 27332
{
  var int user_theta;
  +BLOODSPLATTER
  Weapon.SelectionOrder 3400
  +WEAPON.MELEEWEAPON
  Weapon.KickBack 140
  Obituary "$o was decked to the curb by %k's gauntlets of Sauron."
  Tag "Sauron's Gauntlets"

  Scale 0.825
  +FLOATBOB
  +WEAPON.BFG
  +WEAPON.NOALERT
  Inventory.PickupMessage "'\cnHmmm... these look like they'll be of use...\c-'"
  AttackSound "GauntletHit"

  States
  {
  DeggarisPickup:
    WGNT A 0 A_SpawnItemEX("SauronGauntlets")
    WGNT A 0 A_FadeOut(1.0)
    Loop
  IlluciaPickup:
    WGNT A 0 A_SpawnItemEX("SauronGauntletsIllucia")
    WGNT A 0 A_FadeOut(1.0)
    Loop
  FloraPickup:
    WGNT A 0 A_SpawnItemEX("SauronGauntletsFlora")
    WGNT A 0 A_FadeOut(1.0)
    Loop
  NoMore:
    WGNT A 0 A_FadeOut(1.0)
    Loop
  Spawn:
    TNT1 A 0
    WGNT AAA 1
	{
	      if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 1) { return state("DeggarisPickup"); }
	 else if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 2) { return state("IlluciaPickup"); }
	 return state("");
	}
  SpawnSoundEmit:
    WGNT A 0 A_Stopsound(CHAN_ITEM)
    WGNT A 0 A_Playsound("SauronGauntlets/Hum",CHAN_ITEM)
    WGNT A 0 A_SetUserVar("user_theta",0)
  SpawnPhase1:
    WGNT AA 1
	{
	      if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 1) { return state("DeggarisPickup"); }
	 else if (ACS_NamedExecuteWithResult("GauntletsCheckCharacter") == 2) { return state("IlluciaPickup"); }
	 return state("");
	}
    WGNT A 0 A_SetUserVar("user_theta",user_theta+1)
    WGNT A 0 A_JumpIf(user_theta==70,"SpawnSoundEmit")
    loop

  Pickup:
    // Other Things
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckPlayerIfDead") == 1,2)
    TNT1 A 0 A_PlaySound("generalequip", 5)
    TNT1 A 0 
    Stop
  Deselect:
    TNT1 A 0 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_Lower; }
	}
    TNT1 A 0 A_Lower
    GNTF A 1 A_Lower
    Loop
  Select:
    TNT1 A 0
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_Raise; }
	}
    TNT1 A 0 A_Raise
    GNTF A 1 A_Raise
    Loop
  Ready:
    GNTF A 1
	{
	 A_WeaponReady(WRF_ALLOWUSER1);
	 if (random(1,100) <= 50) { A_ChangeFlag("WEAPON.MELEEWEAPON", TRUE); } else { A_ChangeFlag("WEAPON.MELEEWEAPON", FALSE); }
	}
    Loop
  Fire:
    TNT1 A 0 A_Jump(244,2)
    TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",1),2) == 1, "PunchSuccess")
    goto Ready
  PunchSuccess:
    TNT1 A 0
	{
	 A_GiveInventory("UsingMeleeAttack",1);
	 if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
	}
    TNT1 A 0 A_Jump(224,2)
    TNT1 A 0 A_PlaySound("FloraKiaiFull",CHAN_VOICE)
    GNTP B 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(2); }
	 A_PlaySound("GauntletSwing",CHAN_WEAPON);
     ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP C 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    TNT1 A 0 
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",0),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",2));
	 }

     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10035) == 0 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 1 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 2 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 3 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) >= 4 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",24), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",56), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",24), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",56), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    GNTP D 2
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP C 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(2); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP B 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	 A_TakeInventory("MartArtsMaster1",9999);
	 A_TakeInventory("MartArtsMaster2",9999);
     A_ReFire;
	}
	GNTP B 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
    Goto Ready

  AltFire:
    TNT1 A 0 A_Jump(200,2)
    TNT1 A 0 A_AlertMonsters // Sometimes a swing will be enough to wake up all monsters in the area.
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetPunchStaminaUse",2),2) == 1, "AltPunchSuccess")
    goto Ready
  AltPunchSuccess:
    TNT1 A 0
	{
	 A_GiveInventory("UsingMeleeAttack",1);
	 if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
	}
    GNTP B 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(2); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	 A_PlaySound("GauntletFloraSwing",CHAN_VOICE,10.0);
	 A_PlaySound("GauntletSwing",CHAN_WEAPON);
	}
    GNTP C 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(1); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    TNT1 A 0 
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle-15);
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_CustomPunch(ACS_NamedExecuteWithResult("GetPunchDamage",1),1,CPF_NOTURN,"GauntletPuff",ACS_NamedExecuteWithResult("GetMeleeRange",3));
	 }

     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	 if (CallACS("MiscVarCheckDECORATE",10035) == 0 && random(1,16) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 1 && random(1,8) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 2 && random(1,4) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) == 3 && random(1,2) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CallACS("MiscVarCheckDECORATE",10035) >= 4 && random(1,1) == 1) { A_GiveInventory("MeleeDestroyProjectiles",1,AAPTR_PLAYER1); }
	 if (CountInv("MeleeDestroyProjectiles",AAPTR_PLAYER1) > 0)
	 {
	  if (random(1,8) == 1)
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",64), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	  else
	  {
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	   A_SpawnItemEx ("ShieldPartPunchAttackNoReflect", ACS_NamedExecuteWithResult("SetShieldPieceDist",64), 0, ACS_NamedExecuteWithResult("SetShieldPieceDist",32), 0, 0, 0, 0, SXF_NOCHECKPOSITION);
	  }
	 }
     A_TakeInventory("MeleeDestroyProjectiles",9999,0,AAPTR_PLAYER1);
	}
    GNTP D 2
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(1); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP E 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(2); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP F 1
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP G 1
	{
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP H 1
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP I 1
	{
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP J 1
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(0); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP K 1
	{
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	}
    GNTP L 7
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_SetTics(6); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 3) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_SetTics(4); }
	 ACS_NamedExecute("GauntletFlashEffect",0,0,0,0);
	 A_TakeInventory("MartArtsMaster1",9999);
	 A_TakeInventory("MartArtsMaster2",9999);
	}
	GNTP L 0 A_TakeInventory("UsingMeleeAttack",9999,0,AAPTR_PLAYER1)
    Goto Ready
  }
}

actor ChainsawPuff : BulletPuff
{
  var int user_randompain;
  DamageType "Chainsaw"
  +NOBLOCKMAP
  +NOGRAVITY
  +ALLOWPARTICLES
  +RANDOMIZE
  RenderStyle Translucent
  Alpha 0.5
  VSpeed 1
  Mass 5
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 A_SetUserVar("user_randompain",4);
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
    }
    PUFF A 4 Bright
    PUFF B 4
    // Intentional fall-through
  Melee:
    TNT1 A 0
	{
	 A_SetUserVar("user_randompain",4);
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
    }
    PUFF CD 4
    Stop
  }
}

actor Chainsaw2Puff : ChainsawPuff
{
  DamageType "Chainsaw"
  +NOBLOCKMAP
  +NOGRAVITY
  +ALLOWPARTICLES
  +RANDOMIZE
  RenderStyle Translucent
  Alpha 0.5
  VSpeed 1
  Mass 5
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 A_SetUserVar("user_randompain",8);
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
    }
    PUFF A 4 Bright
    PUFF B 4
    // Intentional fall-through
  Melee:
    TNT1 A 0
	{
	 A_SetUserVar("user_randompain",8);
	 if (random(1,25) >= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
    }
    PUFF CD 4
    Stop
  }
}

// Marine Weapons
Actor Chainsaw2 : MarineWeapon
{ 
  Weapon.Kickback 0
  Weapon.SelectionOrder 2200
  Weapon.UpSound "weapons/sawup"
  Weapon.ReadySound "weapons/sawidle"
  Inventory.PickupMessage "$GOTCHAINSAW"
  Obituary "$OB_MPCHAINSAW"
  Tag "$TAG_CHAINSAW"
  Decal "BulletChip"
  +WEAPON.MELEEWEAPON
  Inventory.PickupMessage "A \caChainsaw\c-! Find some meat!"
  States
  {
  Spawn:
    CSAW A -1
    Stop
  Ready:
    SAWG C 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Ready2");
	 }
	 else
	 {
      return state("Ready1");
	 }
     return state("");
	}
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Deselect2");
	 }
	 else
	 {
      return state("Deselect1");
	 }
     return state("");
	}
  Ready1:
    SAWG CD 4
	{
	 A_WeaponReady(WRF_ALLOWUSER1);
	 A_PlaySound("weapons/sawidle");
	}
    goto Ready
  Ready2:
    SAWG GH 4
	{
	 A_WeaponReady(WRF_ALLOWUSER1);
	 A_PlaySound("weapons/sawidle");
	}
    goto Ready
  Deselect:
    TNT1 A 0 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_Lower; }
	}
    TNT1 A 0 A_Lower
  Deselect1:
    SAWG A 1 A_Lower
    goto Deselect
  Deselect2:
    SAWG E 1 A_Lower
    goto Deselect
  Select:
    TNT1 A 0 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_Raise; }
	}
    TNT1 A 0 A_Raise
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Select2");
	 }
	 else
	 {
      return state("Select1");
	 }
     return state("");
	}
  Select1:
    SAWG A 1 A_Raise
    goto Select
  Select2:
    SAWG E 1 A_Raise
    goto Select
  Fire:
    TNT1 A 0 A_Jump(252,2)
    TNT1 A 0 A_AlertMonsters
    TNT1 A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire2");
	 }
	 else
	 {
      return state("Fire1");
	 }
     return state("");
	}
  Fire1:
    SAWG AB 4
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0;
      A_SetAngle(angle+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      A_SetAngle(angle-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      A_SetAngle(angle-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
	 }	 
	}
    SAWG B 0 A_ReFire
    goto Ready
  Fire2:
    SAWG EF 4
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0;
      A_SetAngle(angle+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      A_SetAngle(angle-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      A_SetAngle(angle-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",1),"ChainsawPuff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",5),2.8125,0,0);
	 }	 
	}
    SAWG D 0 A_ReFire
    goto Ready
  Spawn:
    CSAW A -1
    Stop
  }
}

Actor DoubleBladedChainsaw : MarineWeapon 27033
{
  Weapon.Kickback 0
  Weapon.SelectionOrder 2200
  Weapon.UpSound "weapons/saw2up"
  Weapon.ReadySound "weapons/saw2idle"
  Inventory.PickupMessage "A \cadouble-bladed Chainsaw\c-!  This was obviously made with killing in mind!"
  Tag "Double-Bladed Chainsaw"
  Obituary "%o was mowed twice-over by %k's double-bladed chainsaw."
  Decal "BulletChip"
  +WEAPON.MELEEWEAPON
  States
  {
  Spawn:
    2SAW A -1
    Stop
  Ready:
    SAW2 C 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Ready2");
	 }
	 else
	 {
      return state("Ready1");
	 }
     return state("");
	}
  Ready1:
    SAW2 CD 4
	{
	 A_WeaponReady(WRF_ALLOWUSER1);
	 A_PlaySound("weapons/sawidle");
	 A_PlaySound("weapons/sawidle");
	}
    goto Ready
  Ready2:
    SAW2 GH 4
	{
	 A_WeaponReady(WRF_ALLOWUSER1);
	 A_PlaySound("weapons/sawidle");
	 A_PlaySound("weapons/sawidle");
	}
    goto Ready
  Deselect:
    TNT1 A 0 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_Lower; }
	}
    SAW2 C 0 A_Lower
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Deselect2");
	 }
	 else
	 {
      return state("Deselect1");
	 }
     return state("");
	}
  Deselect1:
    SAW2 A 1 A_Lower
    goto Deselect
  Deselect2:
    SAW2 E 1 A_Lower
    goto Deselect
  Select:
    TNT1 A 0 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 4) { A_Raise; }
	}
    SAW2 C 0 A_Raise
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Select2");
	 }
	 else
	 {
      return state("Select1");
	 }
     return state("");
	}
  Select1:
    SAW2 A 1 A_Raise
    Loop
  Select2:
    SAW2 E 1 A_Raise
    Loop
  Fire:
    TNT1 A 0 A_Jump(252,2)
    TNT1 A 0 A_AlertMonsters
    TNT1 A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire2");
	 }
	 else
	 {
      return state("Fire1");
	 }
     return state("");
	}
  Fire1:
    SAW2 AB 4
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0;
      A_SetAngle(angle+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      A_SetAngle(angle-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      A_SetAngle(angle-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
	 }	 
	}
    SAW2 B 0 A_ReFire
    goto Ready
  Fire2:
    SAW2 EF 4
	{
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0;
      A_SetAngle(angle+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      A_SetAngle(angle-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      A_SetAngle(angle-15);
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NOPULLIN|SF_NOTURN|SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_Saw("weapons/sawfull","weapons/sawhit",ACS_NamedExecuteWithResult("GetChainsawDamage",2),"Chainsaw2Puff",SF_NORANDOM,ACS_NamedExecuteWithResult("GetMeleeRange",6),7.03125,0.125,0);
	 }	 
	}
    SAW2 B 0 A_ReFire
    goto Ready
  }
}

Actor ChainsawChecker : CustomInventory replaces Chainsaw
{
  //$Sprite "CSAWA0"
  States
  {
     BecomeSceptre:
       TNT1 A 0 A_SpawnItemEx("SceptreOfEmpyrea",0,0,0,0,0,0,0,0,0)
       TNT1 A 0 A_FadeOut(1.0)
       Loop

   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("SawCheckSceptre") == 1,"BecomeSceptre")
    TNT1 A 0 A_SpawnItemEx("MiniBerserk",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckChainsaw") == 1,"HaveSingle")
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckChainsaw") == 2,"HaveDouble")
    goto HaveNone
   HaveNone:
    TNT1 A 0 A_Jump(32,3)
    TNT1 A 0 A_SpawnItemEx("Chainsaw2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_Jump(256,2)
    TNT1 A 0 A_SpawnItemEx("DoubleBladedChainsaw",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
   HaveSingle:
    TNT1 A 0 A_Jump(32,3)
    TNT1 A 0 A_SpawnItemEx("Berserk2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_Jump(256,2)
    TNT1 A 0 A_SpawnItemEx("DoubleBladedChainsaw",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
   HaveDouble:
    TNT1 A 0 A_SpawnItemEx("Berserk2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
  }
}

Actor DualPistols : MarineWeapon 27037
{
  Game Doom
  Weapon.SlotPriority 1
  Weapon.SelectionOrder 1900
  Weapon.AmmoUse 1
  Weapon.AmmoGive 20
  Weapon.AmmoType "Clip"
  Inventory.PickupMessage "You got an extra \cuPistol\c-!"
  Obituary "%o got pecked by %k's twin peashooters!"
  Tag "Dual Pistols"
  States
  {
  Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
    PIST C 1
    Loop
  FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",12,0,0,0,0,0,0,0,96)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",-12,0,0,0,0,0,0,0,254)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

  Ready:
    PISG A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Ready2");
	 }
	 else
	 {
      return state("Ready1");
	 }
     return state("");
	}
  Ready1:
    PISD A 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Ready2:
    PISD D 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Deselect:
    TNT1 A 0 
    {
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Deselect2");
	 }
	 else
	 {
      return state("Deselect1");
	 }
     return state("");
	}
  Deselect1:
    PISD A 1 A_Lower
    goto Deselect
  Deselect2:
    PISD D 1 A_Lower
    goto Deselect
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Select2");
	 }
	 else
	 {
      return state("Select1");
	 }
     return state("");
	}
  Select1:
    PISD A 1 A_Raise
    goto Select
  Select2:
    PISD D 1 A_Raise
    goto Select

  Fire:
    PISD A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire2");
	 }
	 else
	 {
      return state("Fire1");
	 }
     return state("");
	}
  Fire1:
    PISD A 0
	{
       A_PlaySound("weapons/pistol", CHAN_WEAPON);
       ACS_NamedExecuteAlways("StartTensionCountDown");
	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
        // Angle + 15, Pitch + 0
        A_SetAngle(angle+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 7.5, Pitch + 7.5
        A_SetAngle(angle-7.5);
        A_SetPitch(pitch+7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 7.5, Pitch - 7.5
        A_SetPitch(pitch-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 0, Pitch + 0
        A_SetPitch(pitch+7.5);
        A_SetAngle(angle-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 7.5, Pitch - 7.5
        A_SetAngle(angle-7.5);
        A_SetPitch(pitch-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 7.5, Pitch + 7.5
        A_SetPitch(pitch+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 15, Pitch + 0
        A_SetPitch(pitch-7.5);
        A_SetAngle(angle-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
        // Reset
        A_SetAngle(angle+15);
	   }
	   else
	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
        A_SetAngle(angle+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        A_SetAngle(angle-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        A_SetAngle(angle-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
        A_SetAngle(angle+15);
	   }
	   else
	   {
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
	   }
	}
    PISD B 3 A_GunFlash("Flash")
    PISD B 2
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(0); }
    }
    TNT1 A 0
	{
       A_PlaySound("weapons/pistol", CHAN_WEAPON);
       ACS_NamedExecuteAlways("StartTensionCountDown");
	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
        // Angle + 15, Pitch + 0
        A_SetAngle(angle+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 7.5, Pitch + 7.5
        A_SetAngle(angle-7.5);
        A_SetPitch(pitch+7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 7.5, Pitch - 7.5
        A_SetPitch(pitch-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 0, Pitch + 0
        A_SetPitch(pitch+7.5);
        A_SetAngle(angle-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 7.5, Pitch - 7.5
        A_SetAngle(angle-7.5);
        A_SetPitch(pitch-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 7.5, Pitch + 7.5
        A_SetPitch(pitch+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 15, Pitch + 0
        A_SetPitch(pitch-7.5);
        A_SetAngle(angle-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
        // Reset
        A_SetAngle(angle+15);
	   }
	   else
	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
        A_SetAngle(angle+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        A_SetAngle(angle-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        A_SetAngle(angle-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
        A_SetAngle(angle+15);
	   }
	   else
	   {
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
	   }
	}
    PISD C 3 A_GunFlash
    PISD C 2
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(0); }
    }
    PISD A 3 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(1); }
	 A_ReFire;
    }
    Goto Ready
  Fire2:
    PISD D 0
	{
       A_PlaySound("weapons/pistol", CHAN_WEAPON);
       ACS_NamedExecuteAlways("StartTensionCountDown");
	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
        // Angle + 15, Pitch + 0
        A_SetAngle(angle+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 7.5, Pitch + 7.5
        A_SetAngle(angle-7.5);
        A_SetPitch(pitch+7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 7.5, Pitch - 7.5
        A_SetPitch(pitch-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 0, Pitch + 0
        A_SetPitch(pitch+7.5);
        A_SetAngle(angle-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 7.5, Pitch - 7.5
        A_SetAngle(angle-7.5);
        A_SetPitch(pitch-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 7.5, Pitch + 7.5
        A_SetPitch(pitch+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 15, Pitch + 0
        A_SetPitch(pitch-7.5);
        A_SetAngle(angle-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
        // Reset
        A_SetAngle(angle+15);
	   }
	   else
	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
        A_SetAngle(angle+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        A_SetAngle(angle-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        A_SetAngle(angle-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
        A_SetAngle(angle+15);
	   }
	   else
	   {
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
	   }
	}
    PISD E 3 A_GunFlash("Flash")
    PISD E 2
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(0); }
    }
    TNT1 A 0
	{
       A_PlaySound("weapons/pistol", CHAN_WEAPON);
       ACS_NamedExecuteAlways("StartTensionCountDown");
	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
        // Angle + 15, Pitch + 0
        A_SetAngle(angle+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 7.5, Pitch + 7.5
        A_SetAngle(angle-7.5);
        A_SetPitch(pitch+7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 7.5, Pitch - 7.5
        A_SetPitch(pitch-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle + 0, Pitch + 0
        A_SetPitch(pitch+7.5);
        A_SetAngle(angle-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 7.5, Pitch - 7.5
        A_SetAngle(angle-7.5);
        A_SetPitch(pitch-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 7.5, Pitch + 7.5
        A_SetPitch(pitch+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        // Angle - 15, Pitch + 0
        A_SetPitch(pitch-7.5);
        A_SetAngle(angle-7.5);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
        // Reset
        A_SetAngle(angle+15);
	   }
	   else
	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
        A_SetAngle(angle+15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        A_SetAngle(angle-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff",0);
        A_SetAngle(angle-15);
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
        A_SetAngle(angle+15);
	   }
	   else
	   {
        A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",2,1), "BulletPuff");
	   }
	}
    PISD F 3 A_GunFlash
    PISD F 2
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(0); }
    }
    PISD D 3 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(1); }
	 A_ReFire;
    }
    Goto Ready

  Flash:
    TNT1 A 0 Bright A_Light1
    Goto LightDone
  Flash2:
    TNT1 A 0 Bright A_Light1
    Goto LightDone
  }
}
Actor DualPistolsChecker : CustomInventory
{
  //$Sprite "PISTC0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",12,0,0,0,0,0,0,0,96)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",-12,0,0,0,0,0,0,0,254)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_SpawnItemEx("DualPistols",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    loop
  }
}


Actor Pistol2 : MarineWeapon
{
 Weapon.Kickback 100
 Weapon.SelectionOrder 1900
 Weapon.AmmoUse 1
 Weapon.AmmoGive 20
 Weapon.AmmoType "Clip"
 Obituary "$OB_MPPISTOL"
 +WEAPON.WIMPY_WEAPON
 Tag "$TAG_PISTOL"
 Inventory.PickupMessage "Picked up a \cupistol\c-!"
 States
 {
  Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
    PIST C 0
	{
	 if (CountInv("Pistol2",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DualPistols");
	  A_FadeOut(1,1);
	 }
	}
  Idle:
    PIST C 1
    Loop
  FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",12,0,0,0,0,0,0,0,96)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",-12,0,0,0,0,0,0,0,254)
	TNT1 A 0 { if (random(1,256) == 1) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
    TNT1 A 0 A_FadeOut(1.0)
    Loop

  Ready:
    PISG A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Ready2");
	 }
	 else
	 {
      return state("Ready1");
	 }
     return state("");
	}
  Ready1:
    PISG A 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Ready2:
    PISG F 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Deselect2");
	 }
	 else
	 {
      return state("Deselect1");
	 }
     return state("");
	}
  Deselect1:
    PISG A 1 A_Lower
    goto Deselect
  Deselect2:
    PISG F 1 A_Lower
    goto Deselect
  Select:
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Select2");
	 }
	 else
	 {
      return state("Select1");
	 }
     return state("");
	}
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
  Select1:
    PISG A 1 A_Raise
    goto Select
  Select2:
    PISG F 1 A_Raise
    goto Select
  Fire:
    PISG A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire2");
	 }
	 else
	 {
      return state("Fire1");
	 }
     return state("");
	}
  Fire1:
    PISG A 4
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
    }
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/pistol", CHAN_WEAPON);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff");
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff");
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff");
	 }
	}
    PISG B 6 A_GunFlash("Flash")
    PISG C 4
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
    }
    PISG B 5 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(3); }
	 A_ReFire;
    }
    Goto Ready
  Fire2:
    PISG F 4
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
    }
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("weapons/pistol", CHAN_WEAPON);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff");
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff");
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",1,1), "BulletPuff");
	 }
	}
    PISG G 6 A_GunFlash("Flash2")
    PISG H 4
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(2); }
    }
    PISG G 5 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_SetTics(3); }
	 A_ReFire;
    }
    Goto Ready
  Flash:
    PISF A 7 Bright A_Light1
    Goto LightDone
    PISF A 7 Bright A_Light1
    Goto LightDone
  Flash2:
    PISF B 7 Bright A_Light1
    Goto LightDone
    PISF B 7 Bright A_Light1
    Goto LightDone
 }
}
Actor PistolChecker : CustomInventory replaces Pistol
{
  //$Sprite "PISTC0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",12,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,96)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",-12,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,254)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_SpawnItemEx("Pistol2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    loop
  }
}

Actor Shotgun2 : MarineWeapon
{
 Weapon.Kickback 100
 Weapon.SelectionOrder 1300
 Weapon.AmmoUse 1
 Weapon.AmmoGive 8
 Weapon.AmmoType "Shell"
 Obituary "$OB_MPSHOTGUN"
 Tag "$TAG_SHOTGUN"
 Inventory.PickupMessage "Picked up a \cushotgun\c-!"
 States
 {
  Spawn:
    SHOT A -1
    Stop
  Ready:
    SHTG A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Ready2");
	 }
	 else
	 {
      return state("Ready1");
	 }
     return state("");
	}
  Ready1:
    SHTG A 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Ready2:
    SHTG I 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Deselect2");
	 }
	 else
	 {
      return state("Deselect1");
	 }
     return state("");
	}
  Deselect1:
    SHTG A 1 A_Lower
    goto Deselect
  Deselect2:
    SHTG I 1 A_Lower
    goto Deselect
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Select2");
	 }
	 else
	 {
      return state("Select1");
	 }
     return state("");
	}
  Select1:
    SHTG A 1 A_Raise
    goto Select
  Select2:
    SHTG I 1 A_Raise
    goto Select
  Flash:
    SHTF A 4 Bright A_Light1
    SHTF B 3 Bright A_Light2
    Goto LightDone
  Flash2:
    SHTF C 4 Bright A_Light1
    SHTF D 3 Bright A_Light2
    Goto LightDone

  FireActual:
    SHTG A 0
    {
     A_PlaySound ("weapons/shotgf", CHAN_WEAPON);
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      //A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7+(random(0,ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021)))+(random(0,(ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10022)*2))), ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff",0);
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff",0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff",0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff",0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff",0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff",0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff",0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff");
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff");
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",3), ACS_NamedExecuteWithResult("GetHitScanYSpread",3), 7, ACS_NamedExecuteWithResult("GetPlayerATKDMG",3,1), "BulletPuff");
	 }
	}
    SHTG A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire2End");
	 }
	 else
	 {
      return state("Fire1End");
	 }
     return state("");
	}
	goto Fire1End

  Fire:
    SHTG A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire2");
	 }
	 else
	 {
      return state("Fire1");
	 }
     return state("");
	}
  Fire1:
    SHTG A 3
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
	}
	goto FireActual
  Fire1End:
	SHTG A 7 A_GunFlash("Flash")
    SHTG BC 5
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(3); }
	}
    SHTG D 4
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(2); }
	}
    SHTG CB 5
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(3); }
	}
    SHTG A 3
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
	}
    SHTG A 7
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	 A_ReFire;
	}
    Goto Ready
  Fire2:
    SHTG I 3
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
	}
	goto FireActual
  Fire2End:
	SHTG I 7 A_GunFlash("Flash2")
    SHTG JK 5
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(3); }
	}
    SHTG L 4
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(2); }
	}
    SHTG KJ 5
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(4); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(3); }
	}
    SHTG I 3
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
	}
    SHTG I 7
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	 A_ReFire;
	}
    Goto Ready
 }
}
Actor ShotgunChecker : CustomInventory replaces Shotgun
{
  //$Sprite "SHOTA0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,248)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,254)

    TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
    //TNT1 A 0 A_PrintBold("Not Dropped - Shotgun")
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,248)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,254)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,248)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,254)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,248)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,254)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,255)
    TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,255)
    TNT1 A 0 A_SpawnItemEx("Backpack",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)

   FloraDetectedEnd:
    TNT1 A 0 
    TNT1 A 0 A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,254)
	TNT1 A 0 { if (random(1,256) == 1) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_SpawnItemEx("Shotgun2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
  }
}

Actor SuperShotgun2 : MarineWeapon 
{ 
 Weapon.Kickback 100
 Weapon.SelectionOrder 400
 Weapon.AmmoUse 2
 Weapon.AmmoGive 8
 Weapon.AmmoType "Shell"
 Obituary "$OB_MPSSHOTGUN"
 Tag "$TAG_SUPERSHOTGUN"
 Inventory.PickupMessage "Picked up a \cusuper shotgun\c-!"
 States
 {
  Spawn:
    SGN2 A -1
    Stop
  Ready:
    SHT2 A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Ready2");
	 }
	 else
	 {
      return state("Ready1");
	 }
     return state("");
	}
  Ready1:
    SHT2 A 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Ready2:
    SHT2 K 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Deselect2");
	 }
	 else
	 {
      return state("Deselect1");
	 }
     return state("");
	}
  Deselect1:
    SHT2 A 1 A_Lower
    goto Deselect
  Deselect2:
    SHT2 K 1 A_Lower
    goto Deselect
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Select2");
	 }
	 else
	 {
      return state("Select1");
	 }
     return state("");
	}
  Select1:
    SHT2 A 1 A_Raise
    goto Select
  Select2:
    SHT2 K 1 A_Raise
    goto Select
  Flash:
    SHT2 I 4 Bright A_Light1
    SHT2 J 3 Bright A_Light2
    Goto LightDone
  Flash2:
    SHT2 S 4 Bright A_Light1
    SHT2 T 3 Bright A_Light2
    Goto LightDone

  FireActual:
    TNT1 A 0
    {
     A_PlaySound ("weapons/sshotf", CHAN_WEAPON);
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      //A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20+(random(0,(ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021))*random(1,2)))+(random(0,(ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10022)*random(2,3)))), ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff",0);
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff",0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff",0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff",0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff",0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff",0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff",0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff");
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff");
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",4), ACS_NamedExecuteWithResult("GetHitScanYSpread",4), 20, ACS_NamedExecuteWithResult("GetPlayerATKDMG",4,1), "BulletPuff");
	 }
	}
    TNT1 A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire2End");
	 }
	 else
	 {
      return state("Fire1End");
	 }
     return state("");
	}
    goto Fire1End

  Fire:
    TNT1 A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire2");
	 }
	 else
	 {
      return state("Fire1");
	 }
     return state("");
	}
  Fire1:
    SHT2 A 3
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
	}
	goto FireActual
  Fire1End:
    SHT2 A 7 A_GunFlash
    SHT2 B 7
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	}
    SHT2 C 7 
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	 A_CheckReload;
	}
    SHT2 D 7 
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	 A_OpenShotgun2;
	}
    SHT2 E 7
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	}
    SHT2 F 7 
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	 A_LoadShotgun2;
	}
    SHT2 G 6
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(5); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(4); }
	}
    SHT2 H 6 
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(5); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(4); }
	 A_CloseShotgun2;
	}
    SHT2 A 5 
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(4); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(3); }
	 A_ReFire;
	}
    Goto Ready
    // unused states
    SHT2 B 7
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	}
    SHT2 A 3
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
	}
    Goto Deselect
  Fire2:
    SHT2 K 3
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
	}
	goto FireActual
  Fire2End:
    SHT2 K 7 A_GunFlash("Flash2")
    SHT2 L 7
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	}
    SHT2 M 7 
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	 A_CheckReload;
	}
    SHT2 N 7 
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	 A_OpenShotgun2;
	}
    SHT2 O 7
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	}
    SHT2 P 7 
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	 A_LoadShotgun2;
	}
    SHT2 Q 6
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(5); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(4); }
	}
    SHT2 R 6 
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(5); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(4); }
	 A_CloseShotgun2;
	}
    SHT2 K 5 
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(4); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(3); }
	 A_ReFire;
	}
    Goto Ready
    // unused states
    SHT2 L 7
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 2) { A_SetTics(6); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 4) { A_SetTics(5); }
	}
    SHT2 K 3
	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10021) >= 3) { A_SetTics(2); }
	}
    Goto Deselect
 }
}
Actor SuperShotgunChecker : CustomInventory replaces SuperShotgun
{
  //$Sprite "SGN2A0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,252)

    TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
    //TNT1 A 0 A_PrintBold("Not Dropped - Super Shotgun")
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,252)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,252)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,254)
    TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,255)
    TNT1 A 0 A_SpawnItemEx("Backpack",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,248)

   FloraDetectedEnd:
    TNT1 A 0 
    TNT1 A 0 A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,253)
	TNT1 A 0 { if (random(1,256) == 1) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_SpawnItemEx("SuperShotgun2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
  }
}

Actor Chaingun2 : MarineWeapon
{
  Weapon.Kickback 100
  Weapon.SelectionOrder 700
  Weapon.AmmoUse 1
  Weapon.AmmoGive 20
  Weapon.AmmoType "Clip"
  Obituary "$OB_MPCHAINGUN" // "%o was mowed down by %k's chaingun."
  Tag "$TAG_CHAINGUN"
  Inventory.PickupMessage "Picked up a \cuchaingun\c-!"
  States
  {
  Spawn:
    MGUN A -1
    Stop
  Ready:
    CHGG A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    CHGG A 1 A_Lower
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    CHGG A 1 A_Raise
    Loop

  Fire:
    CHGG A 4 
    {
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
	 A_GunFlash("Flash");
     A_PlaySound("weapons/chngun", CHAN_WEAPON);
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff");
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff");
	 }
	}
    CHGG B 4
    {
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_SetTics(3); }
	 A_GunFlash("Flash2");
     A_PlaySound("weapons/chngun", CHAN_WEAPON);
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff");
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff",0);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",1), ACS_NamedExecuteWithResult("GetHitScanYSpread",1), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",5,1), "BulletPuff");
	 }
	}
    CHGG B 0 A_ReFire
    Goto Ready
  Flash:
     CHGF A 4 Bright A_Light1
     Goto LightDone
  Flash2:
     CHGF B 4 Bright A_Light1
     Goto LightDone
  }
}
Actor ChaingunChecker : CustomInventory replaces Chaingun
{
  //$Sprite "MGUNA0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,244)

    TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
    //TNT1 A 0 A_PrintBold("Not Dropped - Chaingun")
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,244)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,244)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,244)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,253)
    TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,254)
    TNT1 A 0 A_SpawnItemEx("Backpack",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,250)

   FloraDetectedEnd:
    TNT1 A 0 
    TNT1 A 0 A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,251)
	TNT1 A 0 { if (random(1,256) == 1) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_Jump(16,"SpawnMinigun")
    TNT1 A 0 A_SpawnItemEx("Chaingun2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
   SpawnMinigun:
    TNT1 A 0 A_SpawnItemEx("Minigun",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
  }
}

// Skulltag's Minigun
actor Minigun : MarineWeapon 27036
{
 Weapon.AmmoType "Clip"
 Weapon.AmmoGive 20
 Weapon.AmmoUse 1
 Inventory.PickupSound "misc/w_pkup"
 Inventory.PickupMessage "Picked up a \cuminigun\c-!"
 Obituary "%o was shredded by %k's minigun."
 States
 {
  Spawn:
    MNGN A -1
    Loop
  Ready:
    MNG2 A 0
	{
     A_TakeInventory("MinigunHeat",9999,0,AAPTR_PLAYER1);
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Ready2");
	 }
	 else
	 {
      return state("Ready1");
	 }
     return state("");
	}
  Ready1:
    MNG2 A 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Ready2:
    MNG2 G 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Deselect:
    TNT1 A 0 
 	{
     A_TakeInventory("MinigunHeat",9999,0,AAPTR_PLAYER1);
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    MNG2 A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Deselect2");
	 }
	 else
	 {
      return state("Deselect1");
	 }
     return state("");
	}
  Deselect1:
    MNG2 A 1 A_Lower
    goto Deselect
  Deselect2:
    MNG2 G 1 A_Lower
    goto Deselect
  Select:
    TNT1 A 0 
 	{
     A_TakeInventory("MinigunHeat",9999,0,AAPTR_PLAYER1);
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    MNG2 A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Select2");
	 }
	 else
	 {
      return state("Select1");
	 }
     return state("");
	}
  Select1:
    MNG2 A 1 A_Raise
    goto Select
  Select2:
    MNG2 G 1 A_Raise
    goto Select
  Fire:
    TNT1 A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire2");
	 }
	 else
	 {
      return state("Fire1");
	 }
     return state("");
	}
  Fire1:
    TNT1 A 0
	{
     if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 100)
	 {
	  if (random(1,256) <= 8){ return state("HyperCooldown"); }
	  else if (random(1,256) <= 32) { return state("FastCooldown"); }
      return state("SlowCooldown");
	 }
     return state("");
	}
    MNG2 EF 2 
    {
     if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 5) { A_SetTics(1); }
     A_PlaySound("weapons/minigunfire", CHAN_WEAPON);

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) == 5) { if (random(1,100) <= 66) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) == 4) { if (random(1,100) <= 72) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) == 3) { if (random(1,100) <= 78) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) == 2) { if (random(1,100) <= 84) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) == 1) { if (random(1,100) <= 90) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
	 else { if (random(1,100) <= 96) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } }
	 CallACS("CheckMinigunHeat",20);

     ACS_NamedExecuteAlways("StartTensionCountDown");
     if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
     {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff");
      // Reset
      A_SetAngle(angle+15);
     }
     else
     if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
     {
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff");
      A_SetAngle(angle+15);
     }
     else
     {
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff");
     }
    }
    MNG2 F 0 A_ReFire("Fire")
	TNT1 A 0
	{
     if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 51 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 100)
	 {
	  if (random(1,256) <= 8){ return state("HyperCooldown"); }
	  else if (random(1,256) <= 32) { return state("FastCooldown"); }
      return state("SlowCooldown");
	 }
	 else
     if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 21 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 50)
	 {
	  if (random(1,256) <= 32) { return state("HyperCooldown"); }
      return state("FastCooldown");
	 }
	 else
     if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 0 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 20)
	 {
      return state("HyperCooldown");
	 }
     return state("SlowCooldown");
	}
    goto SlowCoolDown
  Fire2:
    TNT1 A 0
	{
     if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 100)
	 {
	  if (random(1,256) <= 8){ return state("HyperCooldown2"); }
	  else if (random(1,256) <= 32) { return state("FastCooldown2"); }
      return state("SlowCooldown2");
	 }
     return state("");
	}
    MNG2 KL 2 
    {
     if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 5) { A_SetTics(1); }
     A_PlaySound("weapons/minigunfire", CHAN_WEAPON);

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) == 5) { if (random(1,100) <= 66) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) == 4) { if (random(1,100) <= 72) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) == 3) { if (random(1,100) <= 78) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) == 2) { if (random(1,100) <= 84) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) == 1) { if (random(1,100) <= 90) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } } 
	 else { if (random(1,100) <= 96) { A_GiveInventory("MinigunHeat",1,AAPTR_PLAYER1); } }
	 CallACS("CheckMinigunHeat",20);

     ACS_NamedExecuteAlways("StartTensionCountDown");
     if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
     {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff");
      // Reset
      A_SetAngle(angle+15);
     }
     else
     if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
     {
      A_SetAngle(angle+15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff",0);
      A_SetAngle(angle-15);
      A_FireBullets (ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff");
      A_SetAngle(angle+15);
     }
     else
     {
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",2), ACS_NamedExecuteWithResult("GetHitScanYSpread",2), 1, ACS_NamedExecuteWithResult("GetPlayerATKDMG",6,1), "BulletPuff");
     }
    }
    MNG2 L 0 A_ReFire("Fire")
	TNT1 A 0
	{
     if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 51 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 100)
	 {
	  if (random(1,256) <= 8){ return state("HyperCooldown2"); }
	  else if (random(1,256) <= 32) { return state("FastCooldown2"); }
      return state("SlowCooldown2");
	 }
	 else
     if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 21 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 50)
	 {
	  if (random(1,256) <= 32) { return state("HyperCooldown2"); }
      return state("FastCooldown2");
	 }
	 else
     if (CountInv("MinigunHeat",AAPTR_PLAYER1) >= 0 && CountInv("MinigunHeat",AAPTR_PLAYER1) <= 20)
	 {
      return state("HyperCooldown2");
	 }
     return state("SlowCooldown2");
	}
    goto SlowCoolDown2

  SlowCooldown: // Up to 20 Tics
	MNG2 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }  
    MNG2 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
	// 4 tics / 2
    MNG2 A 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 B 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 C 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 D 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
	// 8 tics / 4 [12 so far]
    MNG2 A 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 B 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 C 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 D 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
	// 12 tics [24 so far]
    MNG2 A 4 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 B 4 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 C 4 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 D 4 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
	// 16 tics [40 so far]
    MNG2 A 5 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(3); } CallACS("CheckMinigunHeat",0); }
    MNG2 B 5 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 C 5 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(3); } CallACS("CheckMinigunHeat",0); }
    MNG2 D 5 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
	// 20 tics [60 so far]
    goto Ready
  FastCooldown:
    MNG2 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 B 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
    MNG2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 D 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
	// 2 tics
    MNG2 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
	// 4 tics [6 so far]
    MNG2 A 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 C 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
	// 6 tics [12 so far]
    MNG2 A 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }  
    MNG2 B 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 C 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 D 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
	// 8 tics [20 so far]
    MNG2 A 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); } 
    MNG2 B 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 C 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 D 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
	// 10 tics [30 so far]
    goto Ready
  HyperCooldown:
    MNG2 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
    MNG2 B 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }  
    MNG2 C 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
    MNG2 D 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
	// 1 tics
    MNG2 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 B 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
    MNG2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
    MNG2 D 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
	// 2 tics [3 so far]
    MNG2 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(random(0,1)); } CallACS("CheckMinigunHeat",0); } 
    MNG2 D 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
	// 3 tics [6 so far]
    MNG2 A 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
	// 4 tics [10 so far]
    MNG2 A 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 B 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(random(0,1)); } CallACS("CheckMinigunHeat",0); }
    MNG2 C 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 D 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
	// 5 tics [15 so far]
    goto Ready

  SlowCooldown2:
    MNG2 G 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 H 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 I 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }  
    MNG2 J 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
	// 4 tics / 2
    MNG2 G 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 H 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 I 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 J 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
	// 8 tics / 4 [12 so far]
    MNG2 G 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 H 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 I 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 J 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
	// 12 tics [24 so far]
    MNG2 G 4 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 H 4 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 I 4 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 J 4 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
	// 16 tics [40 so far]
    MNG2 G 5 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(3); } CallACS("CheckMinigunHeat",0); }
    MNG2 H 5 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
    MNG2 I 5 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(3); } CallACS("CheckMinigunHeat",0); }
    MNG2 J 5 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); }
	// 20 tics [60 so far]
    goto Ready
  FastCooldown2:
    MNG2 G 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 H 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
    MNG2 I 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 J 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
	// 2 tics
    MNG2 G 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 H 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 I 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 J 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
	// 4 tics [6 so far]
    MNG2 G 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 H 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 I 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 J 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
	// 6 tics [12 so far]
    MNG2 G 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }  
    MNG2 H 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 I 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 J 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
	// 8 tics [20 so far]
    MNG2 G 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(2); } CallACS("CheckMinigunHeat",0); } 
    MNG2 H 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 I 3 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 J 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
	// 10 tics [30 so far]
    goto Ready
  HyperCooldown2:
    MNG2 G 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
    MNG2 H 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }  
    MNG2 I 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
    MNG2 J 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
	// 1 tics
    MNG2 G 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 H 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
    MNG2 I 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
    MNG2 J 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
	// 2 tics [3 so far]
    MNG2 G 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); } 
    MNG2 H 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 I 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(random(0,1)); } CallACS("CheckMinigunHeat",0); } 
    MNG2 J 0 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
	// 3 tics [6 so far]
    MNG2 G 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 H 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 I 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 J 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); } 
	// 4 tics [10 so far]
    MNG2 G 2 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
    MNG2 H 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(random(0,1)); } CallACS("CheckMinigunHeat",0); }
    MNG2 I 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(0); } CallACS("CheckMinigunHeat",0); }
    MNG2 J 1 { if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10019) >= 3) { A_SetTics(1); } CallACS("CheckMinigunHeat",0); }
	// 5 tics [15 so far]
    goto Ready
 }
}
Actor MinigunChecker : CustomInventory
{
  //$Sprite "MNGNA0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,244)

    TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
    //TNT1 A 0 A_PrintBold("Not Dropped - Minigun")
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,244)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,244)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,244)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,253)
    TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,254)
    TNT1 A 0 A_SpawnItemEx("Backpack",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,244)

   FloraDetectedEnd:
    TNT1 A 0 
    TNT1 A 0 A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,251)
	TNT1 A 0 { if (random(1,256) == 1) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_SpawnItemEx("Minigun",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
  }
}


Actor RocketLauncher2 : MarineWeapon
{
 Weapon.SelectionOrder 2500
 Weapon.AmmoUse 1
 Weapon.AmmoUse1 1
 Weapon.AmmoUse2 1
 Weapon.AmmoGive 2
 Weapon.AmmoType "RocketAmmo"
 Weapon.AmmoType1 "RocketAmmo"
 Weapon.AmmoType2 "RocketAmmo"
 +WEAPON.NOAUTOFIRE
 Tag "$TAG_ROCKETLAUNCHER"
 Inventory.PickupMessage "Picked up a \carocket launcher\c-!"
 States
 {
  Spawn:
    LAUN A -1
    Stop
  Ready:
    MISG A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    MISG A 1 A_Lower
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    MISG A 1 A_Raise
    Loop
  Fire:
    // 20/15/10 Tics
    MISG B 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
	 A_GunFlash("Flash");
	}
    MISG B 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
	}
    MISG B 4 
    {	 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("RocketPlayerNoAOE",15,0,0,0,0,0);
      A_FireCustomMissile("RocketPlayerNoAOE",7.5,0,0,0,0,7.5);
      A_FireCustomMissile("RocketPlayerNoAOE",7.5,0,0,0,0,-7.5);
      A_FireCustomMissile("RocketPlayer",0,1,0,0,0,0);
      A_FireCustomMissile("RocketPlayerNoAOE",-7.5,0,0,0,0,-7.5);
      A_FireCustomMissile("RocketPlayerNoAOE",-7.5,0,0,0,0,7.5);
      A_FireCustomMissile("RocketPlayerNoAOE",-15,0,0,0,0,0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("RocketPlayerNoAOE",15,0,0,0,0,0);
      A_FireCustomMissile("RocketPlayer",0,1,0,0,0,0);
      A_FireCustomMissile("RocketPlayerNoAOE",-15,0,0,0,0,0);
	 }
	 else
	 {
      A_FireCustomMissile("RocketPlayer",0,1,0,0,0,0);
	 }
	}
    MISG B 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
	}
    MISG B 4
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
	}
    MISG B 0 A_ReFire
    Goto Ready

  AltFire:
    MISG B 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(2); }
	 A_GunFlash("AltFlash");
	}
    MISG B 2
    {	 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(1); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(2); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("RocketPlayerNoAOE",15+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),0,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
      A_FireCustomMissile("RocketPlayerNoAOE",7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),0,0,0,0,7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
      A_FireCustomMissile("RocketPlayerNoAOE",7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),0,0,0,0,-7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
      A_FireCustomMissile("RocketPlayer",0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),1,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
      A_FireCustomMissile("RocketPlayerNoAOE",-7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),0,0,0,0,-7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
      A_FireCustomMissile("RocketPlayerNoAOE",-7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),0,0,0,0,7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
      A_FireCustomMissile("RocketPlayerNoAOE",-15+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),0,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("RocketPlayerNoAOE",15+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),0,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
      A_FireCustomMissile("RocketPlayer",0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),1,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
      A_FireCustomMissile("RocketPlayerNoAOE",-15+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),0,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
	 }
	 else
	 {
      A_FireCustomMissile("RocketPlayer",0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)),1,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",8),ACS_NamedExecuteWithResult("GetHitScanXSpread",8)));
	 }
	}
    MISG B 1
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(0); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(1); }
	}
    MISG B 0 A_ReFire
    Goto Ready

  Flash:
    // 15 tics
    MISF A 3 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(1); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(2); }
	 A_Light1;
	}
    MISF B 4 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
	}
    MISF CD 4 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(2); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(3); }
	 A_Light2;
	}
    Goto LightDone

  AltFlash:
    // 11 tics
    MISF A 1 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(0); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(0); }
	 A_Light1;
	}
    MISF B 2 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(0); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(1); }
	}
    MISF CD 2 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 4) { A_SetTics(1); }
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10025) >= 2) { A_SetTics(1); }
	 A_Light2;
	}
    Goto LightDone
  }
}
Actor RocketLauncherChecker : CustomInventory replaces RocketLauncher
{
  //$Sprite "LAUNA0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)

    TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
    //TNT1 A 0 A_PrintBold("Not Dropped - Rocket Launcher")
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,248)
    TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("Backpack",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,244)

   FloraDetectedEnd:
    TNT1 A 0 
    TNT1 A 0 A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,248)
	TNT1 A 0 { if (random(1,256) == 1) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_SpawnItemEx("RocketLauncher2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
  }
}

Actor PlasmaRifle2 : MarineWeapon
{
 Weapon.SelectionOrder 100
 Weapon.AmmoUse 1
 Weapon.AmmoUse1 1
 Weapon.AmmoUse2 1
 Weapon.AmmoGive 40
 Weapon.AmmoType "Cell"
 Weapon.AmmoType1 "Cell"
 Weapon.AmmoType2 "Cell"
 Tag "$TAG_PLASMARIFLE"
 Inventory.PickupMessage "Picked up a \cvplasma rifle\c-!"
 States
 {
  Spawn:
    PLAS A -1
    Stop
  Ready:
    PLSG A 0
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Ready2");
	 }
	 else
	 {
      return state("Ready1");
	 }
     return state("");
	}
  Ready1:
    PLSG A 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Ready2:
    PLSG C 1 A_WeaponReady(WRF_ALLOWUSER1)
    goto Ready
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Deselect2");
	 }
	 else
	 {
      return state("Deselect1");
	 }
     return state("");
	}
  Deselect1:
    PLSG A 1 A_Lower
    goto Deselect
  Deselect2:
    PLSG C 1 A_Lower
    goto Deselect
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Select2");
	 }
	 else
	 {
      return state("Select1");
	 }
     return state("");
	}
  Select1:
    PLSG A 1 A_Raise
    goto Select
  Select2:
    PLSG C 1 A_Raise
    goto Select
  Fire:
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("PlasmaBallPlayer",15,0,0,0,0,0);
      A_FireCustomMissile("PlasmaBallPlayer",7.5,0,0,0,0,7.5);
      A_FireCustomMissile("PlasmaBallPlayer",7.5,0,0,0,0,-7.5);
      A_FireCustomMissile("PlasmaBallPlayer",0,1,0,0,0,0);
      A_FireCustomMissile("PlasmaBallPlayer",-7.5,0,0,0,0,-7.5);
      A_FireCustomMissile("PlasmaBallPlayer",-7.5,0,0,0,0,7.5);
      A_FireCustomMissile("PlasmaBallPlayer",-15,0,0,0,0,0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("PlasmaBallPlayer",15,0,0,0,0,0);
      A_FireCustomMissile("PlasmaBallPlayer",0,1,0,0,0,0);
      A_FireCustomMissile("PlasmaBallPlayer",-15,0,0,0,0,0);
	 }
	 else
	 {
      A_FireCustomMissile("PlasmaBallPlayer",0,1,0,0,0,0);
	 }
	}
    TNT1 A 0 ACS_NamedExecuteWithResult("CheckWeaponFlash",2,1)
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckWeaponFlash",2,0) == 1,"Flash1")
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckWeaponFlash",2,0) == 0,"Flash2")
  AltFire:
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 for (A_SetInventory("PlasmaBurstLevel",0,AAPTR_PLAYER1); CountInv("PlasmaBurstLevel",AAPTR_PLAYER1) < random(3,5); A_GiveInventory("PlasmaBurstLevel",1,AAPTR_PLAYER1))
	 {
	  if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	  {
       A_FireCustomMissile("PlasmaBallPlayer",15+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),0,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
       A_FireCustomMissile("PlasmaBallPlayer",7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),0,0,0,0,7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
       A_FireCustomMissile("PlasmaBallPlayer",7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),0,0,0,0,-7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
       A_FireCustomMissile("PlasmaBallPlayer",0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),1,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
       A_FireCustomMissile("PlasmaBallPlayer",-7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),0,0,0,0,-7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
       A_FireCustomMissile("PlasmaBallPlayer",-7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),0,0,0,0,7.5+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
       A_FireCustomMissile("PlasmaBallPlayer",-15+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),0,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
	  }
	  else
	  if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	  {
       A_FireCustomMissile("PlasmaBallPlayer",15+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),0,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
       A_FireCustomMissile("PlasmaBallPlayer",0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),1,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
       A_FireCustomMissile("PlasmaBallPlayer",-15+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),0,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
	  }
	  else
	  {
       A_FireCustomMissile("PlasmaBallPlayer",0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)),1,0,0,0,0+frandom(-ACS_NamedExecuteWithResult("GetHitScanXSpread",9),ACS_NamedExecuteWithResult("GetHitScanXSpread",9)));
	  }
	 }
	}
    TNT1 A 0 ACS_NamedExecuteWithResult("CheckWeaponFlash",2,1)
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckWeaponFlash",2,0) == 1,"Flash1")
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckWeaponFlash",2,0) == 0,"Flash2")
  Flash1:
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Flash1b");
	 }
	 else
	 {
      return state("Flash1a");
	 }
     return state("");
	}
	goto Flash1a
  Flash2:
    TNT1 A 0 
	{
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Flash2b");
	 }
	 else
	 {
      return state("Flash2a");
	 }
     return state("");
	}
	goto Flash2a

  Flash1a:
    PLSG A 3 A_GunFlash("FlashOne")
    PLSG B 20
 	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(8); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(11); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(14); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(17); }
	 A_ReFire;
    }
    Goto Ready
  Flash2a:
    PLSG A 3 A_GunFlash("FlashTwo")
    PLSG B 20
 	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(8); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(11); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(14); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(17); }
	 A_ReFire;
    }
    Goto Ready
  Flash1b:
    PLSG A 3 A_GunFlash("FlashOne2")
    PLSG D 20
 	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(8); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(11); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(14); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(17); }
	 A_ReFire;
    }
    Goto Ready
  Flash2b:
    PLSG A 3 A_GunFlash("FlashTwo2")
    PLSG D 20
 	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(8); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 3) { A_SetTics(11); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(14); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 1) { A_SetTics(17); }
	 A_ReFire;
    }
    Goto Ready

  FlashOne:
    PLSF A 4 Bright A_Light1
    Goto LightDone
  FlashTwo:
    PLSF B 4 Bright A_Light1
    Goto LightDone
  FlashOne2:
    PLSF C 4 Bright A_Light1
    Goto LightDone
  FlashTwo2:
    PLSF D 4 Bright A_Light1
    Goto LightDone
 }
}
Actor PlasmaRifleChecker : CustomInventory replaces PlasmaRifle
{
  //$Sprite "PLASA0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)

    TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
    //TNT1 A 0 A_PrintBold("Not Dropped - Plasma Rifle")
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,240)
    TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,244)
    TNT1 A 0 A_SpawnItemEx("Backpack",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,232)

   FloraDetectedEnd:
    TNT1 A 0 
    TNT1 A 0 A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,244)
	TNT1 A 0 { if (random(1,256) == 1) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_SpawnItemEx("PlasmaRifle2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
  }
}

Actor Repeater2 : MarineWeapon 27034
{
  Inventory.PickupSound "misc/w_pkup"
  Inventory.PickupMessage "You got a \cvplasma repeater\c-!"
  Obituary "%o was disintegrated by %k's repeater."
  Weapon.AmmoType1 "Cell"
  Weapon.AmmoGive 8
  Weapon.AmmoUse 2
  +Weapon.Explosive
  +Weapon.NoAlert
  Tag "Plasma Repeater"
  States
  {
  Spawn:
    REPG I -1
    Loop
  Ready:
    REPG A 0 A_TakeInventory("RepeaterSpin", 3)
    REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
    REPG A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    REPG A 0 A_TakeInventory("RepeaterSpin", 3)
    REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_Lower; }
    }
    REPG A 0 A_Lower
    REPG A 1 A_Lower
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_Raise; }
    }
    REPG A 0 A_Raise
    REPG A 1 A_Raise
    Loop
  Fire:
    //===========Spinup
    REPG A 0 A_PlaySound("Weapons/RepeaterSpinup")
    REPG A 0 A_JumpIfInventory("RepeaterSpin", 1, 8)
    REPG A 0 A_JumpIfInventory("RepeaterB", 1, 4)
    REPG A 0 A_JumpIfInventory("RepeaterC", 1, 4)
    REPG A 0 A_JumpIfInventory("RepeaterD", 1, 4)
    REPG ABCD 4
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_SetTics(2); }
    }
    REPG A 0 A_GiveInventory("RepeaterFrameA")
    REPG A 0 A_JumpIfInventory("RepeaterSpin", 2, 9)
    REPG A 0 A_GiveInventory("RepeaterSpin", 1)
    REPG A 0 A_JumpIfInventory("RepeaterB", 1, 4)
    REPG A 0 A_JumpIfInventory("RepeaterC", 1, 4)
    REPG A 0 A_JumpIfInventory("RepeaterD", 1, 4)
    REPG ABCD 3
 	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(1); }
    }
    REPG D 0 A_GiveInventory("RepeaterFrameA")
    REPG A 0 A_JumpIfInventory("RepeaterB", 1, 4)
    REPG A 0 A_JumpIfInventory("RepeaterC", 1, 4)
    REPG A 0 A_JumpIfInventory("RepeaterD", 1, 4)
    REPG ABCD 2
 	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(1); }
    }
    REPG D 0 A_GiveInventory("RepeaterFrameA")
    //===========Fire
    REPG A 0 A_Refire
    //===========Spindown
    REPG A 0 A_PlaySound("Weapons/RepeaterSpindown")
    REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
    REPG AA 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
    REPG BB 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
    REPG CC 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
    REPG DD 1 A_WeaponReady(11)
    REPG A 0 A_TakeInventory("RepeaterSpin", 1)
    REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
    REPG AAA 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
    REPG BBB 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
    REPG CCC 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
    REPG DDD 1 A_WeaponReady(11)
    REPG A 0 A_TakeInventory("RepeaterSpin", 1)
    REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
    REPG AAAA 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
    REPG BBBB 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
    REPG CCCC 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
    REPG DDDD 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
    REPG AAAA 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
    REPG BBBB 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
    REPG CCCC 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
    REPG DDDD 1 A_WeaponReady(11)
    Goto Ready
  Hold:
    //===========Fire
    REPG E 0 Bright 
    {
	 A_Gunflash;
	 A_AlertMonsters;
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("Weapons/RepeaterFire", CHAN_WEAPON);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 1, 10240);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      A_SetAngle(angle-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      A_SetAngle(angle-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 1, 10240);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 1, 10240);
	 }
	}
    REPG E 2
 	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(1); }
    }
    REPG F 2 Bright
 	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 5) { A_SetTics(1); }
    }
    REPG G 0 Bright 
    {
	 A_AlertMonsters;
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlaySound("Weapons/RepeaterFire", CHAN_WEAPON);
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      // Angle + 15, Pitch + 0
      A_SetAngle(angle+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle + 7.5, Pitch + 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch+7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle + 7.5, Pitch - 7.5
      A_SetPitch(pitch-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle + 0, Pitch + 0
      A_SetPitch(pitch+7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle - 7.5, Pitch - 7.5
      A_SetAngle(angle-7.5);
      A_SetPitch(pitch-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle - 7.5, Pitch + 7.5
      A_SetPitch(pitch+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      // Angle - 15, Pitch + 0
      A_SetPitch(pitch-7.5);
      A_SetAngle(angle-7.5);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 1, 10240);
      // Reset
      A_SetAngle(angle+15);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_SetAngle(angle+15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      A_SetAngle(angle-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 0, 10240);
      A_SetAngle(angle-15);
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 1, 10240);
      A_SetAngle(angle+15);
	 }
	 else
	 {
      A_FireBullets(ACS_NamedExecuteWithResult("GetHitScanXSpread",5), ACS_NamedExecuteWithResult("GetHitScanYSpread",5), 2, ACS_NamedExecuteWithResult("GetPlayerATKDMG",7,1), "RepeaterPuffPlayer", 1, 10240);
	 }
	}
    REPG H 2 Bright
    REPG A 0 A_Refire
    //===========Spindown
    REPG A 0 A_PlaySound("Weapons/RepeaterSpindown")
    REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
    REPG AA 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
    REPG BB 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
    REPG CC 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
    REPG DD 1 A_WeaponReady(11)
    REPG A 0 A_TakeInventory("RepeaterSpin", 1)
    REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
    REPG AAA 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
    REPG BBB 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
    REPG CCC 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
    REPG DDD 1 A_WeaponReady(11)
    REPG A 0 A_TakeInventory("RepeaterSpin", 1)
    REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
    REPG AAAA 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
    REPG BBBB 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
    REPG CCCC 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
    REPG DDDD 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameA", 1)
    REPG AAAA 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameB", 1)
    REPG BBBB 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameC", 1)
    REPG CCCC 1 A_WeaponReady(11)
    REPG A 0 A_GiveInventory("RepeaterFrameD", 1)
    REPG DDDD 1 A_WeaponReady(11)
    Goto Ready
  Flash:
    TNT1 A 2 A_Light2
    TNT1 A 2 A_Light1
    TNT1 A 0 A_Light0
    Stop
  }
}
Actor RepeaterChecker : CustomInventory
{
  //$Sprite "REPGA0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)

    TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
    //TNT1 A 0 A_PrintBold("Not Dropped - Repeater")
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,240)
    TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,244)
    TNT1 A 0 A_SpawnItemEx("Backpack",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,224)

   FloraDetectedEnd:
    TNT1 A 0 
    TNT1 A 0 A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,244)
	TNT1 A 0 { if (random(1,256) == 1) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_SpawnItemEx("Repeater2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
  }
}

Actor RepeaterSpin : Inventory { Inventory.MaxAmount 2 }
Actor RepeaterB : Inventory { Inventory.MaxAmount 1 }
Actor RepeaterC : Inventory { Inventory.MaxAmount 1 }
Actor RepeaterD : Inventory { Inventory.MaxAmount 1 }

Actor RepeaterFrameA : CustomInventory
{
  Inventory.MaxAmount 0
  +Inventory.AutoActivate
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Use:
    TNT1 A 0 A_TakeInventory("RepeaterB", 1)
    TNT1 A 0 A_TakeInventory("RepeaterC", 1)
    TNT1 A 0 A_TakeInventory("RepeaterD", 1)
    Stop
  }
}

Actor RepeaterFrameB : RepeaterFrameA
{
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Use:
    TNT1 A 0 A_GiveInventory("RepeaterB", 1)
    TNT1 A 0 A_TakeInventory("RepeaterC", 1)
    TNT1 A 0 A_TakeInventory("RepeaterD", 1)
    Stop
  }
}

Actor RepeaterFrameC : RepeaterFrameA
{
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Use:
    TNT1 A 0 A_TakeInventory("RepeaterB", 1)
    TNT1 A 0 A_GiveInventory("RepeaterC", 1)
    TNT1 A 0 A_TakeInventory("RepeaterD", 1)
    Stop
  }
}

Actor RepeaterFrameD : RepeaterFrameA
{
  States
  {
  Spawn:
    TNT1 A 1
    Stop
  Use:
    TNT1 A 0 A_TakeInventory("RepeaterB", 1)
    TNT1 A 0 A_TakeInventory("RepeaterC", 1)
    TNT1 A 0 A_GiveInventory("RepeaterD", 1)
    Stop
  }
}

Actor RepeaterPuff
{
  Radius 3
  Height 3
  RenderStyle Add
  Alpha 0.75
  +AlwaysPuff
  +PuffOnActors
  +NoGravity
  +NoBlockMap
  +PuffGetsOwner
  +ForceRadiusDmg
  +BloodlessImpact
  -BloodSplatter
  Decal MummyScorch
  States
  {
  Spawn:
    RPUF A 1 Bright
    RPUF A 0 Bright A_PlaySound("Weapons/RepeaterHit")
    RPUF A 2 Bright A_Explode(7, 44, 0)
    RPUF BCDEFG 3 Bright
    Stop
  }
}

Actor RepeaterPuffPlayer : RepeaterPuff
{
  Radius 3
  Height 3
  RenderStyle Add
  Alpha 0.75
  +AlwaysPuff
  +PuffOnActors
  +NoGravity
  +NoBlockMap
  +PuffGetsOwner
  +ForceRadiusDmg
  +BloodlessImpact
  -BloodSplatter
  Decal MummyScorch
  States
  {
  Spawn:
    RPUF A 1 Bright
    RPUF A 0 Bright A_PlaySound("Weapons/RepeaterHit")
    RPUF A 2 Bright A_Explode(ACS_NamedExecuteWithResult("GetPlayerATKDMG",10), 44, 0)
    RPUF BCDEFG 3 Bright
    Stop
  }
}

Actor RepeaterPuffCrisis : RepeaterPuff
{
  scale 1.25
  States
  {
  Spawn:
    RPUF A 1 Bright
    RPUF A 0 Bright A_PlaySound("Weapons/RepeaterHit")
    RPUF A 2 Bright A_Explode(210, 44, 0)
    RPUF BCDEFG 3 Bright
    Stop
  }
}


Actor AMCell : Ammo
{
   Inventory.PickupSound "misc/i_pkup"
   Inventory.Amount 10
   Inventory.MaxAmount 150
   Ammo.BackpackAmount 10
   Ammo.BackpackMaxAmount 300
   Inventory.PickupMessage "You picked up an antimatter capsule."
   Inventory.Icon WAMCA0
   States
   {
   Spawn:
      WAMC A 3 Bright
      WAMC B 9
      Loop
   }
}

Actor AMBox : AMCell
{
   Inventory.Amount 50
   Inventory.PickupMessage "You picked up a box of antimatter capsules."
   States
   {
   Spawn:
      WAMC D 3 Bright
      WAMC C 9
      Loop
   }
}

Actor KaraSawa2 : MarineWeapon 27035
{
  Inventory.PickupSound "Misc/W_PkUp"
  Inventory.PickupMessage "You got a \cv'Karasawa' High-Density Plasma Cannon\c-!"
  Obituary "%o was fried by %k's Karasawa!"
  Tag "'Karasawa' High-Density Plasma Cannon"
  Weapon.AmmoType "Cell"
  Weapon.AmmoGive 32
  Weapon.AmmoUse 4 // changed due to attunement perk
  Weapon.KickBack 0
  states
  {
  Spawn:
    KSWP A -1
    loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_Lower; }
    }
    KSAW C 0 A_Lower
    KSAW C 1 A_Lower
    loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_Raise; }
    }
    KSAW C 0 A_Raise
    KSAW C 1 A_Raise
    loop
  Ready:
    KSAW A 0 A_PlaySound("Weapons/KarasawaIdle")
    KSAW ABCB 4 A_WeaponReady(WRF_ALLOWUSER1)
    loop
  Fire:
    TNT1 A 0
	{
	 if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0)
	 {
	  if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10027) >= 2) { return state("FireSuccess2"); }
	  else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10027) == 1) { return state("FireSuccess1"); }
      else { return state("FireSuccess0"); }
	  return state("");
	 }
	 else
	 {
	  if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10027) >= 2)
	  {
	   if (CountInv("Cell",AAPTR_PLAYER1) >= 4) { return state("FireSuccess2"); } else { return state("DeSelect"); }
	   return state("");
	  }
	  else
	  if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10027) == 1)
	  {
	   if (CountInv("Cell",AAPTR_PLAYER1) >= 6) { return state("FireSuccess1"); } else { return state("DeSelect"); }
	   return state("");
	  }
	  else
	  {
	   if (CountInv("Cell",AAPTR_PLAYER1) >= 8) { return state("FireSuccess0"); } else { return state("DeSelect"); }
	   return state("");
	  }
      return state("");
	 }
	}
  FireSuccess0:
    // 38 Tics
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlayWeaponSound("Weapons/KarasawaFire");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("KsawBoltPlayer",15, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",7.5, 0, 0, 0, 0, 7.5);
      A_FireCustomMissile("KsawBoltPlayer",7.5, 0, 0, 0, 0, -7.5);
      A_FireCustomMissile("KsawBoltPlayer",0, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",-7.5, 0, 0, 0, 0, -7.5);
      A_FireCustomMissile("KsawBoltPlayer",-7.5, 0, 0, 0, 0, 7.5);
      A_FireCustomMissile("KsawBoltPlayer",-15, 0, 0, 0, 0, 0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("KsawBoltPlayer",15, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",0, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",-15, 0, 0, 0, 0, 0);
	 }
	 else
	 {
      A_FireCustomMissile("KsawBoltPlayer", 0, 0, 0, 0, 0, 0);
	 }
	}
    KSAW D 1 Bright { if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",8,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } }
    KSAW E 1
    KSAW FGH 2 Bright A_Light2
    KSAW I 0 A_PlaySound("Weapons/KarasawaCharge",7,1)
    KSAW IA 4 A_Light1
    KSAW JKLMN 4
    KSAW A 0 A_Light0
    KSAW N 6
    Goto Ready
  FireSuccess1:
    // 30 Tics [-8]
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlayWeaponSound("Weapons/KarasawaFire");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("KsawBoltPlayer",15, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",7.5, 0, 0, 0, 0, 7.5);
      A_FireCustomMissile("KsawBoltPlayer",7.5, 0, 0, 0, 0, -7.5);
      A_FireCustomMissile("KsawBoltPlayer",0, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",-7.5, 0, 0, 0, 0, -7.5);
      A_FireCustomMissile("KsawBoltPlayer",-7.5, 0, 0, 0, 0, 7.5);
      A_FireCustomMissile("KsawBoltPlayer",-15, 0, 0, 0, 0, 0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("KsawBoltPlayer",15, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",0, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",-15, 0, 0, 0, 0, 0);
	 }
	 else
	 {
      A_FireCustomMissile("KsawBoltPlayer", 0, 0, 0, 0, 0, 0);
	 }
	}
    KSAW D 1 Bright { if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",6,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } }
    KSAW E 1
    KSAW FGH 2 Bright A_Light2
    KSAW I 0 A_PlaySound("Weapons/KarasawaCharge",7,1)
    KSAW IA 3 A_Light1
    KSAW JKLMN 3
    KSAW A 0 A_Light0
    KSAW N 5
    Goto Ready
  FireSuccess2:
    // 22 Tics [-16]
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
     A_PlayWeaponSound("Weapons/KarasawaFire");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("KsawBoltPlayer",15, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",7.5, 0, 0, 0, 0, 7.5);
      A_FireCustomMissile("KsawBoltPlayer",7.5, 0, 0, 0, 0, -7.5);
      A_FireCustomMissile("KsawBoltPlayer",0, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",-7.5, 0, 0, 0, 0, -7.5);
      A_FireCustomMissile("KsawBoltPlayer",-7.5, 0, 0, 0, 0, 7.5);
      A_FireCustomMissile("KsawBoltPlayer",-15, 0, 0, 0, 0, 0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("KsawBoltPlayer",15, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",0, 0, 0, 0, 0, 0);
      A_FireCustomMissile("KsawBoltPlayer",-15, 0, 0, 0, 0, 0);
	 }
	 else
	 {
      A_FireCustomMissile("KsawBoltPlayer", 0, 0, 0, 0, 0, 0);
	 }
	}
    KSAW D 1 Bright { if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",4,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } }
    KSAW E 1
    KSAW FGH 2 Bright A_Light2
    KSAW I 0 A_PlaySound("Weapons/KarasawaCharge",7,1)
    KSAW IA 2 A_Light1
    KSAW JKLMN 2
    KSAW A 0 A_Light0
    KSAW N 4
    Goto Ready
  }
}
Actor KaraSawaChecker : CustomInventory
{
  //$Sprite "KSWPA0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)

    TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
    //TNT1 A 0 A_PrintBold("Not Dropped - Karasawa")
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,240)
    TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,244)
    TNT1 A 0 A_SpawnItemEx("Backpack",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,216)

   FloraDetectedEnd:
    TNT1 A 0 
    TNT1 A 0 A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,0,244)
	TNT1 A 0 { if (random(1,256) == 1) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_SpawnItemEx("KaraSawa2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
  }
}

Actor KSawaCell : Ammo
{
  Radius 8
  Height 8
  Inventory.PickupMessage "Picked up a High-Density Plasma Battery"
  Inventory.Icon "KWASC0"
  Inventory.Amount 10
  Inventory.MaxAmount 40
  Ammo.BackpackAmount 5
  Ammo.BackpackMaxAmount 80
  States
  {
  Spawn:
    KWAS ABCD 4
    Loop
  }
}

Actor KSawaCellPack : KSawaCell
{
  Radius 16
  Height 8
  Inventory.PickupMessage "Picked up a High-Density Plasma Pack."
  Inventory.Icon "KWASC0"
  Inventory.Amount 20
  States
  {
  Spawn:
    KWAL ABCD 4
    Loop
  }
}

Actor KsawBolt
{
  Projectile
  +Ripper
  +BloodSplatter
  +StrifeDamage
  +HexenBounce
  +CanBounceWater
  +SkyExplode
  BounceType "Hexen"
  BounceCount 32
  BounceFactor 0.9875
  WallBounceFactor 0.9875
  Radius 6
  Height 4
  Speed 40 // 80
  Damage 12
  Alpha 1.0
  XScale 1.5
  YScale 0.4
  RenderStyle Add
  SeeSound ""
  DeathSound "Weapons/KarasawaHit"
  States
  {
   Spawn:
     KWBB A 0 Bright A_PlaySound("KsawBoltFly")
     KWBB ABCD 1 Bright A_SpawnItemEx("BoltBlur", 0, 0, 0, 1, 0, 0, 180, 128)
     goto Spawn+1
   Death:
     KWBD ABCDEF 2 Bright
     Stop
  }
}

Actor KsawBoltPlayer : KsawBolt
{
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",16))
  States
  {
   Spawn:
     KWBB A 0 Bright NoDelay
	 {
      if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10027) >= 2)
	  {
	   //A_PrintBold("Sawa Attunement 2");
 	   A_ScaleVelocity(0.75);
 	   //A_SetSpeed(20);
	  }
	  else
      if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10027) == 1)
	  {
	   //A_PrintBold("Sawa Attunement 1");
 	   A_ScaleVelocity(0.875);
 	   //A_SetSpeed(30);
	  }
	  else
	  {
	  }
	  A_PlaySound("KsawBoltFly");
	 }
     KWBB ABCD 1 Bright A_SpawnItemEx("BoltBlur", 0, 0, 0, 1, 0, 0, 180, 128)
     goto Spawn+1
   Death:
     KWBD ABCDEF 2 Bright
     Stop
  }
}

Actor KsawBoltCrisis : KsawBolt
{
  Damage 360

  States
  {
   Spawn:
     KWBB A 0 Bright A_PlaySound("KsawBoltFly")
     KWBB ABCD 1 Bright A_SpawnItemEx("BoltBlurCrisis", 0, 0, 0, 1, 0, 0, 180, 128)
     goto Spawn+1
   Death:
     KWBD ABCDEF 2 Bright
     Stop
  }
}

Actor BoltBlur
{
  Height 2
  Radius 6
  Damage 0
  Speed 0.2
  RenderStyle Add
  Alpha 0.9
  XScale 1.3
  YScale 0.3
  +NoGravity
  +DropOff
  +NoTeleport
  states
  {
  Spawn:
    KWBR AB 2 Bright A_FadeOut(0.3)
    Loop
  }
}
Actor BoltBlurCrisis
{
  Height 2
  Radius 6
  Damage 0
  Speed 0.2
  RenderStyle Add
  Alpha 0.9
  XScale 1.3
  YScale 0.3
  +NoGravity
  +DropOff
  +NoTeleport
  states
  {
   Spawn:
    KWBR A 0 NoDelay A_SpawnItemEx("KsawBoltCrisisParticle",0,0,0,0,0,1.28)
   Active:
    KWBR A 2 Bright A_FadeOut(0.3)
    KWBR B 2 Bright A_FadeOut(0.3)
    Loop
  }
}

Actor BFG90002 : MarineWeapon
{ 
 Height 20
 Weapon.Kickback 100
 Weapon.SelectionOrder 2800
 Weapon.AmmoUse 40
 Weapon.AmmoGive 40
 Weapon.AmmoType "Cell"
 +WEAPON.NOAUTOFIRE
 Tag "$TAG_BFG9000"
 Weapon.AmmoType1 "Cell"
 Weapon.AmmoType2 "Cell"
 Weapon.AmmoUse1 24 // 40
 Weapon.AmmoUse2 24
 Inventory.PickupMessage "Picked up a \cvBFG9000\c-!"
 States
 {
  Spawn:
    BFUG A -1
    Stop
  Ready:
    BFGG A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Deselect:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    BFGG A 1 A_Lower
    Loop
  Select:
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10023) >= 4) { A_Raise; }
    }
    TNT1 A 0 A_Raise
    BFGG A 1 A_Raise
    Loop

  Fire:
    TNT1 A 0
	{
	 if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0)
	 {
	  if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { return state("FireSuccess"); }
	  else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { return state("FireSuccess"); }
      else { return state("FireSuccess"); }
	  return state("");
	 }
	 else
	 {
	  if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2)
	  {
	   if (CountInv("Cell",AAPTR_PLAYER1) >= 24) { return state("FireSuccess"); } else { return state("DeSelect"); }
	   return state("");
	  }
	  else
	  if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1)
	  {
	   if (CountInv("Cell",AAPTR_PLAYER1) >= 32) { return state("FireSuccess"); } else { return state("DeSelect"); }
	   return state("");
	  }
	  else
	  {
	   if (CountInv("Cell",AAPTR_PLAYER1) >= 40) { return state("FireSuccess"); } else { return state("DeSelect"); }
	   return state("");
	  }
      return state("");
	 }
	}
  FireSuccess:
    // 60/50/40 tics
    BFGG A 20 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(14); }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(17); }
	 A_BFGSound;
	}
    BFGG B 10 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(6); }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(8); }
	 A_GunFlash("Flash");
	}
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("BFGBallPlayer",15, 0, 0, 0, 0, 0);
      A_FireCustomMissile("BFGBallPlayer",7.5, 0, 0, 0, 0, 7.5);
      A_FireCustomMissile("BFGBallPlayer",7.5, 0, 0, 0, 0, -7.5);
      A_FireCustomMissile("BFGBallPlayer", 0, 0, 0, 0, 0, 0);
      A_FireCustomMissile("BFGBallPlayer",-7.5, 0, 0, 0, 0, -7.5);
      A_FireCustomMissile("BFGBallPlayer",-7.5, 0, 0, 0, 0, 7.5);
      A_FireCustomMissile("BFGBallPlayer",-15, 0, 0, 0, 0, 0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("BFGBallPlayer",15, 0, 0, 0, 0, 0);
      A_FireCustomMissile("BFGBallPlayer", 0, 0, 0, 0, 0, 0);
      A_FireCustomMissile("BFGBallPlayer",-15, 0, 0, 0, 0, 0);
	 }
	 else
	 {
      A_FireCustomMissile("BFGBallPlayer", 0, 0, 0, 0, 0, 0);
	 }
	}
    BFGG B 10 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) 
	 { 
	  A_SetTics(6); 
	  if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",24,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
	 }
	 else 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) 
	 { 
	  A_SetTics(8); 
	  if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",32,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
	 }
	 else
	 {
	  if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",40,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
	 }
	}
    BFGG B 20 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(14); }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(17); }
	 A_ReFire;
	}
    Goto Ready

  Flash:
    // 17/14/11 tics
    BFGF A 11 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(7); }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(9); }
	 A_Light1;
	}
    BFGF B 6 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(4); }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(5); }
	 A_Light2;
	}
    Goto LightDone

  AltFlash:
    // 49/40/41 tics
    BFGF A 32 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(20); }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(26); }
	 A_Light1;
	}
    BFGF B 17 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(11); }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(14); }
	 A_Light2;
	}
    Goto LightDone
	
  AltFire:
    TNT1 A 0
	{
	 if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0)
	 {
	  if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { return state("AltFireSuccess"); }
	  else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { return state("AltFireSuccess"); }
      else { return state("AltFireSuccess"); }
	  return state("");
	 }
	 else
	 {
	  if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2)
	  {
	   if (CountInv("Cell",AAPTR_PLAYER1) >= 24) { return state("AltFireSuccess"); } else { return state("DeSelect"); }
	   return state("");
	  }
	  else
	  if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1)
	  {
	   if (CountInv("Cell",AAPTR_PLAYER1) >= 32) { return state("AltFireSuccess"); } else { return state("DeSelect"); }
	   return state("");
	  }
	  else
	  {
	   if (CountInv("Cell",AAPTR_PLAYER1) >= 40) { return state("AltFireSuccess"); } else { return state("DeSelect"); }
	   return state("");
	  }
      return state("");
	 }
	}
  AltFireSuccess:
    // 43/35/27 tics [2 firing]
    TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckBFG2704") == 0,"Ready")
    BFGG A 14 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(8); }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(11); }
	 A_BFGSound;
	}
    BFGG B 7 
	{
	 A_GunFlash("AltFlash");
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) 
	 { 
	  A_SetTics(4); 
      A_GiveInventory("BFG2704Array",28,AAPTR_PLAYER1);
	  if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",24,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
	 }
	 else 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) 
	 { 
	  A_SetTics(5); 
      A_GiveInventory("BFG2704Array",24,AAPTR_PLAYER1);
	  if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",32,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
	 }
	 else
	 {
      A_GiveInventory("BFG2704Array",20,AAPTR_PLAYER1);
	  if (CountInv("RandomInfiniteAmmo",AAPTR_PLAYER1) > 0) { } else { A_TakeInventory("Cell",40,TIF_NOTAKEINFINITE,AAPTR_PLAYER1); } 
	 }
	}
    TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
  AltFireNormal:
    BFGG B 0 A_TakeInventory("BFG2704Array",1,0,AAPTR_PLAYER1)
    BFGG B 1
	{
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10)+15,0,0,0,0,random(-10,10));
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10)+7.5,0,0,0,0,random(-10,10)+7.5);
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10)+7.5,0,0,0,0,random(-10,10)-7.5);
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10),0,0,0,0,random(-10,10));
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10)-7.5,0,0,0,0,random(-10,10)-7.5);
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10)-7.5,0,0,0,0,random(-10,10)+7.5);
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10)-15,0,0,0,0,random(-10,10));
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10)+15,0,0,0,0,random(-10,10));
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10),0,0,0,0,random(-10,10));
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10)-15,0,0,0,0,random(-10,10));
	 }
	 else
	 {
      A_FireCustomMissile("PlasmaBall1Player",random(-10,10),0,0,0,0,random(-10,10));
	 }
	}
    BFGG B 1
	{
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10)+15,0,0,0,0,random(-10,10));
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10)+7.5,0,0,0,0,random(-10,10)+7.5);
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10)+7.5,0,0,0,0,random(-10,10)-7.5);
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10),0,0,0,0,random(-10,10));
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10)-7.5,0,0,0,0,random(-10,10)-7.5);
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10)-7.5,0,0,0,0,random(-10,10)+7.5);
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10)-15,0,0,0,0,random(-10,10));
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10)+15,0,0,0,0,random(-10,10));
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10),0,0,0,0,random(-10,10));
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10)-15,0,0,0,0,random(-10,10));
	 }
	 else
	 {
      A_FireCustomMissile("PlasmaBall2Player",random(-10,10),0,0,0,0,random(-10,10));
	 }
	}
    BFGG B 0 A_JumpIfInventory("BFG2704Array", 1, "AltFireNormal")
    goto AltFireEnd
  AltFireEnd:
    BFGG B 0 A_Light0
    BFGG B 20 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) >= 2) { A_SetTics(14); }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10029) == 1) { A_SetTics(17); }
	 A_ReFire;
	}
    Goto Ready

  }
}
Actor BFG9000Checker : CustomInventory replaces BFG9000
{
  //$Sprite "BFUGA0"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,36)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,208)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)

    TNT1 A 0 A_CheckFlag("DROPPED","FloraDetectedEnd") // Only a natural spawned weapon will drop extra health bonuses [and a tiny chance for a Max Health Bonus or Seed].
    //TNT1 A 0 A_PrintBold("Not Dropped - BFG9000")
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,36)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,208)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)

    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,36)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,208)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)

    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,12)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,24)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,36)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,64)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,68)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,72)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,192)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,208)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,224)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,232)
    TNT1 A 0 A_SpawnItemEx("HealthBonus",random(-12,12),random(-12,12),0,random(-2,2),random(-2,2),random(-2,2),0,0,240)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonus",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,252)

    TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,232)
    TNT1 A 0 A_SpawnItemEx("MaxHealthBonusREAL",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,232)
    TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,236)
    TNT1 A 0 A_SpawnItemEx("RandomSeedDropForcedAlways",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,236)
    TNT1 A 0 A_SpawnItemEx("Backpack",random(-3,3),random(-3,3),0,random(-1,1),random(-1,1),random(-1,1),0,0,192)

   FloraDetectedEnd:
    TNT1 A 0 
    TNT1 A 0 A_SpawnItemEx("DiarisLongBow",0,0,0,0,0,0,0,SXF_TRANSFERAMBUSHFLAG | SXF_NOCHECKPOSITION | SXF_TRANSFERSPECIAL,224)
	TNT1 A 0 { if (random(1,256) == 1) { A_SpawnItemEx("SapphireWandNew",-12,0,0,0,0,0,0,0,0); } }
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    TNT1 A 0 A_SpawnItemEx("BFG90002",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop
  }
}

Actor ClipNew : Clip // replaces Clip
{
  Inventory.Pickupsound "getbulletclip"
  Inventory.PickupMessage "Picked up \cua clip of bullets\c-!"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0
	{
	 if (random(1,256) <= 3)
	 {
      A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0);
	 }
	 if (random(1,256) <= 128)
	 {
      A_SpawnItemEx("DoomSpellMana",0,0,0,0,0,0,0,0,0);
	 }
     A_FadeOut(1.0);
	}
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    CLIP A -1
    loop
  }
}

actor ClipSpawner replaces Clip
{
  //$Sprite "CLIPA0"
  Radius 16
  Height 16
  Scale 1
  RenderStyle None
  Alpha 0
  +NOTIMEFREEZE
  States
  {
   Spawn:
    TNT1 A 0
    TNT1 A 0 A_SpawnItemEx("ClipNew",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_SpawnItemEx("ClipNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("ClipNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,204)
    TNT1 A 0 A_SpawnItemEx("ClipNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,243)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,40)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,202)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,242)
   Idle:
    TNT1 A 0
    stop
  }
}

Actor ClipBoxNew : ClipBox // replaces ClipBox
{
  Inventory.Pickupsound "getbulletbox"
  Inventory.PickupMessage "Picked up \cua box of bullets\c-!"
  States
  {
   FloraDetected: // bonus will be turned into something else
    TNT1 A 0
	{
	 if (random(1,256) <= 3)
	 {
      A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0);
	 }
	 if (random(1,256) <= 128)
	 {
      A_SpawnItemEx("DoomSpellMana",0,0,0,0,0,0,0,0,0);
	 }
     A_FadeOut(1.0);
	}
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    AMMO A -1
    loop
  }
}

actor ClipBoxSpawner replaces ClipBox
{
  //$Sprite "AMMOA0"
  Radius 16
  Height 16
  Scale 1
  RenderStyle None
  Alpha 0
  +NOTIMEFREEZE
  States
  {
   Spawn:
    TNT1 A 0
    TNT1 A 0 A_SpawnItemEx("ClipBoxNew",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_SpawnItemEx("ClipBoxNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("ClipBoxNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,204)
    TNT1 A 0 A_SpawnItemEx("ClipBoxNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,243)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,40)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,202)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,242)
   Idle:
    TNT1 A 0
    stop
  }
}

Actor ShellNew : Shell // replaces Shell
{
  Inventory.Pickupsound "getfourshells"
  Inventory.PickupMessage "Picked up \cusome shotgun shells\c-!"
  States
  {
   SpawnDiarisQuiver:
    TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnDiarisArrow:
    TNT1 A 0 A_Jump(6, "SpawnDiarisQuiver")
    TNT1 A 0 A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnMedMana:
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_Jump(6, "SpawnDiarisArrow")
    TNT1 A 0 A_Jump(3, "SpawnMedMana")
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    SHEL A -1
    loop
  }
}

actor ShellSpawner replaces Shell
{
  //$Sprite "SHELA0"
  Radius 16
  Height 16
  Scale 1
  RenderStyle None
  Alpha 0
  +NOTIMEFREEZE
  States
  {
   Spawn:
    TNT1 A 0
    TNT1 A 0 A_SpawnItemEx("ShellNew",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_SpawnItemEx("ShellNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("ShellNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,204)
    TNT1 A 0 A_SpawnItemEx("ShellNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,252)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,40)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,202)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,242)
   Idle:
    TNT1 A 0
    stop
  }
}

Actor ShellBoxNew : ShellBox // replaces ShellBox
{
  Inventory.Pickupsound "getshellbox"
  Inventory.PickupMessage "Picked up a \cubox of shotgun shells\c-!"
  States
  {
   SpawnDiarisQuiver:
    TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnDiarisArrow:
    TNT1 A 0 A_Jump(12, "SpawnDiarisQuiver")
    TNT1 A 0 A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnHighMana:
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_Jump(12, "SpawnDiarisArrow")
    TNT1 A 0 A_Jump(3, "SpawnHighMana")
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    SBOX A -1
    loop
  }
}

actor ShellBoxSpawner replaces ShellBox
{
  //$Sprite "SBOXA0"
  Radius 16
  Height 16
  Scale 1
  RenderStyle None
  Alpha 0
  +NOTIMEFREEZE
  States
  {
   Spawn:
    TNT1 A 0
    TNT1 A 0 A_SpawnItemEx("ShellBoxNew",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_SpawnItemEx("ShellBoxNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("ShellBoxNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,204)
    TNT1 A 0 A_SpawnItemEx("ShellBoxNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,252)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,40)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,202)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,242)
   Idle:
    TNT1 A 0
    stop
  }
}

Actor RocketAmmoNew : RocketAmmo // replaces RocketAmmo
{
  Inventory.Pickupsound "getsinglerocket"
  Inventory.PickupMessage "Picked up \cua single rocket\c-!"
  States
  {
   SpawnDiarisQuiver:
    TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnDiarisArrow:
    TNT1 A 0 A_Jump(6, "SpawnDiarisQuiver")
    TNT1 A 0 A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnMedMana:
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,0,0,0,0,0,0)
	TNT1 A 0
	{
	 if (random(1,256) <= 112) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 37) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	}
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_Jump(6, "SpawnDiarisArrow")
    TNT1 A 0 A_Jump(3, "SpawnMedMana")
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,0,0,0,0,0,0)
	TNT1 A 0
	{
	 if (random(1,256) <= 72) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 24) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	}
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    ROCK A -1
    loop
  }
}

actor RocketSpawner replaces RocketAmmo
{
  //$Sprite "ROCKA0"
  Radius 16
  Height 16
  Scale 1
  RenderStyle None
  Alpha 0
  +NOTIMEFREEZE
  States
  {
   Spawn:
    TNT1 A 0
    TNT1 A 0 A_SpawnItemEx("RocketAmmoNew",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_SpawnItemEx("RocketAmmoNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("RocketAmmoNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,204)
    TNT1 A 0 A_SpawnItemEx("RocketAmmoNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,252)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,56)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,206)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,243)
   Idle:
    TNT1 A 0
    stop
  }
}

Actor RocketBoxNew : RocketBox // replaces RocketBox
{
  Inventory.Pickupsound "getrocketbox"
  Inventory.PickupMessage "Picked up \cua box of rockets\c-!"
  States
  {
   SpawnDiarisQuiver:
    TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnDiarisArrow:
    TNT1 A 0 A_Jump(12, "SpawnDiarisQuiver")
    TNT1 A 0 A_SpawnItemEx("DiarisArrow",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnHighMana:
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0)
	TNT1 A 0
	{
	 if (random(1,256) <= 128) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 43) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 126) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 42) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 112) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 37) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 72) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 24) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	}
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_Jump(12, "SpawnDiarisArrow")
    TNT1 A 0 A_Jump(3, "SpawnHighMana")
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,0,0,0,0,0,0)
	TNT1 A 0
	{
	 if (random(1,256) <= 64) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 21) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 63) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 21) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 56) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 19) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 36) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	 if (random(1,256) <= 12) { A_SpawnItemEx("RockBombShard",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,0); }
	}
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    BROK A -1
    loop
  }
}

actor RocketBoxSpawner replaces RocketBox
{
  //$Sprite "BROKA0"
  Radius 16
  Height 16
  Scale 1
  RenderStyle None
  Alpha 0
  +NOTIMEFREEZE
  States
  {
   Spawn:
    TNT1 A 0
    TNT1 A 0 A_SpawnItemEx("RocketBoxNew",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_SpawnItemEx("RocketBoxNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("RocketBoxNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,204)
    TNT1 A 0 A_SpawnItemEx("RocketBoxNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,252)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,56)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,206)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,243)
   Idle:
    TNT1 A 0
    stop
  }
}

Actor CellNew : Cell // replaces Cell
{
  Inventory.Pickupsound "getsmallcells"
  Inventory.PickupMessage "Picked up \cua small energy cell\c-!"
  States
  {
   SpawnDiarisQuiver:
    TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnDiarisArrow:
    TNT1 A 0 A_Jump(6, "SpawnDiarisQuiver")
    TNT1 A 0 A_SpawnItemEx("DiarisArrow",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnMedMana:
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_Jump(6, "SpawnDiarisArrow")
    TNT1 A 0 A_Jump(3, "SpawnMedMana")
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    CELL A -1
    loop
  }
}

actor CellSpawner replaces Cell
{
  //$Sprite "CELLA0"
  Radius 16
  Height 16
  Scale 1
  RenderStyle None
  Alpha 0
  +NOTIMEFREEZE
  States
  {
   Spawn:
    TNT1 A 0
    TNT1 A 0 A_SpawnItemEx("CellNew",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_SpawnItemEx("CellNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("CellNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,204)
    TNT1 A 0 A_SpawnItemEx("CellNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,252)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,72)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,210)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,245)
   Idle:
    TNT1 A 0
    stop
  }
}

Actor CellPackNew : CellPack // replaces CellPack
{
  Inventory.Pickupsound "getcellpack"
  Inventory.PickupMessage "Picked up \cua large energy cell\c-!"
  States
  {
   SpawnDiarisQuiver:
    TNT1 A 0 A_SpawnItemEx("DiarisArrowQuiver",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnDiarisArrow:
    TNT1 A 0 A_Jump(12, "SpawnDiarisQuiver")
    TNT1 A 0 A_SpawnItemEx("DiarisArrow",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   SpawnHighMana:
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   FloraDetected: // bonus will be turned into something else
    TNT1 A 0 A_Jump(12, "SpawnDiarisArrow")
    TNT1 A 0 A_Jump(3, "SpawnHighMana")
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,0)
    TNT1 A 0 A_FadeOut(1.0)
    Loop

   Spawn:
    TNT1 A 0 NoDelay A_JumpIfInventory("FloraInPlay", 1, "FloraDetected", AAPTR_PLAYER1)
   Idle:
    CELP A -1
    loop
  }
}

actor CellPackSpawner replaces CellPack
{
  //$Sprite "CELPA0"
  Radius 16
  Height 16
  Scale 1
  RenderStyle None
  Alpha 0
  +NOTIMEFREEZE
  States
  {
   Spawn:
    TNT1 A 0
    TNT1 A 0 A_SpawnItemEx("CellPackNew",0,0,0,0,0,0,0,0,0)
    TNT1 A 0 A_SpawnItemEx("CellPackNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,48)
    TNT1 A 0 A_SpawnItemEx("CellPackNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,204)
    TNT1 A 0 A_SpawnItemEx("CellPackNew",0,0,0,random(-2,2),random(-2,2),random(-2,2),0,0,252)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,72)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,210)
    TNT1 A 0 A_SpawnItemEx("DoomSpellMana2",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,245)
   Idle:
    TNT1 A 0
    stop
  }
}

// Diaris Bow Weapon - Magic Weapon #1
actor DiarisHolyArrow : FastProjectile
{
 Scale 0.25
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",18))
 +SPECTRAL
 +MISSILE
 +PIERCEARMOR
 +FORCERADIUSDMG
 +FORCEPAIN
 +NODAMAGETHRUST
 +CANNOTPUSH
 +RIPPER
 DamageType "Holy"
 Alpha 1
 Speed 320
 Radius 4
 Height 4
 FastSpeed 320
 SeeSound "null"
 DeathSound "null"
 decal "BulletChip"
 MissileType "DiarisHolyArrowGlitter1"

 States
 {
  Spawn:
   DIAH A 0 NoDelay
  Idle:
   DIAH A 1
   loop
  Death:
   TNT1 A 0 
   TNT1 A 0 A_Playsound("ArrowHit")
   stop
 }
}

actor DiarisHolyArrow2XDmg : DiarisHolyArrow
{
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",19))
 MissileType "DiarisHolyArrowGlitter2"

 States
 {
  Spawn:
   DIAH A 0 NoDelay
  Idle:
   DIAH A 1
   loop
  Death:
   TNT1 A 0 
   TNT1 A 0 A_Playsound("ArrowHit")
   stop
 }
}

actor DiarisHolyArrow3XDmg : DiarisHolyArrow
{
 Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",20))
 MissileType "DiarisHolyArrowGlitter3"

 States
 {
  Spawn:
   DIAH A 0 NoDelay
  Idle:
   DIAH A 1
   loop
  Death:
   TNT1 A 0 
   TNT1 A 0 A_Playsound("ArrowHit")
   stop
 }
}

actor DiarisHolyArrowGlitter1 : TeleGlitter1
{
 RenderStyle Add
 Alpha 0.333
 Scale 0.5
 States
 {
  Spawn:
   AHGT A 1 BRIGHT A_FadeOut(0.034)
   AHGT A 1 BRIGHT A_FadeOut(0.034)
   AHGT B 1 BRIGHT A_FadeOut(0.034)
   AHGT B 1 BRIGHT A_FadeOut(0.034)
   AHGT C 1 BRIGHT A_FadeOut(0.034)
   AHGT C 1 BRIGHT A_FadeOut(0.034)
   AHGT D 1 BRIGHT A_FadeOut(0.034)
   AHGT D 1 BRIGHT A_FadeOut(0.034)
   AHGT E 1 BRIGHT A_FadeOut(0.034)
   AHGT E 1 BRIGHT A_FadeOut(0.034)
   loop
 }
}

actor DiarisHolyArrowGlitter2 : DiarisHolyArrowGlitter1
{
 RenderStyle Add
 Alpha 0.667
 Scale 1
 States
 {
  Spawn:
   AHGT A 1 BRIGHT A_FadeOut(0.067)
   AHGT A 1 BRIGHT A_FadeOut(0.067)
   AHGT B 1 BRIGHT A_FadeOut(0.067)
   AHGT B 1 BRIGHT A_FadeOut(0.067)
   AHGT C 1 BRIGHT A_FadeOut(0.067)
   AHGT C 1 BRIGHT A_FadeOut(0.067)
   AHGT D 1 BRIGHT A_FadeOut(0.067)
   AHGT D 1 BRIGHT A_FadeOut(0.067)
   AHGT E 1 BRIGHT A_FadeOut(0.067)
   AHGT E 1 BRIGHT A_FadeOut(0.067)
   loop
 }
}

actor DiarisHolyArrowGlitter3 : DiarisHolyArrowGlitter1
{
 RenderStyle Add
 Alpha 1
 Scale 1.5
 States
 {
  Spawn:
   AHGT A 1 BRIGHT A_FadeOut(0.1)
   AHGT A 1 BRIGHT A_FadeOut(0.1)
   AHGT B 1 BRIGHT A_FadeOut(0.1)
   AHGT B 1 BRIGHT A_FadeOut(0.1)
   AHGT C 1 BRIGHT A_FadeOut(0.1)
   AHGT C 1 BRIGHT A_FadeOut(0.1)
   AHGT D 1 BRIGHT A_FadeOut(0.1)
   AHGT D 1 BRIGHT A_FadeOut(0.1)
   AHGT E 1 BRIGHT A_FadeOut(0.1)
   AHGT E 1 BRIGHT A_FadeOut(0.1)
   loop
 }
}

actor DiarisLongBow : FloraWeapon 27328
{
  //$NotAngled
  //$Color 14
  //$Category "DV-DS Weapons/Flora/Normal"
  ConversationID 363 // 345+ are unused by Strife, this is for use in DIALOUxx/SCRIPTxx references
  +WEAPON.NOALERT
  +FLOATBOB
  +NOAUTOAIM
  Scale 0.30
  Inventory.ForbiddenTo FighterPlayer, MagePlayer, ClericPlayer, StrifePlayer, HereticPlayer, DeggarisMontegger, IlluciaHenderShot
  Inventory.PickupMessage "You got the \cjDiaris Longbow\c-!"
  Obituary "%o was purified by %k's \cjDiaris Longbow\c-."
  Tag "Diaris Longbow"
  Weapon.AmmoType1 "DiarisArrow"
  Weapon.AmmoGive 6
  States
  {
  Spawn:
    TNT1 A 0 NoDelay ACS_NamedExecuteAlways("CheckFloraItems",0,0,0,0)
  Idle:
    DIBO A 2
    loop

  User1: // Kick - Diaris Longbow version
    TNT1 A 0
	{
	 if (ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetKickStaminaUse",0),2) == 0) 
	 {
	  if (CountInv("DrawingDiarisBow",AAPTR_PLAYER1) > 0) { return state("Hold"); }
	  return state("Ready"); 
	 }
     return state(""); 
	}
	TNT1 A 0
	{
	 if (random(1,256) >= 253)
	 {
	  if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
	  else
	  {
	   A_AlertMonsters; // Sometimes a swing will be enough to wake up all monsters in the area.
	  }
	 }
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("KickAttackDEFLvl2",1); } else { A_GiveInventory("KickAttackDEFLvl1",1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
	 if (random(1,256) > 64) { A_GiveInventory("KickCritBonus1",1,AAPTR_PLAYER1); } else { A_GiveInventory("KickCritBonus2",1,AAPTR_PLAYER1); }
	 A_GiveInventory("UsingMeleeAttack",1);
	}
	goto KickStart
  KickEnd:
    TNT1 A 0
	{
	 A_TakeInventory("KickCritBonus1",9999);
	 A_TakeInventory("KickCritBonus2",9999);
	 A_TakeInventory("KickAttackDEFLvl1",9999);
	 A_TakeInventory("KickAttackDEFLvl2",9999);
	 A_TakeInventory("MartArtsMaster1",9999);
	 A_TakeInventory("MartArtsMaster2",9999);
	 if (CountInv("DrawingDiarisBow",AAPTR_PLAYER1) > 0) { return state("Hold"); }
	 return state("");
	}
    goto Ready

  Ready: 
    DBOW A 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
    DBOW A 0 A_JumpIfInventory("DiarisArrow",1,1)
    Goto ReadyEmpty
    DBOW A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  ReadyEmpty: 
    DBOW Z 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
    DBOW Z 1 A_WeaponReady(WRF_ALLOWUSER1)
    DBOW Z 0 A_JumpIfInventory("DiarisArrow",1,1)
    Loop
    DBOW A 0
    Goto Ready
  Deselect: 
    DBOW A 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
    DBOW A 0 A_JumpIfInventory("DiarisArrow",1,1)
    Goto DeselectEmpty
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    DBOW A 1 A_Lower
    Loop
  DeselectEmpty: 
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 4) { A_Lower; }
    }
    TNT1 A 0 A_Lower
    DBOW Z 1 A_Lower
    DBOW Z 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
    DBOW Z 0 A_JumpIfInventory("DiarisArrow",1,1)
    Loop
    DBOW A 0
    Goto Deselect
  Select: 
    DBOW A 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
    DBOW A 0 A_JumpIfInventory("DiarisArrow",1,1)
    Goto SelectEmpty
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 4) { A_Raise; }
    }
    DBOW A 0 A_Raise
    DBOW A 1 A_Raise
    Loop
  SelectEmpty: 
    DBOW A 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
    DBOW A 0 A_JumpIfInventory("DiarisArrow",1,1)
    TNT1 A 0 
 	{
 	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 4) { A_Raise; }
    }
    DBOW A 0 A_Raise
    DBOW Z 1 A_Raise
    Loop
    DBOW A 0
    Goto Select

  Fire: 
    DBOW A 0 A_JumpIfInventory("DiarisArrow",1,"FireMain",AAPTR_PLAYER1)
    Goto ReadyEmpty
  FireMain:
    DBOW A 3 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
	}
    DBOW B 3 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
	}
    DBOW C 3 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
	}
    DBOW D 3 
	{
	 A_Playsound("DrawDiarisBow",CHAN_WEAPON);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
	}
    DBOW E 3 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
	}
    DBOW F 3 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
	}
    DBOW G 3 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
	}
	goto Hold

  Hold:
    DBOW H 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
     A_GiveInventory("DrawingDiarisBow",1);
	 ACS_NamedExecuteAlways("DrawBow",0,1,0,0); // Executes the script to slow you down based on your bow-level
     A_WeaponReady(WRF_NOFIRE|WRF_ALLOWUSER1|WRF_DISABLESWITCH);
	}
    DBOW H 0 A_JumpIf(ACS_NamedExecuteWithResult("BowAntics") == 0, "ReleaseArrow")
    DBOW H 0 A_JumpIf(ACS_NamedExecuteWithResult("BowAntics") == 1, "DeleaseArrow")
    DBOW H 0 A_JumpIf(ACS_NamedExecuteWithResult("BowAntics") == 2, "Hold")
    loop

  ReleaseArrow:
    DBOW I 0
	{
	 A_Playsound("BowFired",CHAN_WEAPON);
	 ACS_NamedExecuteAlways("DrawBow",0,0,0,0);
     A_TakeInventory("DrawingDiarisBow",9999);
	 A_TakeInventory("DiarisArrow",1);
	}
    DBOW I 0 A_Jump(224,"HolyNormalShot")
    DBOW I 0 A_Jump(192,"HolyDoubleDmgShot")
    goto HolyTripleDmgShot

  DeleaseArrow:
    DBOW G 3
	{
	 A_TakeInventory("DrawingDiarisBow",9999);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
	}
    DBOW F 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
	}
    DBOW E 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
	}
    DBOW D 3
	{
	 A_Playsound("DrawDiarisBow",CHAN_WEAPON);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
	}
    DBOW I 0 ACS_NamedExecuteAlways("DrawBow",0,0,0,0)
    DBOW C 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
	}
    DBOW B 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
	}
    DBOW A 3 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(1); }
	}
    Goto Ready

  HolyNormalShot:
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("DiarisHolyArrow",15,0,0,0,0,0); // Left
      A_FireCustomMissile("DiarisHolyArrow",7.5,0,0,0,0,7.5); // Left-Top
      A_FireCustomMissile("DiarisHolyArrow",7.5,0,0,0,0,-7.5); // Left-Bottom
      A_FireCustomMissile("DiarisHolyArrow",0,0,0,0,0,0); // Center
      A_FireCustomMissile("DiarisHolyArrow",-7.5,0,-0,0,0,-7.5); // Right-Bottom
      A_FireCustomMissile("DiarisHolyArrow",-7.5,0,0,0,0,7.5); // Right-Top
      A_FireCustomMissile("DiarisHolyArrow",-15,0,0,0,0,0); // Right
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("DiarisHolyArrow",15,0,0,0,0,0); // Left
      A_FireCustomMissile("DiarisHolyArrow",0,0,0,0,0,0); // Center
      A_FireCustomMissile("DiarisHolyArrow",-15,0,0,0,0,0); // Right
	 }
	 else
	 {
      A_FireCustomMissile("DiarisHolyArrow",0,0,0,0);
	 }
	}
    goto EndShot

  HolyDoubleDmgShot:
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("DiarisHolyArrow2XDmg",15,0,0,0,0,0); // Left
      A_FireCustomMissile("DiarisHolyArrow2XDmg",7.5,0,0,0,0,7.5); // Left-Top
      A_FireCustomMissile("DiarisHolyArrow2XDmg",7.5,0,0,0,0,-7.5); // Left-Bottom
      A_FireCustomMissile("DiarisHolyArrow2XDmg",0,0,0,0,0,0); // Center
      A_FireCustomMissile("DiarisHolyArrow2XDmg",-7.5,0,-0,0,0,-7.5); // Right-Bottom
      A_FireCustomMissile("DiarisHolyArrow2XDmg",-7.5,0,0,0,0,7.5); // Right-Top
      A_FireCustomMissile("DiarisHolyArrow2XDmg",-15,0,0,0,0,0); // Right
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("DiarisHolyArrow2XDmg",15,0,0,0,0,0); // Left
      A_FireCustomMissile("DiarisHolyArrow2XDmg",0,0,0,0,0,0); // Center
      A_FireCustomMissile("DiarisHolyArrow2XDmg",-15,0,0,0,0,0); // Right
	 }
	 else
	 {
      A_FireCustomMissile("DiarisHolyArrow2XDmg",0,0,0,0);
	 }
	}
    goto EndShot

  HolyTripleDmgShot:
    TNT1 A 0
    {
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("DiarisHolyArrow3XDmg",15,0,0,0,0,0); // Left
      A_FireCustomMissile("DiarisHolyArrow3XDmg",7.5,0,0,0,0,7.5); // Left-Top
      A_FireCustomMissile("DiarisHolyArrow3XDmg",7.5,0,0,0,0,-7.5); // Left-Bottom
      A_FireCustomMissile("DiarisHolyArrow3XDmg",0,0,0,0,0,0); // Center
      A_FireCustomMissile("DiarisHolyArrow3XDmg",-7.5,0,-0,0,0,-7.5); // Right-Bottom
      A_FireCustomMissile("DiarisHolyArrow3XDmg",-7.5,0,0,0,0,7.5); // Right-Top
      A_FireCustomMissile("DiarisHolyArrow3XDmg",-15,0,0,0,0,0); // Right
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("DiarisHolyArrow3XDmg",15,0,0,0,0,0); // Left
      A_FireCustomMissile("DiarisHolyArrow3XDmg",0,0,0,0,0,0); // Center
      A_FireCustomMissile("DiarisHolyArrow3XDmg",-15,0,0,0,0,0); // Right
	 }
	 else
	 {
      A_FireCustomMissile("DiarisHolyArrow3XDmg",0,0,0,0);
	 }
	}
    goto EndShot

  EndShot:
    DBOW I 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(3); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(2); }
	 if (random(1,256) <= 4) { A_AlertMonsters; }
	}
    DBOW I 12
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(11); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 2) { A_SetTics(10); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(9); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 4) { A_SetTics(8); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(7); }
	}
    Goto Ready
  }
}

// Magic Boomerrang Weapon - Magic Weapon #2
// TODO


// Imp's Claw Weapon - Hellcore Weapon #1
Actor DoomImpBall-Claw : DoomImpBall 
{
 +SPECTRAL
 DamageType "ImpClaw" 
 States
 {
  Spawn:
    BAL1 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AB 4 Bright
    Loop
 }
}
Actor DoomImpBallCrisis-Claw : DoomImpBallCrisis 
{
 +SPECTRAL
 DamageType "ImpClaw" 
 States
 {
  Spawn:
    BAL1 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",96) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright A_SpawnItemEx("DoomImpBallCrisisParticle",0,0,0,0,0,1.28)
    Loop
 }
}

actor ImpClaw : FloraWeapon
{
   //$Sprite "HLC2A0"
   Scale 0.625
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Imp's Claw!"
   Tag "Imp's Claw"
   States
   {
    Spawn:
      HLC2 A 1 bright NoDelay ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,0,0,0)
      Loop
    See:
    Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
    Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
    Fire: 
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("imp/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,100,1,0); // +1.0% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) 
	   { 
	    A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); 
	   } 
	   else 
	   {
	    A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1);
  	    if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } 
	   }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DoomImpBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("DoomImpBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("DoomImpBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("DoomImpBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("DoomImpBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("DoomImpBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("DoomImpBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("DoomImpBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("DoomImpBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("DoomImpBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("DoomImpBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("DoomImpBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("DoomImpBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("DoomImpBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DoomImpBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("DoomImpBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("DoomImpBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("DoomImpBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("DoomImpBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("DoomImpBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("DoomImpBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("DoomImpBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready
   } 
}
actor ImpClawCI : CustomInventory 32222
{
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   //$Sprite "HLC2A0"
   Tag "Imp's Claw: [Hellcore] Launches Imp Fireballs"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Imp's Claw!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,0,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,0,0,0)
    SpawnLoop:
      HLC2 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,0,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("ImpClaw", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,1,0,0)
      Stop
   }
}

// Dark Imp's Claw Weapon - Hellcore Weapon #2 [placeholder sprites]
Actor DarkSeeker-Claw : DarkSeeker 
{
 +SPECTRAL DamageType
 "DarkImpClaw" 
 States
 {
   Spawn:
    DKB1 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
   Idle:
    "####" A 2 Bright A_SeekerMissile (5,10)
    "####" ABB 2 Bright
    Loop
 }
}
Actor DarkSeekerCrisis-Claw : DarkSeekerCrisis 
{
 +SPECTRAL DamageType
 "DarkImpClaw" 
  States
  {
  Spawn:
    BAL4 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",97) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" A 0 Bright A_SpawnItemEx("DarkSeekerCrisisParticle",0,0,0,0,0,1.28)
    "####" A 2 Bright A_SeekerMissile (10,20)
    "####" ABB 2 Bright A_SpawnItemEx("DarkSeekerCrisisParticle",0,0,0,0,0,1.28)
    "####" A 2 Bright
    Loop
  }
}
actor DarkImpClaw : FloraWeapon
{
   //$Sprite "HLC2B0"
   Scale 0.625
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Tag "Dark Imp's Claw"
   Inventory.PickupMessage "You got the Dark Imp's Claw!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
    SpawnLoop:
      HLC2 B 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
      Loop
    See:
    Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
    Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop

    Fire: 
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("imp/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,250,1,0); // +2.5% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DarkSeekerCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("DarkSeekerCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("DarkSeekerCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("DarkSeekerCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("DarkSeekerCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("DarkSeekerCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("DarkSeekerCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("DarkSeeker-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("DarkSeeker-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("DarkSeeker-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("DarkSeeker-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("DarkSeeker-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("DarkSeeker-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("DarkSeeker-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DarkSeekerCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("DarkSeekerCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("DarkSeekerCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("DarkSeeker-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("DarkSeeker-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("DarkSeeker-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("DarkSeekerCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("DarkSeeker-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready
   } 
}
actor DarkImpClawCI : CustomInventory 32223
{
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   //$Sprite "HLC2B0"
   Tag "Dark Imp's Claw: [Hellcore] Launches Dark Imp Fireballs"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Dark Imp's Claw!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
    SpawnLoop:
      HLC2 B 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,1,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("DarkImpClaw", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,2,0,0)
      Stop
   }
}

// Cacodemon's Eye Weapon - Hellcore Weapon #3 [placeholder sprites]
actor CacodemonBall-Claw : CacodemonBall 
{
 +SPECTRAL DamageType
 "CacodemonEye" 
  States
  {
  Spawn:
    BAL2 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    BAL2 AB 4 Bright
    Loop
  }
}
actor CacodemonBallCrisis-Claw : CacodemonBallCrisis 
{
 +SPECTRAL
 DamageType "CacodemonEye" 
  States
  {
  Spawn:
    BAL2 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",98) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright A_SpawnItemEx("CacodemonBallCrisisParticle",0,0,0,0,0,1.28)
    Loop
  }
}
actor CacodemonEye : FloraWeapon
{
   //$Sprite "HLC2C0"
   Scale 0.625
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Cacodemon's Eye!"
   Tag "Cacodemon's Eye"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
    SpawnLoop:
      HLC2 C 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
      Loop
    See:
    Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
    Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
    Fire: 
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("caco/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,150,1,0); // +1.5% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("CacodemonBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("CacodemonBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("CacodemonBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("CacodemonBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("CacodemonBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("CacodemonBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("CacodemonBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("CacodemonBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("CacodemonBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("CacodemonBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("CacodemonBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("CacodemonBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("CacodemonBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("CacodemonBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("CacodemonBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("CacodemonBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("CacodemonBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("CacodemonBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("CacodemonBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("CacodemonBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("CacodemonBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("CacodemonBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready
   } 
}
actor CacodemonEyeCI : CustomInventory 32224
{
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   //$Sprite "HLC2C0"
   Tag "Cacodemon's Eye: [Hellcore] Launches Cacodemon Lightning Balls"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Cacodemon's Eye!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
    SpawnLoop:
      HLC2 C 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,2,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("CacodemonEye", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,3,0,0)
      Stop
   }
}

// Cacolantern's Eye Weapon - Hellcore Weapon #4 [placeholder sprites]
actor CacolanternBall-Claw : CacolanternBall 
{
 +SPECTRAL
 DamageType "CacolanternEye" 
  States
  {
  Spawn:
    BAL8 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    BAL8 AB 4 Bright
	loop
  }	
}
actor CacolanternBallCrisis-Claw : CacolanternBallCrisis 
{
 +SPECTRAL
 DamageType "CacolanternEye" 
  States
  {
  Spawn:
    BAL8 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",99) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright A_SpawnItemEx("CacolanternBallCrisisParticle",0,0,0,0,0,1.28)
    Loop
  }
}
actor CacolanternEye : FloraWeapon
{
   //$Sprite "HLC2D0"
   Tag "Cacolantern's Eye"
   Scale 0.625
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Cacolantern's Eye!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
    SpawnLoop:
      HLC2 D 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
      Loop
    See:
    Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
   Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
   Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
    Fire: 
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("caco/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,200,1,0); // +2% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("CacolanternBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("CacolanternBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("CacolanternBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("CacolanternBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("CacolanternBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("CacolanternBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("CacolanternBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("CacolanternBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("CacolanternBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("CacolanternBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("CacolanternBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("CacolanternBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("CacolanternBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("CacolanternBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("CacolanternBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("CacolanternBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("CacolanternBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("CacolanternBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("CacolanternBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("CacolanternBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("CacolanternBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("CacolanternBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready
   } 
}
actor CacolanternEyeCI : CustomInventory 32225
{
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   //$Sprite "HLC2D0"
   Tag "Cacolantern's Eye: [Hellcore] Launches Cacolantern Lightning Balls"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Cacolantern's Eye!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
    SpawnLoop:
      HLC2 D 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,3,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("CacolanternEye", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,4,0,0)
      Stop
   }
}

// Abaddon's Eye Weapon - Hellcore Weapon #5 [placeholder sprites]
actor AbaddonBall-Claw : AbaddonBall 
{
 +SPECTRAL
 DamageType "AbaddonEye" 
  States
  {
  Spawn:
    BAL3 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    BAL3 AB 4 Bright
	loop
  }
}
actor AbaddonBallCrisis-Claw : AbaddonBallCrisis 
{
 +SPECTRAL
 DamageType "AbaddonEye" 
  States
  {
  Spawn:
    BAL3 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",100) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright A_SpawnItemEx("AbaddonBallCrisisParticle",0,0,0,0,0,1.28)
    Loop
  }
}
actor AbaddonEye : FloraWeapon
{
   //$Sprite "HLC2E0"
   Tag "Abaddon's Eye"
   Scale 0.625
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Abaddon's Eye!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
    SpawnLoop:
      HLC2 E 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
      Loop
    See:
    Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
    Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
    Fire: 
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("caco/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,125,1,0); // +1.25% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("AbaddonBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("AbaddonBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("AbaddonBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("AbaddonBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("AbaddonBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("AbaddonBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("AbaddonBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("AbaddonBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("AbaddonBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("AbaddonBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("AbaddonBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("AbaddonBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("AbaddonBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("AbaddonBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("AbaddonBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("AbaddonBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("AbaddonBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("AbaddonBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("AbaddonBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("AbaddonBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("AbaddonBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("AbaddonBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW B 6
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(5); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(4); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(3); }
	  }
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("caco/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,125,1,0); // +1.25% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("AbaddonBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("AbaddonBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("AbaddonBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("AbaddonBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("AbaddonBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("AbaddonBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("AbaddonBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("AbaddonBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("AbaddonBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("AbaddonBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("AbaddonBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("AbaddonBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("AbaddonBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("AbaddonBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("AbaddonBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("AbaddonBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("AbaddonBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("AbaddonBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("AbaddonBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("AbaddonBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("AbaddonBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("AbaddonBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready
   } 
}
actor AbaddonEyeCI : CustomInventory 32226
{
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   //$Sprite "HLC2E0"
   Tag "Abaddon's Eye: [Hellcore] Launches Abaddon Fireballs"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Abaddon's Eye!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
    SpawnLoop:
      HLC2 E 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,4,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("AbaddonEye", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,5,0,0)
      Stop
   }
}


// Hell Knight's Fist Weapon - Hellcore Weapon #6 [placeholder sprites]
Actor HellKnightBall-Claw : HellKnightBall 
{
 +SPECTRAL
 DamageType "KnightFist" 
  States
  {
  Spawn:
    BAL7 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright
    Loop
  }
}
Actor HellKnightBallCrisis-Claw : HellKnightBallCrisis 
{
 +SPECTRAL
 DamageType "KnightFist" 
  States
  {
  Spawn:
    BAL7 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",101) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright A_SpawnItemEx("HellKnightBallCrisisParticle",0,0,0,0,0,1.28)
    Loop
  }
}
actor KnightFist : FloraWeapon
{
   //$Sprite "HLC2F0"
   var int user_theta;
   Tag "Hell Knight's Fist"
   Scale 0.625
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Hell Knight's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
    SpawnLoop:
      HLC2 F 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
      Loop
   See:
   Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
   Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
    Fire: 
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("baron/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,225,1,0); // +2.25% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("HellKnightBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("HellKnightBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("HellKnightBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("HellKnightBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("HellKnightBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("HellKnightBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("HellKnightBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("HellKnightBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("HellKnightBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("HellKnightBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("HellKnightBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("HellKnightBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("HellKnightBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("HellKnightBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("HellKnightBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("HellKnightBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("HellKnightBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("HellKnightBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("HellKnightBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("HellKnightBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("HellKnightBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("HellKnightBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready
   } 
}
actor KnightFistCI : CustomInventory 32227
{
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   //$Sprite "HLC2F0"
   Tag "Hell Knight's Fist: [Hellcore] Launches Hell Knight Plasmaballs"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Hell Knight's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
    SpawnLoop:
      HLC2 F 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,5,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("KnightFist", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,6,0,0)
      Stop
   }
}

// Baron of Hell's Fist Weapon - Hellcore Weapon #7 [placeholder sprites]
Actor BaronOfHellBall-Claw : BaronOfHellBall 
{
 +SPECTRAL
 DamageType "BaronFist" 
  States
  {
  Spawn:
    BAL7 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright
    Loop
  }
}
Actor BaronOfHellBallCrisis-Claw : BaronOfHellBallCrisis 
{
 +SPECTRAL
 DamageType "BaronFist" 
  States
  {
  Spawn:
    BAL7 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",102) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright A_SpawnItemEx("BaronOfHellBallCrisisParticle",0,0,0,0,0,1.28)
    Loop
  }
}
actor BaronFist : FloraWeapon
{
   //$Sprite "HLC2G0"
   Scale 0.625
   Tag "Baron of Hell's Fist"
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Baron of Hell's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
    SpawnLoop:
      HLC2 G 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
      Loop
    See:
    Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
    Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
    Fire: 
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("baron/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,275,1,0); // +2.75% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BaronofHellBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BaronofHellBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BaronofHellBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BaronofHellBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BaronofHellBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BaronofHellBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BaronofHellBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BaronofHellBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BaronofHellBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BaronofHellBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BaronofHellBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BaronofHellBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BaronofHellBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BaronofHellBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BaronofHellBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BaronofHellBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BaronofHellBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BaronofHellBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BaronofHellBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BaronofHellBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("BaronofHellBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("BaronofHellBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready
   } 
}
actor BaronFistCI : CustomInventory 32228
{
   //$Sprite "HLC2G0"
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   Tag "Baron of Hell's Fist: [Hellcore] Launches Baron of Hell Plasmaballs"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Baron of Hell's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
    SpawnLoop:
      HLC2 G 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,6,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("BaronFist", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,7,0,0)
      Stop
   }
}

// Belphegor's Fist Weapon - Hellcore Weapon #8 [placeholder sprites]
Actor BelphegorBall-Claw : BelphegorBall 
{
 +SPECTRAL
 DamageType "BelphegorFist" 
  States
  {
  Spawn:
    BAL7 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright
    Loop
  }
}
Actor BelphegorBallCrisis-Claw : BelphegorBallCrisis 
{
 +SPECTRAL
 DamageType "BelphegorFist" 
  States
  {
  Spawn:
    BAL7 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",103) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright A_SpawnItemEx("BaronOfHellBallCrisisParticle",0,0,0,0,0,1.28)
    Loop
  }
}
actor BelphegorFist : FloraWeapon
{
   //$Sprite "HLC2H0"
   Scale 0.625
   Tag "Belphegor's Fist"
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Belphegor's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
    SpawnLoop:
      HLC2 H 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
      Loop
   See:
   Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
   Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
   Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
   Fire: 
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("baron/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,175,1,0); // +1.50% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BelphegorBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BelphegorBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BelphegorBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BelphegorBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BelphegorBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BelphegorBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BelphegorBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BelphegorBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BelphegorBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BelphegorBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("BelphegorBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("BelphegorBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("baron/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,175,1,0); // +1.50% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BelphegorBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BelphegorBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BelphegorBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BelphegorBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BelphegorBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BelphegorBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BelphegorBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BelphegorBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BelphegorBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BelphegorBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("BelphegorBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("BelphegorBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("baron/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,175,1,0); // +1.50% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BelphegorBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BelphegorBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BelphegorBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BelphegorBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BelphegorBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BelphegorBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BelphegorBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BelphegorBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BelphegorBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BelphegorBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BelphegorBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BelphegorBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("BelphegorBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("BelphegorBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready
   } 
}
actor BelphegorFistCI : CustomInventory 32229
{
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   //$Sprite "HLC2H0"
   Tag "Belphegor's Fist: [Hellcore] Launches Belphegor Plasmaballs"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Belphegor's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
    SpawnLoop:
      HLC2 H 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,7,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("BelphegorFist", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,8,0,0)
      Stop
   }
}

// Bruiser Demon's Fist Weapon - Hellcore Weapon #9 [placeholder sprites]
Actor BruiserBall-Claw : BruiserBall 
{
 +SPECTRAL
 DamageType "BruiserFist" 
  States
  {
  Spawn:
    BRBA A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright A_SpawnItemEx("BruiserBallTrail",0,0,0,0,0,1.28)
    Loop
  }
}
Actor BruiserBallCrisis-Claw : BruiserBallCrisis
{
 +SPECTRAL
 DamageType "BruiserFist" 
  States
  {
  Spawn:
    BRBA A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright
	{
	 A_SpawnItemEx("BruiserBallCrisisParticle",0,0,0,0,0,2.56);
     A_SpawnItemEx("BruiserBallTrail", 0, 0, 0, 0, 0, 0, 0, 128);
	}
    Loop
  }
}
Actor BruiserBall2-Claw : BruiserBall2
{
 +SPECTRAL
 DamageType "BruiserFist" 
  States
  {
  Spawn:
    BRB2 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AB 6 BRIGHT 
    Loop
  }
}
Actor BruiserBall2Crisis-Claw : BruiserBall2Crisis
{
 +SPECTRAL
 DamageType "BruiserFist" 
  States
  {
  Spawn:
    BRB2 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AAABBB 2 Bright A_SpawnItemEx("BruiserBall2CrisisParticle",0,0,0,0,0,1.28)
    Loop
  }
}
Actor BruiserFireSpawner-Claw : BruiserFireSpawner
{
 +SPECTRAL
 DamageType "BruiserFist" 
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    TNT1 A 3 Bright A_CustomMissile("BruiserFire",0,0,0,4) // A_MissileAttack
    TNT1 AA 3
    Loop
  }
}
Actor BruiserFireSpawnerCrisis-Claw : BruiserFireSpawnerCrisis
{
 +SPECTRAL
 DamageType "BruiserFist" 
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",104) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    TNT1 A 3 Bright A_CustomMissile("BruiserFireCrisis",0,0,0,4) // A_MissileAttack
    TNT1 AA 3
    Loop
  }
}
actor BruiserFist : FloraWeapon
{
   //$Sprite "HLC2I0"
   Scale 0.625
   Tag "Bruiser Demon's Fist"
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Bruiser Demon's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
    SpawnLoop:
      HLC2 I 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
      Loop
   See:
   Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
   Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
    Fire:
      CLAW B 4
	  {
	   A_GunFlash;
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,0) == 0, "FireA")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,0) == 1, "FireB")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,0) == 2, "FireC")
      goto FireA
	  
    // Fire Wave[s]
    FireA:
      CLAW B 0 A_Playsound ("baron/attack")
      CLAW B 0 A_Jump(256,"FireALeft","FireARight")
    FireALeft:
      CLAW B 2
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,1,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
       A_SetAngle(angle-40);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle+40);
	  }

      CLAW B 1
	  {
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle-30);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle+30);
	  }
      CLAW B 1
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(0); }
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle-20);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle+20);
	  }
      CLAW B 1
	  {
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle-10);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle+10);
	  }
      CLAW B 1
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(0); }
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle-0);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle+0);
	  }
      CLAW B 1
	  {
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle+10);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle-10);
	  }
      CLAW B 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle+20);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle-20);
	  }
      CLAW B 5
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(4); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
	  }
      goto FireAEnd
   FireARight:
      CLAW B 2
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,1,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle+40);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle-40);
	  }
      CLAW B 1
	  {
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle+30);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle-30);
	  }
      CLAW B 1
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(0); }
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle+20);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle-20);
	  }
      CLAW B 1
	  {
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle+10);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle-10);
	  }
      CLAW B 1
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(0); }
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle+0);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle-0);
	  }
      CLAW B 1
	  {
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle-10);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle+10);
	  }
      CLAW B 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,71,0,0); // +0.71% Hellcore Heat, Deal Damage if already above 100% Heat
       A_SetAngle(angle-20);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2Crisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("BruiserBall2-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("BruiserBall2Crisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("BruiserBall2-Claw",0,1,0,0,0,0);
		}
	   }
       A_SetAngle(angle+20);
	  }
      CLAW B 5
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(4); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
	  }
      goto FireAEnd
   FireAEnd:
      CLAW B 5
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(4); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      goto FireEnd

   // Bruiser Blast
   FireB:
      CLAW B 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("baron/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,400,1,0); // +4.0% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BruiserBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BruiserBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BruiserBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BruiserBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BruiserBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BruiserBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BruiserBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BruiserBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BruiserBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BruiserBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BruiserBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserBallCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BruiserBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserBall-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("BruiserBallCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("BruiserBall-Claw",0,0,8,0);
		}
	   }
	  }
      CLAW B 10
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(9); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(8); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(7); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(6); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(5); }
	  }
      goto FireEnd

   // Ground Wave
   FireC:
      CLAW B 0 A_Playsound ("baron/attack")
      CLAW B 2
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,250,1,0); // +2.5% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
       A_SetAngle(angle-15);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BruiserFireSpawner-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawner-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BruiserFireSpawner-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BruiserFireSpawner-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawner-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BruiserFireSpawner-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BruiserFireSpawner-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BruiserFireSpawner-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawner-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawner-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("BruiserFireSpawner-Claw",0,0,8,0);
		}
	   }
       A_SetAngle(angle+15);
	  }
      CLAW B 2
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,250,0,0); // +2.5% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
       A_SetAngle(angle-0);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BruiserFireSpawner-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawner-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BruiserFireSpawner-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BruiserFireSpawner-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawner-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BruiserFireSpawner-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BruiserFireSpawner-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BruiserFireSpawner-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawner-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawner-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("BruiserFireSpawner-Claw",0,0,8,0);
		}
	   }
       A_SetAngle(angle-0);
	  }
      CLAW B 2
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,250,0,0); // +2.5% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
       A_SetAngle(angle+15);
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BruiserFireSpawner-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawner-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("BruiserFireSpawner-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("BruiserFireSpawner-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawner-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("BruiserFireSpawner-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("BruiserFireSpawner-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("BruiserFireSpawner-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("BruiserFireSpawner-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("BruiserFireSpawner-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("BruiserFireSpawnerCrisis-Claw",0,0,8,0);
		}
		else
		{
	     A_FireCustomMissile("BruiserFireSpawner-Claw",0,0,8,0);
		}
	   }
       A_SetAngle(angle-15);
	  }
      CLAW B 20
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(18); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(16); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(14); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(12); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(10); }
	  }
      goto FireEnd

    FireEnd:
      CLAW CDDEEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready

    AltFire:
      CLAW A 12 ACS_NamedExecuteAlways("HellcoreFireMode",0,0,0)
      Goto Ready
   } 
}
actor BruiserFistCI : CustomInventory 32230
{
   //$Sprite "HLC2I0"
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   Tag "Bruiser Demon's Fist: [Hellcore] Uses Bruiser Demon attacks [alt-fire selects mode]"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Bruiser Demon's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
    SpawnLoop:
      HLC2 I 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,8,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("BruiserFist", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,9,0,0)
      Stop
   }
}

// Archon of Hell's Fist Weapon - Hellcore Weapon #10 [placeholder sprites]
Actor ArchonOfHellBall-Claw : ArchonOfHellBall 
{
 +SPECTRAL
 DamageType "ArchonFist" 
  States
  {
  Spawn:
    BAL7 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright
    Loop
  }
}
Actor ArchonOfHellBallCrisis-Claw : ArchonOfHellBallCrisis 
{
 +SPECTRAL
 DamageType "ArchonFist" 
  States
  {
  Spawn:
    BAL7 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AABB 2 Bright A_SpawnItemEx("ArchonOfHellBallCrisisParticle",0,0,0,0,0,1.28)
    Loop
  }
}
Actor ArchonComet-Claw : ArchonComet 
{
 +SPECTRAL
 DamageType "ArchonFist" 
  States
  {
  Spawn:
    ARCB A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AAAABBBBCCCC 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
    Loop
  }
}
Actor ArchonCometCrisis-Claw : ArchonCometCrisis
{
 +SPECTRAL
 DamageType "ArchonFist" 
  States
  {
  Spawn:
    ARCB A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",105) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" A 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
    "####" AA 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
    "####" A 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
    "####" AA 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
    "####" B 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
    "####" BB 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
    "####" B 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
    "####" BB 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
    "####" C 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
    "####" CC 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
    "####" C 0 Bright A_SpawnItemEx("ArchonCometCrisisParticle",0,0,0,0,0,3.84)
    "####" CC 1 Bright A_SpawnItem("ArchonCometTrail",0,0)
    Loop
  }
}
actor ArchonFist : FloraWeapon
{
   //$Sprite "HLC2J0"
   Scale 0.625
   Tag "Archon of Hell's Fist"
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Archon of Hell's Fist!"
   States
   {
    Spawn:
      HLC2 J 1 bright NoDelay ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,9,0,0)
      Loop
    See:
    Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
    Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop

    Fire: 
      TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,1) == 0, "FireA")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,1) == 1, "FireB")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,1) == 2, "FireC")
	  goto FireA

    FireA:
      CLAW B 3
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(2); }
	   A_Playsound ("caco/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,400,1,0); // +4% Hellcore Heat, Deal Damage if already above 100% Heat

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15-4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15+4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5-4,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5+4,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5-4,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5+4,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0-4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0+4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5-4,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5+4,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5-4,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5+4,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15-4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15+4,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("ArchonOfHellBall-Claw",15-4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15+4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5-4,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5+4,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5-4,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5+4,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",0-4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0+4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5-4,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5+4,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5-4,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5+4,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15-4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15+4,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15-4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15+4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0-4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0+4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15-4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15+4,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("ArchonOfHellBall-Claw",15-4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15+4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",0-4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0+4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15-4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15+4,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-4,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",4,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("ArchonOfHellBall-Claw",-4,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBall-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBall-Claw",4,1,0,0,0,0);
		}
	   }
	  }
      Goto FireEnd

    FireB:
      CLAW B 6
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(5); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(4); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
	  }
      CLAW B 3
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(2); }
	   A_Playsound ("caco/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,750,1,0); // +7.5% Hellcore Heat, Deal Damage if already above 100% Heat

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15-6,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15-4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15-2,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15+2,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15+4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15+6,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5-6,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5-4,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5-2,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5+2,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5+4,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5+6,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5-6,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5-4,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5-2,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5+2,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5+4,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",7.5+6,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0-6,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0-4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0-2,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0+2,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0+4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0+6,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5-6,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5-4,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5-2,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5+2,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5+4,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5+6,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5-6,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5-4,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5-2,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5+2,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5+4,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-7.5+6,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15-6,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15-4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15-2,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15+2,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15+4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15+6,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("ArchonOfHellBall-Claw",15-6,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15-4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15-2,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15+2,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15+4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15+6,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5-6,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5-4,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5-2,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5+2,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5+4,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5+6,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5-6,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5-4,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5-2,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5+2,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5+4,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",7.5+6,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",0-6,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0-4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0-2,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0+2,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0+4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0+6,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5-6,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5-4,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5-2,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5+2,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5+4,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5+6,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5-6,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5-4,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5-2,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5+2,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5+4,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",-7.5+6,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15-6,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15-4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15-2,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15+2,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15+4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15+6,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15-6,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15-4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15-2,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15+2,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15+4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",15+6,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0-6,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0-4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0-2,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0+2,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0+4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0+6,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15-6,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15-4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15-2,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15+2,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15+4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-15+6,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("ArchonOfHellBall-Claw",15-6,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15-4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15-2,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15+2,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15+4,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",15+6,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonOfHellBall-Claw",0-6,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0-4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0-2,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0+2,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0+4,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",0+6,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15-2,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15-4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15-6,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15+2,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15+4,0,8,0,0,0); // Right
         A_FireCustomMissile("ArchonOfHellBall-Claw",-15+6,0,8,0,0,0); // Right
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-6,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-4,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",-2,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",2,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",4,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBallCrisis-Claw",6,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("ArchonOfHellBall-Claw",-6,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBall-Claw",-4,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBall-Claw",-2,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBall-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBall-Claw",2,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBall-Claw",4,1,0,0,0,0);
         A_FireCustomMissile("ArchonOfHellBall-Claw",6,1,0,0,0,0);
		}
	   }
	  }
      Goto FireEnd

    FireC:
      CLAW B 10
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 1) { A_SetTics(9); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 2) { A_SetTics(8); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 3) { A_SetTics(7); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 4) { A_SetTics(6); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10031) >= 5) { A_SetTics(5); }
	  }
      CLAW B 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("weapons/firbfi");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,650,1,0); // +6.5% Hellcore Heat, Deal Damage if already above 100% Heat

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("ArchonCometCrisis-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonCometCrisis-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonCometCrisis-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonCometCrisis-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonCometCrisis-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonCometCrisis-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonCometCrisis-Claw",-15,0,8,0,0,0); // Right
		}
		else
		{
         A_FireCustomMissile("ArchonComet-Claw",15,0,8,0,0,0); // Left
         A_FireCustomMissile("ArchonComet-Claw",7.5,0,8,0,0,7.5); // Left-Top
         A_FireCustomMissile("ArchonComet-Claw",7.5,0,8,0,0,-7.5); // Left-Bottom
         A_FireCustomMissile("ArchonComet-Claw",0,0,8,0,0,0); // Center
         A_FireCustomMissile("ArchonComet-Claw",-7.5,0,8,0,0,-7.5); // Right-Bottom
         A_FireCustomMissile("ArchonComet-Claw",-7.5,0,8,0,0,7.5); // Right-Top
         A_FireCustomMissile("ArchonComet-Claw",-15,0,8,0,0,0); // Right
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("ArchonCometCrisis-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("ArchonCometCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("ArchonCometCrisis-Claw",-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("ArchonComet-Claw",15,1,0,0,0,0);
         A_FireCustomMissile("ArchonComet-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("ArchonComet-Claw",-15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("ArchonCometCrisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("ArchonComet-Claw",0,1,0,0,0,0);
		}
	   }
	  }
      Goto FireEnd

    FireEnd:
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready

    AltFire:
      CLAW A 10 ACS_NamedExecuteAlways("HellcoreFireMode",0,0,1)
      Goto Ready
   } 
}
actor ArchonFistCI : CustomInventory 32231
{
   //$Sprite "HLC2J0"
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   Tag "Archon of Hell's Fist: [Hellcore] Uses Archon of Hell attacks [alt-fire selects mode]"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Archon of Hell's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,9,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,9,0,0)
    SpawnLoop:
      HLC2 J 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,9,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("ArchonFist", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,10,0,0)
      Stop
   }
}

// Pyro Demon's Fist Weapon - Hellcore Weapon #11 [placeholder sprites]
Actor FireShot-Claw : FireShot 
{
 +SPECTRAL
 DamageType "PyroFist" 
  States
  {
  Spawn:
    FSHT A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" AAAAAA 1 Bright A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
    Loop
  }
}
Actor FireShotCrisis-Claw : FireShotCrisis
{
 +SPECTRAL
 DamageType "PyroFist" 
  States
  {
  Spawn:
    FSHT A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" A 0 Bright A_SpawnItemEx("FireShotCrisisParticle",0,0,0,0,0,3.84)
    "####" AA 1 Bright A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
    "####" A 0 Bright A_SpawnItemEx("FireShotCrisisParticle",0,0,0,0,0,3.84)
    "####" AA 1 Bright A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
    "####" A 0 Bright A_SpawnItemEx("FireShotCrisisParticle",0,0,0,0,0,3.84)
    "####" AA 1 Bright A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
    Loop
  }
}
Actor PyroBall-Claw : PyroBall
{
 +SPECTRAL
 DamageType "PyroFist" 
  States
  {
  Spawn:
    RBAL A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" AAAABBBB 1 BRIGHT 
    Loop
  }
}
Actor PyroBallCrisis-Claw : PyroBallCrisis
{
 +SPECTRAL
 DamageType "PyroFist" 
  States
  {
  Spawn:
    RBAL A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" A 0 Bright A_SpawnItemEx("PyroBallCrisisParticle",0,0,0,0,0,1.28)
    "####" AA 1 BRIGHT 
    "####" A 0 Bright A_SpawnItemEx("PyroBallCrisisParticle",0,0,0,0,0,1.28)
    "####" AA 1 BRIGHT 
    "####" B 0 Bright A_SpawnItemEx("PyroBallCrisisParticle",0,0,0,0,0,1.28)
    "####" BB 1 BRIGHT 
    "####" B 0 Bright A_SpawnItemEx("PyroBallCrisisParticle",0,0,0,0,0,1.28)
    "####" BB 1 BRIGHT 
    Loop
  }
}
Actor PyroBlast-Claw : PyroBlast
{
 +SPECTRAL
 DamageType "PyroFist" 
  States
  {
  Spawn:
    SBLL A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" ABCDEFGHIJ 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
    "####" A 0 BRIGHT A_SeekerMissile(0,2)
    Loop
  }
}
Actor PyroBlastCrisis-Claw : PyroBlastCrisis
{
 +SPECTRAL
 DamageType "PyroFist" 
  States
  {
  Spawn:
    SBLL A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
     "####" A 0 Bright A_SpawnItemEx("PyroBlastCrisisParticle",0,0,0,0,0,3.84)
     "####" AB 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
     "####" C 0 Bright A_SpawnItemEx("PyroBlastCrisisParticle",0,0,0,0,0,3.84)
     "####" CD 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
     "####" E 0 Bright A_SpawnItemEx("PyroBlastCrisisParticle",0,0,0,0,0,3.84)
     "####" EF 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
     "####" G 0 Bright A_SpawnItemEx("PyroBlastCrisisParticle",0,0,0,0,0,3.84)
     "####" GH 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
     "####" I 0 Bright A_SpawnItemEx("PyroBlastCrisisParticle",0,0,0,0,0,3.84)
     "####" IJ 1 BRIGHT A_SpawnItemEx("FireTail",0,0,0,0,0,0,0,128)
     "####" A 0 BRIGHT A_SeekerMissile(0,2)
    Loop
  }
}
Actor RainCometNull-Claw : RainCometNull
{
 +SPECTRAL
 DamageType "PyroFist" 
  States
  {
  Spawn:
    RCMN A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" A 0 A_Jump(5,8)
    "####" AAAAAA 1 A_Wander
    "####" A 8 A_CustomMissile("FallingComet",-24,random(0,128),random(0,360),2,random(1,89))
    "####" A 0 Bright A_SetUserVar("user_theta",user_theta+1)
    "####" A 0 Bright A_JumpIf(user_theta==32,"Death")
    Loop
  }
}
Actor RainCometNullCrisis-Claw : RainCometNullCrisis
{
 +SPECTRAL
 DamageType "PyroFist" 
  States
  {
  Spawn:
    RCMN A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" A 0 A_Jump(5,8)
    "####" AAAAAA 1 A_Wander
    "####" A 8 A_CustomMissile("FallingCometCrisis",-24,random(0,128),random(0,360),2,random(1,89))
    "####" A 0 Bright A_SetUserVar("user_theta",user_theta+1)
    "####" A 0 Bright A_JumpIf(user_theta==32,"Death")
    Loop
  }
}
Actor EscapeExplosion-Claw : EscapeExplosion
{
 +SPECTRAL
 DamageType "PyroFist" 
  States
  {
  Spawn:
    NKXP A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" BC 3 BRIGHT
    "####" D 3 BRIGHT A_Explode(50,192,0)
    "####" EFGHIJKLMNOPQRSTUV 3 BRIGHT
    Stop
  }
}
Actor EscapeExplosionCrisis-Claw : EscapeExplosionCrisis
{
 +SPECTRAL
 DamageType "PyroFist" 
  States
  {
  Spawn:
    NKXP A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",106) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	}
  Idle:
    "####" BC 3 BRIGHT
    "####" D 3 BRIGHT A_Explode((50 * ACS_NamedExecuteWithResult("CrisisMultiplier")),192,0)
    "####" EFGHIJKLMNOPQRSTUV 3 BRIGHT
    stop
  }
}
actor PyroFist : FloraWeapon
{
   //$Sprite "HLC2K0"
   Scale 0.625
   Tag "Pyro Demon's Fist"
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Pyro Demon's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
    SpawnLoop:
      HLC2 K 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
      Loop
    See:
    Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
    Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop

    Fire: 
      TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,2) == 0, "FireA")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,2) == 1, "FireB")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,2) == 2, "FireC")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,2) == 3, "FireD")
	  goto FireA

	  // Attack 1: Pyromatic Shot
    FireA:
      CLAW B 3
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(2); }
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,350,1,0); // +3.5% Hellcore Heat, Deal Damage if already above 100% Heat
	   A_Playsound ("caco/attack");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("FireShotCrisis-Claw",-4+15,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",-4+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",-4+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",-4,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",-4-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",-4-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",-4-15,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",0+15,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",0+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",0+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",0-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",0-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",4+15,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",4+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",4+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",4,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",4-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",4-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShotCrisis-Claw",4-15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("FireShot-Claw",-4+15,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",-4+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShot-Claw",-4+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShot-Claw",-4,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",-4-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShot-Claw",-4-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShot-Claw",-4-15,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",0+15,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",0+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShot-Claw",0+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShot-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",0-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShot-Claw",0-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShot-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",4+15,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",4+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShot-Claw",4+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShot-Claw",4,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",4-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("FireShot-Claw",4-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("FireShot-Claw",4-15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("FireShotCrisis-Claw",-4-15,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",-4,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",-4+15,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",0+15,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",4-15,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",4,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",4+15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("FireShot-Claw",-4-15,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",-4,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",-4+15,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",0+15,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",4-15,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",4,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",4+15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("FireShotCrisis-Claw",-4,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("FireShotCrisis-Claw",4,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("FireShot-Claw",-4,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("FireShot-Claw",4,1,0,0,0,0);
		}
	   }
	  }
      CLAW B 12
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(10); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(8); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(6); }
	  }
      goto FireEnd

    // Attack 2: Pyroball
    FireB:
      CLAW B 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,450,1,0); // +4.5% Hellcore Heat, Deal Damage if already above 100% Heat
	   A_Playsound ("caco/attack");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0+15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("PyroBlast-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("PyroBlast-Claw",0+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("PyroBlast-Claw",0+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("PyroBlast-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("PyroBlast-Claw",0-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("PyroBlast-Claw",0-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("PyroBlast-Claw",0+15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0+15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("PyroBlast-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("PyroBlast-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("PyroBlast-Claw",0+15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("PyroBlastCrisis-Claw",0,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("PyroBlast-Claw",0,1,0,0,0,0);
		}
	   }
	  }
      CLAW B 12
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(10); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(8); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(6); }
	  }
      goto FireEnd

    // Attack 3: Pyromatic Firebomb
    FireC:
      CLAW B 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,250,1,0); // +2.5% Hellcore Heat, Deal Damage if already above 100% Heat
	   A_Playsound ("caco/attack");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270+15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("RainCometNull-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",0-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNull-Claw",0-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNull-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",0+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNull-Claw",0+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNull-Claw",0+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",90-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",90-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNull-Claw",90-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNull-Claw",90,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",90+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNull-Claw",90+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNull-Claw",90+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",180-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",180-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNull-Claw",180-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNull-Claw",180,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",180+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNull-Claw",180+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNull-Claw",180+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",270-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",270-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNull-Claw",270-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNull-Claw",270,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",270+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("RainCometNull-Claw",270+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("RainCometNull-Claw",270+15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270+15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("RainCometNull-Claw",0-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",0+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",90-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",90,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",90+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",180-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",180,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",180+15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",270-15,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",270,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",270+15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("RainCometNullCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",90,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",180,1,0,0,0,0);
         A_FireCustomMissile("RainCometNullCrisis-Claw",270,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("RainCometNull-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",90,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",180,1,0,0,0,0);
         A_FireCustomMissile("RainCometNull-Claw",270,1,0,0,0,0);
		}
	   }
	  }
      CLAW B 8
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(6); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(4); }
	  }
      goto FireEnd

   // Attack 4: Pyroportation
   FireD:
      CLAW B 0
	  {
	   A_UnSetShootable;
       A_SetInvulnerable;
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,800,1,0); // +8% Hellcore Heat, Deal Damage if already above 100% Heat
	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
	  }
      TNT1 A 0 A_PlaySound("pyro/tele")
      TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander
      TNT1 A 0
	  {
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
		}
		else
		{
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
		}
		else
		{
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
		}
		else
		{
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
		}
	   }	   
	  }
      CLAW B 12
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(10); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(8); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(6); }
	  }
      TNT1 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA 0 A_Wander // A_ExtChase(0,0,1,1)
      TNT1 A 0 A_PlaySound("pyro/tele")
      TNT1 A 0
	  {
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
		}
		else
		{
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
		}
		else
		{
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("EscapeExplosionCrisis-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBallCrisis-Claw",16,MSF_DontHurt);
		}
		else
		{
         A_FireCustomMissile("EscapeExplosion-Claw",0,1,0,0,0,0);
         A_Mushroom ("PyroBall-Claw",16,MSF_DontHurt);
		}
	   }	   
	  }
      CLAW B 1
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(0); }
       A_UnSetInvulnerable;
       A_SetShootable;
	  }
      goto FireEnd

	FireEnd:
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready

    AltFire:
      CLAW A 10 ACS_NamedExecuteAlways("HellcoreFireMode",0,0,2)
      Goto Ready
   } 
}
actor PyroFistCI : CustomInventory 32232
{
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   //$Sprite "HLC2K0"
   Tag "Pyro Demon's Fist: [Hellcore] Uses Pyro Demon attacks [alt-fire selects mode]"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Pyro Demon's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
    SpawnLoop:
      HLC2 K 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,10,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("PyroFist", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,11,0,0)
      Stop
   }
}

// Death Incarnate's Skull Weapon - Hellcore Weapon #12 [placeholder sprites]
Actor DIPuff-Claw : DIPuff { +SPECTRAL DamageType "IncarnateSkull" }
actor IncarnateSkull : FloraWeapon
{
   //$Sprite "HLC2M0"
   Scale 0.625
   Tag "Death Incarnate's Skull"
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Death Incarnate's Skull!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
    SpawnLoop:
      HLC2 M 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
      Loop
    See:
    Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
    Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
    Fire: 
      CLAW B 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound("monster/incatk");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,600,1,0); // +6% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         // Set to Angle + 15
         A_SetAngle(angle+15);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);
         // Set to Angle + 7.5, Pitch + 7.5
         A_SetAngle(angle-7.5);
         A_SetPitch(pitch+7.5);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);

         // Set to Angle + 7.5, Pitch - 7.5
         A_SetPitch(pitch-15);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);

         // Set to Angle + 0, Pitch - 0
         A_SetAngle(angle-7.5);
         A_SetPitch(pitch+7.5);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);

         // Set to Angle - 7.5, Pitch - 7.5
         A_SetAngle(angle-7.5);
         A_SetPitch(pitch-7.5);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);

         // Set to Angle - 7.5, Pitch + 7.5
         A_SetPitch(pitch+15);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);

         // Set to Angle - 15, Pitch + 0
         A_SetAngle(angle-7.5);
         A_SetPitch(pitch-7.5);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);

         // Reset back to 0
         A_SetAngle(angle+15);
		}
		else
		{
         // Set to Angle + 15
         A_SetAngle(angle+15);
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);
         // Set to Angle + 7.5, Pitch + 7.5
         A_SetAngle(angle-7.5);
         A_SetPitch(pitch+7.5);
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);

         // Set to Angle + 7.5, Pitch - 7.5
         A_SetPitch(pitch-15);
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);

         // Set to Angle + 0, Pitch - 0
         A_SetAngle(angle-7.5);
         A_SetPitch(pitch+7.5);
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);

         // Set to Angle - 7.5, Pitch - 7.5
         A_SetAngle(angle-7.5);
         A_SetPitch(pitch-7.5);
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);

         // Set to Angle - 7.5, Pitch + 7.5
         A_SetPitch(pitch+15);
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);

         // Set to Angle - 15, Pitch + 0
         A_SetAngle(angle-7.5);
         A_SetPitch(pitch-7.5);
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);

         // Reset back to 0
         A_SetAngle(angle+15);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_SetAngle(angle+15);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);
         A_SetAngle(angle-15);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);
         A_SetAngle(angle-15);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);
         A_SetAngle(angle+15);
		}
		else
		{
         A_SetAngle(angle+15);
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);
         A_SetAngle(angle-15);
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);
         A_SetAngle(angle-15);
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);
         A_SetAngle(angle+15);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireBullets(30,0,10,(random(1,3)*3) * ACS_NamedExecuteWithResult("CrisisMultiplier"),"DIPuff-Claw",0,1024);
		}
		else
		{
         A_FireBullets(30,0,10,(random(1,3)*3),"DIPuff-Claw",0,1024);
		}
	   }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready
   }
}
actor IncarnateSkullCI : CustomInventory 32233
{
   //$Sprite "HLC2M0"
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   Tag "Death Incarnate's Skull: [Hellcore] Fires off the Death Incarnate's glare"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Death Incarnate's Skull!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
    SpawnLoop:
      HLC2 M 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,11,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("IncarnateSkull", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,12,0,0)
      Stop
   }
}


actor ReviveProj
{
    //+FLOAT
    //+NOBLOCKMONST
    //+NOGRAVITY
    +FRIENDLY
    +NOCLIP
    Radius 50
    Height 5
	PROJECTILE
    RENDERSTYLE NONE
    Speed 7
    States
    {
    Spawn:
       TNT1 AAAAA 6 A_VileChase
       Stop
    Death:
       TNT1 A 1
       Stop
    Heal:
       TNT1 A 1
       Stop
    }
}

actor ReviveProj2 : ReviveProj
{
    -FRIENDLY
}

// Archvile's Hand Weapon - Hellcore Weapon #13 [placeholder sprites]
actor ArchvileHand : FloraWeapon
{
   //$Sprite "HLC2N0"
   Tag "Archvile's Hand"
   Scale 0.625
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Archvile's Hand!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
    SpawnLoop:
      HLC2 N 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
      Loop
    See:
    Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
    Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
    Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
    AltFire:
      CLAW A 0
      CLAW B 4
	  {
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,834,1,0); // +8.34% Hellcore Heat, Deal Damage if already above 100% Heat
	   A_PlaySound("NecroSummon");
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
  	  CLAW C 4
	  {
	   A_FireCustomMissile("ReviveProj", 0, 0, 0, 0);
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
  	  CLAW CC 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
  	  CLAW D 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
	  CLAW D 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       if (ACS_NamedExecuteWithResult("CheckStat",0) > 60)
	   {
	    A_FireCustomMissile("ReviveProj", 0, 0, 0, 0);
	    A_FireCustomMissile("ReviveProj", 72, 0, 0, 0);
	    A_FireCustomMissile("ReviveProj", 144, 0, 0, 0);
	    A_FireCustomMissile("ReviveProj", 216, 0, 0, 0);
	    A_FireCustomMissile("ReviveProj", 288, 0, 0, 0);
	   }
	  }
  	  CLAW EE 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
  	  CLAW FF 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      CLAW A 0 A_ReFire
      Goto Ready
   Fire: 
      CLAW B 1
	  {
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,500,1,0);
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(0); }
	   A_Light2;
	   A_VileStart;
	   A_VileChase;
	  }
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
		 A_VileTarget("ArchvileFireCrisis");
		 A_VileTarget("ArchvileFireCrisis");
		 A_VileTarget("ArchvileFireCrisis");
		 A_VileTarget("ArchvileFireCrisis");
		 A_VileTarget("ArchvileFireCrisis");
		 A_VileTarget("ArchvileFireCrisis");
		 A_VileTarget("ArchvileFireCrisis");
		}
		else
		{
	     A_VileTarget("ArchvileFire");
	     A_VileTarget("ArchvileFire");
	     A_VileTarget("ArchvileFire");
	     A_VileTarget("ArchvileFire");
	     A_VileTarget("ArchvileFire");
	     A_VileTarget("ArchvileFire");
	     A_VileTarget("ArchvileFire");
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
		 A_VileTarget("ArchvileFireCrisis");
		 A_VileTarget("ArchvileFireCrisis");
		 A_VileTarget("ArchvileFireCrisis");
		}
		else
		{
	     A_VileTarget("ArchvileFire");
	     A_VileTarget("ArchvileFire");
	     A_VileTarget("ArchvileFire");
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
		 A_VileTarget("ArchvileFireCrisis");
		}
		else
		{
	     A_VileTarget("ArchvileFire");
		}
	   }
	  }
      CLAW BBBBBB 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
		else
		{
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
		else
		{
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
 	     A_VileAttack("vile/stop",20*ACS_NamedExecuteWithResult("CrisisMultiplier"),70*ACS_NamedExecuteWithResult("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
		else
		{
 	     A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
	   }
	  }
      CLAW B 10
	  {
	   A_Light0;
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 1) { A_SetTics(9); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(8); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(7); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(6); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(5); }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready
   } 
}
actor ArchvileHandCI : CustomInventory 32234
{
   //$Sprite "HLC2N0"
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   Tag "Archvile's Hand: [Hellcore] Uses Archvile's Immolation and Resurrection Abilities."
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Arch Vile's Hand!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
    SpawnLoop:
      HLC2 N 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,12,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("ArchvileHand", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,13,0,0)
      Stop
   }
}


actor GravityHPBall : FastProjectile
{
 Damage (0)
 +MISSILE
 +PIERCEARMOR
 +FORCERADIUSDMG
 +FORCEPAIN
 +NODAMAGETHRUST
 +CANNOTPUSH
 +NOTIMEFREEZE
 +FOILINVUL
 RenderStyle Add
 DamageType "GravityHP"
 Alpha 0.0
 Speed 511
 Radius 1
 Height 1
 FastSpeed 511
 SeeSound "null"
 DeathSound "null"

 States
 {
  Spawn:
   TNT1 A 0
   TNT1 A 1 A_SeekerMissile(360,90,SMF_LOOK|SMF_PRECISE|SMF_CURSPEED,256,64)
   loop
  Death:
   TNT1 A 0 
   TNT1 A 0 A_PlaySound("monster/diagra")
   TNT1 A 0 bright A_SpawnItem("DiabloistGravityHPTargeter")
   stop
 }
}

actor GravityMPBall : GravityHPBall
{
 DamageType "GravityMP"
}

actor GravityHPMPBall : GravityHPBall
{
 DamageType "GravityHPMP"
}

// Diabloist's Hand Weapon - Hellcore Weapon #14 [placeholder sprites]
Actor DFlare-Claw : DFlare 
{
 +SPECTRAL
 DamageType "DiabloistHand" 
  States
  {
  Spawn:
    VBAL A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" A 1 Bright A_CustomMissile("MFlareFX",0,0,0,0)
    "####" AA 1 Bright
    "####" B 1 Bright A_CustomMissile("MFlareFX",0,0,0,0)
    "####" BB 1 Bright
    Loop
  }
}
Actor DFlareCrisis-Claw : DFlareCrisis 
{
 +SPECTRAL
 DamageType "DiabloistHand" 
  States
  {
  Spawn:
    VBAL A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" A 0 Bright A_SpawnItemEx("DFlareCrisisParticle",0,0,0,0,0,1.28)
    "####" A 1 Bright A_CustomMissile("MFlareFX",0,0,0,0)
    "####" A 1 Bright
    "####" A 1 Bright A_SpawnItemEx("DFlareCrisisParticle",0,0,0,0,0,1.28)
    "####" B 1 Bright A_CustomMissile("MFlareFX",0,0,0,0)
    "####" B 1 Bright A_SpawnItemEx("DFlareCrisisParticle",0,0,0,0,0,1.28)
    "####" B 1 Bright
    Loop
  }
}
Actor DTracer-Claw : DTracer 
{
 +SPECTRAL
 DamageType "DiabloistHand" 
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    TNT1 A 1 Bright A_SeekerMissile (10,15)
    TNT1 A 0 Bright A_Countdown
    TNT1 A 0 Bright A_CustomMissile("DTracerPuff",0,0,0,0)
    Loop
  }
}
Actor DTracerCrisis-Claw : DTracerCrisis
{
 +SPECTRAL
 DamageType "DiabloistHand" 
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    TNT1 A 1 Bright A_SeekerMissile (10,15)
    TNT1 A 0 Bright A_Countdown
    TNT1 A 0 Bright A_CustomMissile("DTracerPuffCrisis",0,0,0,0)
    Loop
  }
}
Actor DMissile-Claw : DMissile
{
 +SPECTRAL
 DamageType "DiabloistHand" 
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" AAAA 1 Bright
    "####" A 1 A_CFlamePuff
    Goto Death+1
  }
}
Actor DMissileCrisis-Claw : DMissileCrisis
{
 +SPECTRAL
 DamageType "DiabloistHand" 
  States
  {
  Spawn:
    TNT1 A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" A 0 Bright A_SpawnItemEx("DMissileCrisisParticle",0,0,0,0,0,1.28)
    "####" AA 1 Bright
    "####" A 0 Bright A_SpawnItemEx("DMissileCrisisParticle",0,0,0,0,0,1.28)
    "####" AA 1 Bright
    "####" A 0 Bright A_SpawnItemEx("DMissileCrisisParticle",0,0,0,0,0,1.28)
    "####" A 1 A_CFlamePuff
    Goto Death+1
  }
}
Actor DFire-Claw : DFire
{
 +SPECTRAL
 DamageType "DiabloistHand" 
  States
  {
  Spawn:
    VBAL A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    HLFR A 2 Bright
	{
	 A_StartFire;
	 A_Explode(4,32,0);
	}
    HLFR BABCB 2 Bright
	{
	 A_Fire;
	 A_Explode(4,32,0);
	}
    HLFR CBCDCDCDEDED 2 Bright
	{
	 A_Fire;
	 A_Explode(5,32,0);
	}
    HLFR E 2 Bright
	{
	 A_FireCrackle;
	 A_Explode(4,32,0);
	}
    HLFR FEF 2 Bright
	{
	 A_Fire;
	 A_Explode(3,32,0);
	}
    HLFR EFG 2 Bright
	{
	 A_Fire;
	 A_Explode(2,32,0);
	}
    HLFR HGHGH 2 Bright
	{
	 A_Fire;
	 A_Explode(1,32,0);
	}
    stop
  }
}
Actor DFireCrisis-Claw : DFireCrisis
{
 +SPECTRAL
 DamageType "DiabloistHand" 
  States
  {
  Spawn:
    VBAL A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",109) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    HLFR A 2 Bright
	{
	 A_StartFire;
	 A_Explode((4 * ACS_NamedExecuteWithResult("CrisisMultiplier")),32,0);
	}
    HLFR BABCB 2 Bright
	{
	 A_Fire;
	 A_Explode((4 * ACS_NamedExecuteWithResult("CrisisMultiplier")),32,0);
	}
    HLFR CBCDCDCDEDED 2 Bright
	{
	 A_Fire;
	 A_Explode((5 * ACS_NamedExecuteWithResult("CrisisMultiplier")),32,0);
	}
    HLFR E 2 Bright
	{
	 A_FireCrackle;
	 A_Explode((4 * ACS_NamedExecuteWithResult("CrisisMultiplier")),32,0);
	}
    HLFR FEF 2 Bright
	{
	 A_Fire;
	 A_Explode((3 * ACS_NamedExecuteWithResult("CrisisMultiplier")),32,0);
	}
    HLFR EFG 2 Bright
	{
	 A_Fire;
	 A_Explode((2 * ACS_NamedExecuteWithResult("CrisisMultiplier")),32,0);
	}
    HLFR HGHGH 2 Bright
	{
	 A_Fire;
	 A_Explode((1 * ACS_NamedExecuteWithResult("CrisisMultiplier")),32,0);
	}
    stop
  }
}
actor DiabloistHand : FloraWeapon
{
   //$Sprite "HLC2O0"
   Tag "Diabloist's Hand"
   Scale 0.625
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Diabloist's Hand!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
    SpawnLoop:
      HLC2 O 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
      Loop
   See:
   Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
   Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
   Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
   Fire: 
      TNT1 A 0 ACS_NamedExecuteAlways("StartTensionCountDown")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,3) == 0, "FireA")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,3) == 1, "FireB")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,3) == 2, "FireC")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,3) == 3, "FireD")
      CLAW B 0 A_JumpIf(ACS_NamedExecuteWithResult("HellcoreFireMode",1,3) == 4, "FireE")
      goto FireA

   // Attack 1: Gravition Glare [no alternate versions]
   FireA:
      CLAW B 12 BRIGHT
	  {
	   ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,1250,1,0); // +12.5% Hellcore Heat, Deal Damage if already above 100% Heat
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
		}
		else
		{
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
		}
		else
		{
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
	     A_FireCustomMissile("GravityHPBall");
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("GravityHPBall");
		}
		else
		{
	     A_FireCustomMissile("GravityHPBall");
		}
	   }
	  }
      CLAW B 1
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(0); }
	  }
      goto FireEnd

   // Attack 2: Diabloist Immolation [normal version]
   FireB:
      CLAW B 3 // A_FaceTarget
	  {
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,600,1,0); // +6% Hellcore Heat, Deal Damage if already above 100% Heat
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(2); }
	   A_Light2;
	   A_VileStart;
	   A_VileChase;
	  }
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      CLAW B 4 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
		 A_VileTarget("DFireCrisis-Claw");
		 A_VileTarget("DFireCrisis-Claw");
		 A_VileTarget("DFireCrisis-Claw");
		 A_VileTarget("DFireCrisis-Claw");
		 A_VileTarget("DFireCrisis-Claw");
		 A_VileTarget("DFireCrisis-Claw");
		 A_VileTarget("DFireCrisis-Claw");
		}
		else
		{
	     A_VileTarget("DFire-Claw");
	     A_VileTarget("DFire-Claw");
	     A_VileTarget("DFire-Claw");
	     A_VileTarget("DFire-Claw");
	     A_VileTarget("DFire-Claw");
	     A_VileTarget("DFire-Claw");
	     A_VileTarget("DFire-Claw");
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
		 A_VileTarget("DFireCrisis-Claw");
		 A_VileTarget("DFireCrisis-Claw");
		 A_VileTarget("DFireCrisis-Claw");
		}
		else
		{
	     A_VileTarget("DFire-Claw");
	     A_VileTarget("DFire-Claw");
	     A_VileTarget("DFire-Claw");
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
		 A_VileTarget("DFireCrisis-Claw");
		}
		else
		{
	     A_VileTarget("DFire-Claw");
		}
	   }
	  }
      CLAW BBB 6
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(5); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(4); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
	  }
      CLAW B 3
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
		else
		{
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
		else
		{
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
 	     A_VileAttack("vile/stop",40*ACS_NamedExecuteWithResult("CrisisMultiplier"),140*ACS_NamedExecuteWithResult("CrisisMultiplier"),1120,12.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
		else
		{
 	     A_VileAttack("vile/stop",40,140,140,1.5,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
		}
	   }
	  }
      CLAW B 1
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(0); }
	  }
      CLAW B 9
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(7); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(5); }
	  }
      goto FireEnd

   // Attack 3: Fire Thrower [normal version]
   FireC:
      CLAW B 5
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(4); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }

       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,63,1,0); // +0.63% Hellcore Heat, Deal Damage if already above 100% Heat
	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4)-15,1,0,0,0,0);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4)-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4)-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4),1,0,0,0,0);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4)+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4)+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4)+15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("DFlare-Claw",random(-4,4)-15,1,0,0,0,0);
         A_FireCustomMissile("DFlare-Claw",random(-4,4)-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("DFlare-Claw",random(-4,4)-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("DFlare-Claw",random(-4,4),1,0,0,0,0);
         A_FireCustomMissile("DFlare-Claw",random(-4,4)+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("DFlare-Claw",random(-4,4)+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("DFlare-Claw",random(-4,4)+15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4)-15,1,0,0,0,0);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4),1,0,0,0,0);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4)+15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("DFlare-Claw",random(-4,4)-15,1,0,0,0,0);
         A_FireCustomMissile("DFlare-Claw",random(-4,4),1,0,0,0,0);
         A_FireCustomMissile("DFlare-Claw",random(-4,4)+15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DFlareCrisis-Claw",random(-4,4),1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("DFlare-Claw",random(-4,4),1,0,0,0,0);
		}
	   }
	  }
      CLAW B 6
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(5); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(4); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
	   A_Refire;
	  }
      goto FireEnd

   // Attack 4: Fire Blast (aka Cleric's FlameStorm 2.0) [normal version]
   FireD:
      CLAW B 3
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(2); }
       A_Playsound("weapons/firbfi");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,450,1,0); // +4.5% Hellcore Heat, Deal Damage if already above 100% Heat

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DMissileCrisis-Claw",random(-4,4)-15,1,0,0,0,0);
         A_FireCustomMissile("DMissileCrisis-Claw",random(-4,4)-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("DMissileCrisis-Claw",random(-4,4)-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("DMissileCrisis-Claw",random(-4,4),1,0,0,0,0);
         A_FireCustomMissile("DMissileCrisis-Claw",random(-4,4)+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("DMissileCrisis-Claw",random(-4,4)+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("DMissileCrisis-Claw",random(-4,4)+15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("DMissile-Claw",random(-4,4)-15,1,0,0,0,0);
         A_FireCustomMissile("DMissile-Claw",random(-4,4)-7.5,1,0,0,0,7.5);
         A_FireCustomMissile("DMissile-Claw",random(-4,4)-7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("DMissile-Claw",random(-4,4),1,0,0,0,0);
         A_FireCustomMissile("DMissile-Claw",random(-4,4)+7.5,1,0,0,0,-7.5);
         A_FireCustomMissile("DMissile-Claw",random(-4,4)+7.5,1,0,0,0,7.5);
         A_FireCustomMissile("DMissile-Claw",random(-4,4)+15,1,0,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DMissileCrisis-Claw",random(-4,4)-15,1,0,0,0,0);
         A_FireCustomMissile("DMissileCrisis-Claw",random(-4,4),1,0,0,0,0);
         A_FireCustomMissile("DMissileCrisis-Claw",random(-4,4)+15,1,0,0,0,0);
		}
		else
		{
         A_FireCustomMissile("DMissile-Claw",random(-4,4)-15,1,0,0,0,0);
         A_FireCustomMissile("DMissile-Claw",random(-4,4),1,0,0,0,0);
         A_FireCustomMissile("DMissile-Claw",random(-4,4)+15,1,0,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
	     A_FireCustomMissile("DMissileCrisis-Claw",0,1,0,0,0,0);
		}
		else
		{
	     A_FireCustomMissile("DMissile-Claw",0,1,0,0,0,0);
		}
	   }
	  }
      CLAW B 2
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }
	  }
      CLAW B 8
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(6); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(4); }
	  }
      goto FireEnd

   // Attack 5: Snakes of Fire [normal version]
   FireE:
      CLAW B 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
       A_Playsound ("weapons/firbfi");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,600,1,0); // +6% Hellcore Heat, Deal Damage if already above 100% Heat

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DTracerCrisis-Claw",0+15,1,-40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0+7.5,1,-40,0,0,7.5);
         A_FireCustomMissile("DTracerCrisis-Claw",0+7.5,1,-40,0,0,-7.5);
         A_FireCustomMissile("DTracerCrisis-Claw",0,1,-40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0-7.5,1,-40,0,0,-7.5);
         A_FireCustomMissile("DTracerCrisis-Claw",0-7.5,1,-40,0,0,7.5);
         A_FireCustomMissile("DTracerCrisis-Claw",0-15,1,-40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0+15,1,40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0+7.5,1,40,0,0,7.5);
         A_FireCustomMissile("DTracerCrisis-Claw",0+7.5,1,40,0,0,-7.5);
         A_FireCustomMissile("DTracerCrisis-Claw",0,1,40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0-7.5,1,40,0,0,-7.5);
         A_FireCustomMissile("DTracerCrisis-Claw",0-7.5,1,40,0,0,7.5);
         A_FireCustomMissile("DTracerCrisis-Claw",0-15,1,40,0,0,0);
		}
		else
		{
         A_FireCustomMissile("DTracer-Claw",0+15,1,-40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0+7.5,1,-40,0,0,7.5);
         A_FireCustomMissile("DTracer-Claw",0+7.5,1,-40,0,0,-7.5);
         A_FireCustomMissile("DTracer-Claw",0,1,-40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0-7.5,1,-40,0,0,-7.5);
         A_FireCustomMissile("DTracer-Claw",0-7.5,1,-40,0,0,7.5);
         A_FireCustomMissile("DTracer-Claw",0-15,1,-40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0+15,1,40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0+7.5,1,40,0,0,7.5);
         A_FireCustomMissile("DTracer-Claw",0+7.5,1,40,0,0,-7.5);
         A_FireCustomMissile("DTracer-Claw",0,1,40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0-7.5,1,40,0,0,-7.5);
         A_FireCustomMissile("DTracer-Claw",0-7.5,1,40,0,0,7.5);
         A_FireCustomMissile("DTracer-Claw",0-15,1,40,0,0,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DTracerCrisis-Claw",0+15,1,-40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0,1,-40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0-15,1,-40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0+15,1,40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0,1,40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0-15,1,40,0,0,0);
		}
		else
		{
         A_FireCustomMissile("DTracer-Claw",0+15,1,-40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0,1,-40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0-15,1,-40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0+15,1,40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0,1,40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0-15,1,40,0,0,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("DTracerCrisis-Claw",0,1,-40,0,0,0);
         A_FireCustomMissile("DTracerCrisis-Claw",0,1,40,0,0,0);
		}
		else
		{
         A_FireCustomMissile("DTracer-Claw",0,1,-40,0,0,0);
         A_FireCustomMissile("DTracer-Claw",0,1,40,0,0,0);
		}
	   }
	  }
      CLAW B 5
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(4); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(3); }
	  }
      goto FireEnd

    FireEnd:
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready

    AltFire:
      CLAW A 10 ACS_NamedExecuteAlways("HellcoreFireMode",0,0,3)
      Goto Ready
   } 
}
actor DiabloistHandCI : CustomInventory 32235
{
   //$Sprite "HLC2O0"
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   Tag "Diabloist's Hand: [Hellcore] Uses Diabloist attacks [alt-fire selects mode]"
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Diabloist's Hand!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
    SpawnLoop:
      HLC2 O 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,13,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("DiabloistHand", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,14,0,0)
      Stop
   }
}

// Flying Balrog's Fist Weapon - Hellcore Weapon #15 [placeholder sprites]
Actor FlyingBalrogShot1-Claw : FlyingBalrogShot1 
{
 +SPECTRAL
 DamageType "BalrogFist" 
  States
  {
  Spawn:
    MANF A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    MANF AABB 2 Bright
    loop
  }
}
Actor FlyingBalrogShot1Crisis-Claw : FlyingBalrogShot1Crisis
{
 +SPECTRAL
 DamageType "BalrogFist" 
  States
  {
  Spawn:
    MANF A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    MANF AABB 2 Bright A_SpawnItemEx("FlyingBalrogShot1CrisisParticle",0,0,0,0,0,1.28)
    loop
  }
}
Actor FlyingBalrogShot2-Claw : FlyingBalrogShot2
{
 +SPECTRAL
 DamageType "BalrogFist" 
  States
  {
  Spawn:
    FATB A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    FATB AB 2 Bright A_Tracer
    loop
  }
}
Actor FlyingBalrogShot2Crisis-Claw : FlyingBalrogShot2Crisis
{
 +SPECTRAL
 DamageType "BalrogFist" 
  States
  {
  Spawn:
    FATB A 0 NoDelay
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) <= 1) { A_ScaleVelocity(1.0); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 2) { A_ScaleVelocity(1.15); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 3) { A_ScaleVelocity(1.30); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 4) { A_ScaleVelocity(1.45); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 5) { A_ScaleVelocity(1.60); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 6) { A_ScaleVelocity(1.75); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) == 7) { A_ScaleVelocity(1.90); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",110) >= 8) { A_ScaleVelocity(2.05); }

	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 1) { A_ScaleVelocity(1.125); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 2) { A_ScaleVelocity(1.25); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 3) { A_ScaleVelocity(1.375); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 4) { A_ScaleVelocity(1.5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) == 5) { A_ScaleVelocity(1.625); }
	 A_AlertMonsters;
	}
  Idle:
    "####" AB 2 Bright
	{
	 A_SpawnItemEx("FlyingBalrogShot2CrisisParticle",0,0,0,0,0,1.28);
	 A_Tracer;
	}
    loop
  }
}
actor BalrogFist : FloraWeapon
{
   //$Sprite "HLC2L0"
   Scale 0.625
   Tag "Flying Balrog's Fist"
   +FLOATBOB
   +NOAUTOAIM
   +INVENTORY.ALWAYSPICKUP
   +WEAPON.NOALERT
   Inventory.PickupMessage "You got the Flying Balrog's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
    SpawnLoop:
      HLC2 L 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
      Loop
   See:
   Ready: 
      CLAW A 1 A_WeaponReady(WRF_ALLOWUSER1)
      Loop
   Deselect: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Lower; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Lower; }
 	  }
      TNT1 A 0 A_Lower
      CLAW A 1 A_Lower
      Loop
   Select: 
      TNT1 A 0 
 	  {
 	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_Raise; }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_Raise; }
 	  }
      TNT1 A 0 A_Raise
      CLAW A 1 A_Raise
      Loop
   Fire: 
      CLAW B 1 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(0); }
       A_Playsound("imp/attack");
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,600,1,0); // +6% Hellcore Heat, Deal Damage if already above 100% Heat
       ACS_NamedExecuteAlways("StartTensionCountDown");

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",15+15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0+15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-15+15,1,-12,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",15+7.5,1,12,7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0+7.5,1,0,7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-15+7.5,1,-12,7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",15+7.5,1,12,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0+7.5,1,0,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-15+7.5,1,-12,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-15,1,-12,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",15-7.5,1,12,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0-7.5,1,0,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-15-7.5,1,-12,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",15-7.5,1,12,7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0-7.5,1,0,7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-15-7.5,1,-12,7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",15-15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0-15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-15-15,1,-12,0);
		}
		else
		{
         A_FireCustomMissile("FlyingBalrogShot1-Claw",15+15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0+15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-15+15,1,-12,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",15+7.5,1,12,7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0+7.5,1,0,7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-15+7.5,1,-12,7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",15+7.5,1,12,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0+7.5,1,0,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-15+7.5,1,-12,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-15,1,-12,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",15-7.5,1,12,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0-7.5,1,0,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-15-7.5,1,-12,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",15-7.5,1,12,7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0-7.5,1,0,7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-15-7.5,1,-12,7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",15-15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0-15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-15-15,1,-12,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",15+15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0+15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-15+15,1,-12,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-15,1,-12,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",15-15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0-15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-15-15,1,-12,0);
		}
		else
		{
         A_FireCustomMissile("FlyingBalrogShot1-Claw",15+15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0+15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-15+15,1,-12,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-15,1,-12,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",15-15,1,12,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0-15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-15-15,1,-12,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0+15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",0-15,1,0,0);
		}
		else
		{
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0+15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",0-15,1,0,0);
		}
	   }
	  }
      CLAW B 3
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(1); }

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
  	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10+15,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10+15,1,-8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10+7.5,1,8,7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10+7.5,1,-8,7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10+7.5,1,8,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10+7.5,1,-8,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10,1,-8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10-7.5,1,8,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10-7.5,1,-8,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10-7.5,1,8,7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10-7.5,1,-8,7.5);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10-15,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10-15,1,-8,0);
		}
		else
		{
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10+15,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10+15,1,-8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10+7.5,1,8,7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10+7.5,1,-8,7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10+7.5,1,8,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10+7.5,1,-8,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10,1,-8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10-7.5,1,8,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10-7.5,1,-8,-7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10-7.5,1,8,7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10-7.5,1,-8,7.5);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10-15,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10-15,1,-8,0);
		}
	   }
	   else
  	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10+15,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10+15,1,-8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10,1,-8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10-15,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10-15,1,-8,0);
		}
		else
		{
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10+15,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10+15,1,-8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10,1,-8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10-15,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10-15,1,-8,0);
		}
	   }
	   else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_PlaySound("crisisattack2",7);
         A_PlaySound("crisisattack",6);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",10,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1Crisis-Claw",-10,1,-8,0);
		}
		else
		{
         A_FireCustomMissile("FlyingBalrogShot1-Claw",10,1,8,0);
         A_FireCustomMissile("FlyingBalrogShot1-Claw",-10,1,-8,0);
		}
	   }
	  }
      CLAW B 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

	   if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9+15,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0+15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9+15,1,-6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9+7.5,1,6,7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0+7.5,1,0,7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9+7.5,1,-6,7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9+7.5,1,6,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0+7.5,1,0,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9+7.5,1,-6,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9,1,-6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9-7.5,1,6,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0-7.5,1,0,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9-7.5,1,-6,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9-7.5,1,6,7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0-7.5,1,0,7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9-7.5,1,-6,7.5);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9-15,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0-15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9-15,1,-6,0);
		}
		else
		{
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9+15,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0+15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9+15,1,-6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9+7.5,1,6,7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0+7.5,1,0,7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9+7.5,1,-6,7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9+7.5,1,6,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0+7.5,1,0,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9+7.5,1,-6,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9,1,-6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9-7.5,1,6,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0-7.5,1,0,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9-7.5,1,-6,-7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9-7.5,1,6,7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0-7.5,1,0,7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9-7.5,1,-6,7.5);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9-15,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0-15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9-15,1,-6,0);
		}
	   }
	   else
	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9+15,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0+15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9+15,1,-6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9,1,-6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9-15,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0-15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9-15,1,-6,0);
		}
		else
		{
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9+15,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0+15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9+15,1,-6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9,1,-6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9-15,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0-15,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9-15,1,-6,0);
		}
	   }
       else
	   {
	    if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
		{
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",9,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2Crisis-Claw",-9,1,-6,0);
		}
		else
		{
         A_FireCustomMissile("FlyingBalrogShot2-Claw",9,1,6,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",0,1,0,0);
         A_FireCustomMissile("FlyingBalrogShot2-Claw",-9,1,-6,0);
		}
	   }
	  }
      CLAW B 8 
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(6); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(4); }
	  }
      CLAW CDEF 4
	  {
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
	   if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
	  }
      Goto Ready

   //Alt-Crisis
   AltCrisisFlashCheck:
      TNT1 A 0 A_Jump(192, "Flash2")
   AltCrisisFlash2:
      CLAW B 4 
	  {
	  }
      CLAW B 8 
	  stop


   Flash:
      TNT1 A 0 A_JumpIf(ACS_NamedExecuteWithResult("CheckCrisisAttackType") == 0, "Flash2")
      TNT1 A 0 A_JumpIfInventory("CriticalHealth", 0, "AltCrisisFlash2")
      TNT1 A 0 A_JumpIfInventory("LowHealth", 0, "AltCrisisFlashCheck")
   Flash2: // Flash2:
      CLAW B 1
	  {
       ACS_NamedExecuteAlways("IncreaseHellcoreHeat",0,600,1,0); // +6% Hellcore Heat, Deal Damage if already above 100% Heat
	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
        A_FireCustomMissile("FlyingBalrogShot1-Claw",15+15,1,12,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0+15,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15+15,1,-12,0);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",15+7.5,1,12,7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0+7.5,1,0,7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15+7.5,1,-12,7.5);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",15+7.5,1,12,-7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0+7.5,1,0,-7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15+7.5,1,-12,-7.5);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",15,1,12,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15,1,-12,0);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",15-7.5,1,12,-7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0-7.5,1,0,-7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15-7.5,1,-12,-7.5);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",15-7.5,1,12,7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0-7.5,1,0,7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15-7.5,1,-12,7.5);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",15-15,1,12,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0-15,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15-15,1,-12,0);
	   }
	   else
	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
        A_FireCustomMissile("FlyingBalrogShot1-Claw",15+15,1,12,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0+15,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15+15,1,-12,0);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",15,1,12,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15,1,-12,0);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",15-15,1,12,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0-15,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15-15,1,-12,0);
	   }
       else
	   {
        A_FireCustomMissile("FlyingBalrogShot1-Claw",15,1,12,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",0,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-15,1,-12,0);
	   }
	  }
      CLAW B 3 
 	  {
	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
        A_FireCustomMissile("FlyingBalrogShot1-Claw",10+15,1,8,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10+15,1,-8,0);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",10+7.5,1,8,7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10+7.5,1,-8,7.5);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",10+7.5,1,8,-7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10+7.5,1,-8,-7.5);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",10,1,8,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10,1,-8,0);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",10-7.5,1,8,-7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10-7.5,1,-8,-7.5);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",10-7.5,1,8,7.5);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10-7.5,1,-8,7.5);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",10-15,1,8,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10-15,1,-8,0);
	   }
	   else
	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
        A_FireCustomMissile("FlyingBalrogShot1-Claw",10+15,1,8,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10+15,1,-8,0);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",10,1,8,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10,1,-8,0);

        A_FireCustomMissile("FlyingBalrogShot1-Claw",10-15,1,8,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10-15,1,-8,0);
	   }
       else
	   {
        A_FireCustomMissile("FlyingBalrogShot1-Claw",10,1,8,0);
        A_FireCustomMissile("FlyingBalrogShot1-Claw",-10,1,-8,0);
	   }
	  }
      CLAW B 4 
	  {
	   if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	   {
        A_FireCustomMissile("FlyingBalrogShot2-Claw",9+15,1,6,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0+15,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9+15,1,-6,0);

        A_FireCustomMissile("FlyingBalrogShot2-Claw",9+7.5,1,6,7.5);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0+7.5,1,0,7.5);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9+7.5,1,-6,7.5);

        A_FireCustomMissile("FlyingBalrogShot2-Claw",9+7.5,1,6,-7.5);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0+7.5,1,0,-7.5);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9+7.5,1,-6,-7.5);

        A_FireCustomMissile("FlyingBalrogShot2-Claw",9,1,6,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9,1,-6,0);

        A_FireCustomMissile("FlyingBalrogShot2-Claw",9-7.5,1,6,-7.5);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0-7.5,1,0,-7.5);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9-7.5,1,-6,-7.5);

        A_FireCustomMissile("FlyingBalrogShot2-Claw",9-7.5,1,6,7.5);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0-7.5,1,0,7.5);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9-7.5,1,-6,7.5);

        A_FireCustomMissile("FlyingBalrogShot2-Claw",9-15,1,6,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0-15,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9-15,1,-6,0);
	   }
	   else
	   if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	   {
        A_FireCustomMissile("FlyingBalrogShot2-Claw",9+15,1,6,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0+15,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9+15,1,-6,0);

        A_FireCustomMissile("FlyingBalrogShot2-Claw",9,1,6,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9,1,-6,0);

        A_FireCustomMissile("FlyingBalrogShot2-Claw",9-15,1,6,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0-15,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9-15,1,-6,0);
	   }
       else
	   {
        A_FireCustomMissile("FlyingBalrogShot2-Claw",9,1,6,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",0,1,0,0);
        A_FireCustomMissile("FlyingBalrogShot2-Claw",-9,1,-6,0);
	   }
	  }
      CLAW B 8 
	  stop
   } 
}

actor BalrogFistCI : CustomInventory 32236
{
   //$Sprite "HLC2L0"
   //$NotAngled
   //$Color 14
   //$Category "DV-DS Weapons/Flora/Hellcore Souls"
   ConversationID 385 // 345+ are unused by Strife, this is for use in DIALOUxx/SCRIPTxx references
   Tag "Flying Balrog's Fist: [Hellcore] Shoots the Flying Balrog's Cluster Fire-shot."
   Scale 0.625
   +FLOATBOB
   +INVENTORY.ALWAYSPICKUP
   Inventory.PickupMessage "You got the Flying Balrog's Fist!"
   States
   {
    Spawn:
      TNT1 A 0 bright
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
      TNT1 A 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
    SpawnLoop:
      HLC2 L 1 bright ACS_NamedExecuteAlways("HellcoreWeaponCheckCharacter",0,14,0,0)
      Loop
    Pickup:
      TNT1 A 0 
      TNT1 A 0 A_GiveInventory("BalrogFist", 1)
      TNT1 A 0 A_Playsound("pickuphellcore")
      TNT1 A 0 ACS_NamedExecuteAlways("IncreaseHellcoreLevel",0,15,0,0)
      Stop
   }
}

// Sapphire Wand [Flora]
ACTOR MageWandSmokeNew
{
  +NOBLOCKMAP
  +NOGRAVITY
  +SHADOW
  +NOTELEPORT
  +CANNOTPUSH
  +NODAMAGETHRUST
  RenderStyle Translucent
  Alpha 0.6
  Scale 0.75
  States
  {
  Spawn:
    MWN2 CDCD 4
    Stop
  }
}

ACTOR MageWandMissileNew : FastProjectile
{
  var int user_randompain;
  Speed 184
  Radius 3 // 12
  Height 2 // 8
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",44)) // 5
  Scale 0.25
  +RIPPER
  +CANNOTPUSH
  +NODAMAGETHRUST
  +SPAWNSOUNDSOURCE
  DamageType "Magic"
  MissileType "MageWandSmokeNew"
  SeeSound "MageWandFire"
  Obituary "$OB_MPMWEAPWAND"
  States
  {
  Spawn:
    MWN2 C 0 NoDelay Bright
	{
	 A_SetUserVar("user_randompain",2);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) == 1) { A_SetUserVar("user_randompain",7); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) == 2) { A_SetUserVar("user_randompain",13); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) == 3) { A_SetUserVar("user_randompain",20); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) == 4) { A_SetUserVar("user_randompain",28); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10051) == 5) { A_SetUserVar("user_randompain",37); }
	 if (random(1,100) <= user_randompain) { A_ChangeFlag("FORCEPAIN", TRUE); }
	}
    MWN2 CD 4 Bright
    Loop
  Death:
    MWN2 E 4 Bright
    MWN2 F 3 Bright
    MWN2 G 4 Bright
    MWN2 H 3 Bright
    MWN2 I 4 Bright
    Stop
  }
}

ACTOR MageWandMissile2New : MageWandMissileNew
{
  Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",45)) // 5
}

ACTOR SapphireWandNew : FloraWeapon 32122
{
  //$NotAngled
  //$Color 14
  //$Category "DV-DS Weapons/Flora/Normal"
  Weapon.SelectionOrder 3600
  Weapon.KickBack 0
  Tag "$TAG_MWEAPWAND"
  +WEAPON.NOAUTOAIM
  +WEAPON.NOALERT
  Tag "Sapphire Wand"
  Inventory.PickupMessage "Picked up a \cvSapphire Wand\c-!"
  Inventory.PickupSound "pickuphellcore"
  States
  {
  Spawn:
    SWND A 0 NoDelay
	{
	 if (CountInv("SapphireWandNew",AAPTR_PLAYER1) > 0)
	 {
	  if (CountInv("DualSapphireWandsNew",AAPTR_PLAYER1) > 0)
	  {
	   A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0);
       A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,56);
       A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,206);
       A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,243);
	   A_FadeOut(1,1);
	  }
	  else
	  {
	   A_SpawnItemEx("DualSapphireWandsNew");
	   A_FadeOut(1,1);
	  }
	 }
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) != 1)
	 {
	  A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0);
      A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,56);
      A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,206);
      A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,243);
	  A_FadeOut(1,1);
	 }
	}
    SWND A 1
    Loop
  Select:
    MWN2 A 0 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
	}
    MWN2 A 0 A_Raise
    MWN2 A 1 A_Raise
    Loop
  Deselect:
    MWN2 A 0 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
	}
    MWN2 A 0 A_Lower
    MWN2 A 1 A_Lower
    Loop
  Ready:
    MWN2 A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Fire:
    MWN2 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",1,2) == 0, "Ready")
    MWN2 A 6
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
	}
    MWN2 B 6 Bright Offset(0, 48)
	{
	 if (random(1,256) >= 240) { A_AlertMonsters; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissileNew",15,0,0,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",7.5,0,0,0,0,7.5);
      A_FireCustomMissile("MageWandMissileNew",7.5,0,0,0,0,-7.5);
      A_FireCustomMissile("MageWandMissileNew",0,0,0,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",-7.5,0,0,0,0,-7.5);
      A_FireCustomMissile("MageWandMissileNew",-7.5,0,0,0,0,7.5);
      A_FireCustomMissile("MageWandMissileNew",-15,0,0,0,0,0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissileNew",15,0,0,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",0,0,0,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",-15,0,0,0,0,0);
	 }
	 else
	 {
      A_FireCustomMissile("MageWandMissileNew",0,0,0,0,0,0);
	 }
	}
    MWN2 A 3 Offset(0, 40)
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(2); }
	}
    MWN2 A 3 Offset(0, 36) 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(2); }
	 A_ReFire;
	}
    Goto Ready
  AltFire:
    MWN2 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",3,2) == 0, "Ready")
    MWN2 A 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
	}
    MWN2 B 3 Bright Offset(0, 48)
	{
	 if (random(1,256) >= 240) { A_AlertMonsters; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",0+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",-15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
	 }
	 else
	 {
      A_FireCustomMissile("MageWandMissile2New",0+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
	 }
	}
    MWN2 A 1 Offset(0, 40)
    MWN2 A 1 Offset(0, 36) 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
	}
    MWN2 B 3 Bright Offset(0, 48)
	{
	 if (random(1,256) >= 240) { A_AlertMonsters; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",0+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",-15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
	 }
	 else
	 {
      A_FireCustomMissile("MageWandMissile2New",0+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
	 }
	}
    MWN2 A 1 Offset(0, 40)
    MWN2 A 1 Offset(0, 36) 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
	}
    MWN2 B 3 Bright Offset(0, 48)
	{
	 if (random(1,256) >= 240) { A_AlertMonsters; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",0+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",-15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
	 }
	 else
	 {
      A_FireCustomMissile("MageWandMissile2New",0+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,0,0,0,0);
	 }
	}
    MWN2 A 1 Offset(0, 40)
    MWN2 A 1 Offset(0, 36) 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
	 A_ReFire;
	}
    Goto Ready
  }
}

ACTOR DualSapphireWandsNew : FloraWeapon
{
  Weapon.SelectionOrder 3600
  Weapon.KickBack 0
  Tag "Dual Sapphire Wands"
  +WEAPON.NOAUTOAIM
  +WEAPON.NOALERT
  Inventory.PickupMessage "Picked up a \cvSapphire Wand\c-!"
  Inventory.PickupSound "pickuphellcore"
  States
  {
  Spawn:
    SWND A 0 NoDelay
	{
	 if (CountInv("DualSapphireWandsNew",AAPTR_PLAYER1) > 0)
	 {
	  A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0);
      A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,56);
      A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,206);
      A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,243);
	  A_FadeOut(1,1);
	 }
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) != 1)
	 {
	  A_SpawnItemEx("DoomSpellMana3",0,0,0,0,0,0,0,0,0);
      A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,56);
      A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,206);
      A_SpawnItemEx("DoomSpellMana3",0,0,0,random(-1,1),random(-1,1),random(-1,1),0,0,243);
	  A_FadeOut(1,1);
	 }
	}
    SWND A 1
    Loop
  Select:
    SWN2 A 0 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Raise; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Raise; }
	}
    SWN2 A 0 A_Raise
    SWN2 A 1 A_Raise
    Loop
  Deselect:
    SWN2 A 0 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_Lower; }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_Lower; }
	}
    SWN2 A 0 A_Lower
    SWN2 A 1 A_Lower
    Loop
  Ready:
    SWN2 A 1 A_WeaponReady(WRF_ALLOWUSER1)
    Loop
  Fire:
    SWN2 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",2,2) == 0, "Ready")
    SWN2 A 6
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
	}
    SWN2 F 6 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissileNew",15+1,0,1,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",15-1,0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",7.5+1,0,1,0,0,7.5);
      A_FireCustomMissile("MageWandMissileNew",7.5-1,0,-1,0,0,7.5);
      A_FireCustomMissile("MageWandMissileNew",7.5+1,0,0,1,0,-7.5);
      A_FireCustomMissile("MageWandMissileNew",7.5-1,0,0,-1,0,-7.5);
      A_FireCustomMissile("MageWandMissileNew",0+1,0,1,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",0-1,0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",-7.5+1,0,1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissileNew",-7.5-1,0,-1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissileNew",-7.5+1,0,1,0,0,7.5);
      A_FireCustomMissile("MageWandMissileNew",-7.5-1,0,-1,0,0,7.5);
      A_FireCustomMissile("MageWandMissileNew",-15+1,0,0,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",-15-1,0,0,0,0,0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissileNew",15+1,0,1,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",15-1,0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",0+1,0,1,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",0-1,0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",-15+1,0,0,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",-15-1,0,0,0,0,0);
	 }
	 else
	 {
      A_FireCustomMissile("MageWandMissileNew",1,0,1,0,0,0);
      A_FireCustomMissile("MageWandMissileNew",-1,0,-1,0,0,0);
	 }
	}
    SWN2 G 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(2); }
	}
    SWN2 H 3 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(2); }
	 A_ReFire;
	}
    Goto Ready
  AltFire:
    SWN2 A 0 A_JumpIf(ACS_NamedExecuteWithResult("UseManaAttack",6,2) == 0, "Ready")
    SWN2 A 3
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
	}
    SWN2 F 3 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",0+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",-15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
	 }
	 else
	 {
      A_FireCustomMissile("MageWandMissile2New",0+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
	 }
	}
    SWN2 G 1
    SWN2 H 1 
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
	}
    SWN2 F 3 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",0+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",-15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
	 }
	 else
	 {
      A_FireCustomMissile("MageWandMissile2New",0+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
	 }
	}
    SWN2 G 1
    SWN2 H 1
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
	}
    SWN2 F 3 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(2); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(1); }
     ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",0+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,-7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",-7.5-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,7.5);
      A_FireCustomMissile("MageWandMissile2New",-15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
      A_FireCustomMissile("MageWandMissile2New",15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",-15-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
	 }
	 else
	 {
      A_FireCustomMissile("MageWandMissile2New",0+1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,1,0,0,0);
      A_FireCustomMissile("MageWandMissile2New",0-1+(random(ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",-1),ACS_NamedExecuteWithResult("GetSapphireWandAltSpread",1))/100.0),0,-1,0,0,0);
	 }
	}
    SWN2 G 1
    SWN2 H 1
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(0); }
	 A_ReFire;
	}
    Goto Ready
  }
}

// Hell Warrior Shield [moved from KDIZD CompatPack
actor HWShieldDefense : PowerProtection
{
 damagefactor "normal", 0.5
 radiusdamagefactor 0.5
 inventory.icon ""
 Powerup.Duration 2147483646
}

actor EWShieldIdleMode : HWShieldDefense { damagefactor "normal", 0.67 radiusdamagefactor 0.67 }
actor EWShieldDefendMode : HWShieldDefense { damagefactor "normal", 0.134 radiusdamagefactor 0.134 }
actor EWShieldDefendModeExtra : HWShieldDefense { damagefactor "normal", 0.0268 radiusdamagefactor 0.0268 }

actor HWShieldBlockHold : PlaceholderItem 
{ 
 +INVENTORY.KEEPDEPLETED
 Inventory.MaxAmount 1
} 

// EVIL WARRIOR'S SHIELD
ACTOR EvilWarriorShield : KDIZDWeapon 25221
{
  //$Category DV-DS KDIZD Weapons
  //$Sprite "EWSHF0"
  Radius 16
  Height 16
  Speed 6
  Weapon.SlotNumber 9
  Weapon.SlotPriority 0.5
  Weapon.BobSpeed 2.0
  Weapon.BobStyle Alpha
  Weapon.KickBack 0
  Tag "Hell Warrior's Shield"
  Inventory.PickupMessage "You got the Hell Warrior's Shield!"
  Obituary "%o was ripped apart by %k's Shield."
  BounceType Doom
  +WEAPON.NOALERT
  +DROPOFF
  States
  {
  Ready:
    EWSP A 0
	{
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Ready3");
	 }
	 else
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Ready2");
	 }
	 else
	 {
      return state("Ready1");
	 }
     return state("");
	}
  Ready1:
	EWS0 D 1 A_WeaponReady(WRF_ALLOWUSER1)
	Goto Ready
  Ready2:
	EWS1 D 1 A_WeaponReady(WRF_ALLOWUSER1)
	Goto Ready
  Ready3:
	EWS2 D 1 A_WeaponReady(WRF_ALLOWUSER1)
	Goto Ready

  Select:
	EWSP DDD 0
	{
	 A_GiveInventory("EWShieldIdleMode",1);
	 A_Raise;
	}
	EWSP D 0
	{
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Select3");
	 }
	 else
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Select2");
	 }
	 else
	 {
      return state("Select1");
	 }
     return state("");
	}
  Select1:
	EWS0 D 1
	{
	 A_GiveInventory("EWShieldIdleMode",1);
	 A_Raise;
	}
	goto Select
  Select2:
	EWS1 D 1
	{
	 A_GiveInventory("EWShieldIdleMode",1);
	 A_Raise;
	}
	goto Select
  Select3:
	EWS2 D 1
	{
	 A_GiveInventory("EWShieldIdleMode",1);
	 A_Raise;
	}
	goto Select

  Deselect:
	EWSP DDD 0
	{
	 A_TakeInventory("EWShieldIdleMode",9999);
	 A_Lower;
	}
	EWSP D 0
	{
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Deselect3");
	 }
	 else
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Deselect2");
	 }
	 else
	 {
      return state("Deselect1");
	 }
     return state("");
	}
  Deselect1:
	EWS0 D 1
	{
	 A_TakeInventory("EWShieldIdleMode",9999);
	 A_Lower;
	}
	goto Deselect
  Deselect2:
	EWS1 D 1
	{
	 A_TakeInventory("EWShieldIdleMode",9999);
	 A_Lower;
	}
	goto Deselect
  Deselect3:
	EWS2 D 1
	{
	 A_TakeInventory("EWShieldIdleMode",9999);
	 A_Lower;
	}
	goto Deselect

  Fire:
    TNT1 A 0
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 5) { if (ACS_NamedExecuteWithResult("UseManaAttack",5,2) == 0) { return state("Ready"); } }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { if (ACS_NamedExecuteWithResult("UseManaAttack",6,2) == 0) { return state("Ready"); } }
	 else if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 1) { if (ACS_NamedExecuteWithResult("UseManaAttack",7,2) == 0) { return state("Ready"); } }
	 else { if (ACS_NamedExecuteWithResult("UseManaAttack",8,2) == 0) { return state("Ready"); } }
	 return state("");
	}
	EWSP D 0
	{
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire3");
	 }
	 else
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("Fire2");
	 }
	 else
	 {
      return state("Fire1");
	 }
     return state("");
	}

  Fire1:
	EWS0 D 2 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
	 // A_ChangeFlag("NOPAIN", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_ChangeFlag("NODAMAGE", 1);	 
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_ChangeFlag("REFLECTIVE", 1);
 	 A_ChangeFlag("SHIELDREFLECT", 1);
	}
	EWS0 C 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
	}
	EWS0 B 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
	}
	EWS0 A 6 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_SetPitch(pitch + 0.5);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
	}
	EWS0 A 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
   	 ACS_NamedExecuteAlways("StartTensionCountDown");

	 if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
	  if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
	  {
       A_PlaySound("crisisattack2",7);
       A_PlaySound("crisisattack",6);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",15,0,0,3,0,0); // Left
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",7.5,0,0,3,0,7.5); // Left-Top
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",7.5,0,0,3,0,-7.5); // Left-Bottom
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",0,0,0,3,0,0); // Center
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-7.5,0,0,3,0,-7.5); // Right-Bottom
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-7.5,0,0,3,0,7.5); // Right-Top
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-15,0,0,3,0,0); // Right
	  }
	  else
	  {
       A_FireCustomMissile("EvilWarriorShieldBall",15,0,0,3,0,0); // Left
       A_FireCustomMissile("EvilWarriorShieldBall",7.5,0,0,3,0,7.5); // Left-Top
       A_FireCustomMissile("EvilWarriorShieldBall",7.5,0,0,3,0,-7.5); // Left-Bottom
       A_FireCustomMissile("EvilWarriorShieldBall",0,0,0,3,0,0); // Center
       A_FireCustomMissile("EvilWarriorShieldBall",-7.5,0,0,3,0,-7.5); // Right-Bottom
       A_FireCustomMissile("EvilWarriorShieldBall",-7.5,0,0,3,0,7.5); // Right-Top
       A_FireCustomMissile("EvilWarriorShieldBall",-15,0,0,3,0,0); // Right
	  }
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
	  if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
	  {
       A_PlaySound("crisisattack2",7);
       A_PlaySound("crisisattack",6);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis", 15, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",  0, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-15, 0, 0, 3);
	  }
	  else
	  {
       A_FireCustomMissile("EvilWarriorShieldBall", 15, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBall",  0, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBall",-15, 0, 0, 3);
	  }
	 }
	 else
	 {
	  if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
	  {
       A_PlaySound("crisisattack2",7);
       A_PlaySound("crisisattack",6);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis", 0, 0, 0, 3);
	  }
	  else
	  {
       A_FireCustomMissile("EvilWarriorShieldBall", 0, 0, 0, 3);
	  }
	 }
     if (random(1,8) == 1) { A_AlertMonsters; }
	 A_Recoil(0.25);
	}
	EWS0 A 6 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_SetPitch(pitch - 0.5);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
	}
	EWS0 B 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
	}
	EWS0 C 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
	}
	EWS0 D 2 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
	 A_TakeInventory("EWShieldDefendMode",9999); // A_ChangeFlag("NODAMAGE", 0);
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 A_ChangeFlag("REFLECTIVE", 0);
 	 A_ChangeFlag("SHIELDREFLECT", 0);
	}
	Goto Ready
  Fire2:
	EWS1 D 2 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
	 // A_ChangeFlag("NOPAIN", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_ChangeFlag("NODAMAGE", 1);	 
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_ChangeFlag("REFLECTIVE", 1);
 	 A_ChangeFlag("SHIELDREFLECT", 1);
	}
	EWS1 C 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
	}
	EWS1 B 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
	}
	EWS1 A 6 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_SetPitch(pitch + 0.5);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
	}
	EWS1 A 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
   	 ACS_NamedExecuteAlways("StartTensionCountDown");

	 if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
	  if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
	  {
       A_PlaySound("crisisattack2",7);
       A_PlaySound("crisisattack",6);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",15,0,0,3,0,0); // Left
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",7.5,0,0,3,0,7.5); // Left-Top
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",7.5,0,0,3,0,-7.5); // Left-Bottom
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",0,0,0,3,0,0); // Center
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-7.5,0,0,3,0,-7.5); // Right-Bottom
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-7.5,0,0,3,0,7.5); // Right-Top
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-15,0,0,3,0,0); // Right
	  }
	  else
	  {
       A_FireCustomMissile("EvilWarriorShieldBall",15,0,0,3,0,0); // Left
       A_FireCustomMissile("EvilWarriorShieldBall",7.5,0,0,3,0,7.5); // Left-Top
       A_FireCustomMissile("EvilWarriorShieldBall",7.5,0,0,3,0,-7.5); // Left-Bottom
       A_FireCustomMissile("EvilWarriorShieldBall",0,0,0,3,0,0); // Center
       A_FireCustomMissile("EvilWarriorShieldBall",-7.5,0,0,3,0,-7.5); // Right-Bottom
       A_FireCustomMissile("EvilWarriorShieldBall",-7.5,0,0,3,0,7.5); // Right-Top
       A_FireCustomMissile("EvilWarriorShieldBall",-15,0,0,3,0,0); // Right
	  }
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
	  if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
	  {
       A_PlaySound("crisisattack2",7);
       A_PlaySound("crisisattack",6);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis", 15, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",  0, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-15, 0, 0, 3);
	  }
	  else
	  {
       A_FireCustomMissile("EvilWarriorShieldBall", 15, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBall",  0, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBall",-15, 0, 0, 3);
	  }
	 }
	 else
	 {
	  if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
	  {
       A_PlaySound("crisisattack2",7);
       A_PlaySound("crisisattack",6);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis", 0, 0, 0, 3);
	  }
	  else
	  {
       A_FireCustomMissile("EvilWarriorShieldBall", 0, 0, 0, 3);
	  }
 	 }
     if (random(1,8) == 1) { A_AlertMonsters; }
	 A_Recoil(0.375);
	}
	EWS1 A 6 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_SetPitch(pitch - 0.5);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
	}
	EWS1 B 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
	}
	EWS1 C 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
	}
	EWS1 D 2 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
	 A_TakeInventory("EWShieldDefendMode",9999); // A_ChangeFlag("NODAMAGE", 0);
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 A_ChangeFlag("REFLECTIVE", 0);
 	 A_ChangeFlag("SHIELDREFLECT", 0);
	}
	Goto Ready
  Fire3:
	EWS2 D 2 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
	 // A_ChangeFlag("NOPAIN", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_ChangeFlag("NODAMAGE", 1);	 
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_ChangeFlag("REFLECTIVE", 1);
 	 A_ChangeFlag("SHIELDREFLECT", 1);
	}
	EWS2 C 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
	}
	EWS2 B 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
	}
	EWS2 A 6 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_SetPitch(pitch + 0.5);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
	}
	EWS2 A 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
   	 ACS_NamedExecuteAlways("StartTensionCountDown");

	 if (CountInv("CriticalHealth",AAPTR_PLAYER1) > 0) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { if (CountInv("LowHealth",AAPTR_PLAYER1) > 0) { if (random(1,4) == 4) { A_GiveInventory("PlayerCanUseCrisisAttacks",1,AAPTR_PLAYER1); } else { A_TakeInventory("PlayerCanUseCrisisAttacks",9999,AAPTR_PLAYER1); } } }	   
	 if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
	 {
	  if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
	  {
       A_PlaySound("crisisattack2",7);
       A_PlaySound("crisisattack",6);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",15,0,0,3,0,0); // Left
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",7.5,0,0,3,0,7.5); // Left-Top
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",7.5,0,0,3,0,-7.5); // Left-Bottom
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",0,0,0,3,0,0); // Center
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-7.5,0,0,3,0,-7.5); // Right-Bottom
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-7.5,0,0,3,0,7.5); // Right-Top
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-15,0,0,3,0,0); // Right
	  }
	  else
	  {
       A_FireCustomMissile("EvilWarriorShieldBall",15,0,0,3,0,0); // Left
       A_FireCustomMissile("EvilWarriorShieldBall",7.5,0,0,3,0,7.5); // Left-Top
       A_FireCustomMissile("EvilWarriorShieldBall",7.5,0,0,3,0,-7.5); // Left-Bottom
       A_FireCustomMissile("EvilWarriorShieldBall",0,0,0,3,0,0); // Center
       A_FireCustomMissile("EvilWarriorShieldBall",-7.5,0,0,3,0,-7.5); // Right-Bottom
       A_FireCustomMissile("EvilWarriorShieldBall",-7.5,0,0,3,0,7.5); // Right-Top
       A_FireCustomMissile("EvilWarriorShieldBall",-15,0,0,3,0,0); // Right
	  }
	 }
	 else
	 if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
	 {
	  if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
	  {
       A_PlaySound("crisisattack2",7);
       A_PlaySound("crisisattack",6);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis", 15, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",  0, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis",-15, 0, 0, 3);
	  }
	  else
	  {
       A_FireCustomMissile("EvilWarriorShieldBall", 15, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBall",  0, 0, 0, 3);
       A_FireCustomMissile("EvilWarriorShieldBall",-15, 0, 0, 3);
	  }
	 }
	 else
	 {
	  if (CountInv("PlayerCanUseCrisisAttacks",AAPTR_PLAYER1) > 0)
	  {
       A_PlaySound("crisisattack2",7);
       A_PlaySound("crisisattack",6);
       A_FireCustomMissile("EvilWarriorShieldBallCrisis", 0, 0, 0, 3);
	  }
	  else
	  {
       A_FireCustomMissile("EvilWarriorShieldBall", 0, 0, 0, 3);
	  }
	 }
     if (random(1,8) == 1) { A_AlertMonsters; }
	 A_Recoil(0.5);
	}
	EWS2 A 6 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_SetPitch(pitch - 0.5);
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 2) { A_SetTics(5); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 4) { A_SetTics(4); }
	}
	EWS2 B 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 1) { A_SetTics(1); }
	}
	EWS2 C 2 Bright
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 3) { A_SetTics(1); }
	}
	EWS2 D 2 Bright
	{
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10053) >= 5) { A_SetTics(1); }
	 A_TakeInventory("EWShieldDefendMode",9999); // A_ChangeFlag("NODAMAGE", 0);
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 A_ChangeFlag("REFLECTIVE", 0);
 	 A_ChangeFlag("SHIELDREFLECT", 0);
	}
	Goto Ready

  AltFire:
	EWSP D 0
	{
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("AltFire3");
	 }
	 else
	 if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) >= 1)
	 {
      return state("AltFire2");
	 }
	 else
	 {
      return state("AltFire1");
	 }
     return state("");
	}

  AltFire1:
	EWS0 D 2
	{
	 // A_ChangeFlag("NOPAIN", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_ChangeFlag("NODAMAGE", 1);	 
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_ChangeFlag("REFLECTIVE", 1);
 	 A_ChangeFlag("SHIELDREFLECT", 1);
	}
	EWS0 EF 2
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	}
  AltHold1:
	EWS0 G 2 BRIGHT
	{
     if (ACS_NamedExecuteWithResult("UseStaminaAttack",10,2) == 0) { return state("AltEnd1"); }
	 A_GiveInventory("HWShieldBlockHold",1);
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) != 1) 
	 {
      A_WeaponReady(WRF_NOFIRE|WRF_ALLOWUSER1|WRF_DISABLESWITCH);
	 }
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 return state("");
	}
	EWS0 G 0 A_Refire("AltHold1")
	goto AltEnd1
  AltEnd1:
	EWS0 FE 2
	{
	 A_TakeInventory("HWShieldBlockHold",9999);
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	}
	EWS0 D 2
	{
	 A_TakeInventory("EWShieldDefendMode",9999); // A_ChangeFlag("NODAMAGE", 0);
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 A_ChangeFlag("REFLECTIVE", 0);
 	 A_ChangeFlag("SHIELDREFLECT", 0);
	}
	Goto Ready
  AltFire2:
	EWS1 D 2
	{
	 // A_ChangeFlag("NOPAIN", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_ChangeFlag("NODAMAGE", 1);	 
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_ChangeFlag("REFLECTIVE", 1);
 	 A_ChangeFlag("SHIELDREFLECT", 1);
	}
	EWS1 EF 2
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	}
  AltHold2:
	EWS1 G 2 BRIGHT
	{
     if (ACS_NamedExecuteWithResult("UseStaminaAttack",15,2) == 0) { return state("AltEnd2"); }
	 A_GiveInventory("HWShieldBlockHold",1);
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) != 1) 
	 {
      A_WeaponReady(WRF_NOFIRE|WRF_ALLOWUSER1|WRF_DISABLESWITCH);
	 }
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 return state("");
	}
	EWS1 G 0 A_Refire("AltHold2")
	goto AltEnd2
  AltEnd2:
	EWS1 FE 2
	{
	 A_TakeInventory("HWShieldBlockHold",9999);
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	}
	EWS1 D 2
	{
	 A_TakeInventory("EWShieldDefendMode",9999); // A_ChangeFlag("NODAMAGE", 0);
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 A_ChangeFlag("REFLECTIVE", 0);
 	 A_ChangeFlag("SHIELDREFLECT", 0);
	}
	Goto Ready
  AltFire3:
	EWS2 D 2
	{
	 // A_ChangeFlag("NOPAIN", 1);
	 A_GiveInventory("EWShieldDefendMode",1); // A_ChangeFlag("NODAMAGE", 1);	 
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 A_ChangeFlag("REFLECTIVE", 1);
 	 A_ChangeFlag("SHIELDREFLECT", 1);
	}
	EWS2 EF 2
	{
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	}
  AltHold3:
	EWS2 G 2 BRIGHT
	{
     if (ACS_NamedExecuteWithResult("UseStaminaAttack",20,2) == 0) { return state("AltEnd3"); }
	 A_GiveInventory("HWShieldBlockHold",1);
     A_WeaponReady(WRF_NOFIRE|WRF_ALLOWUSER1|WRF_DISABLESWITCH);
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	 return state("");
	}
	EWS2 G 0 A_Refire("AltHold3")
	goto AltEnd3
  AltEnd3:
	EWS2 FE 2
	{
	 A_TakeInventory("HWShieldBlockHold",9999);
	 A_TakeInventory("EWShieldDefendModeExtra",9999); // A_ChangeFlag("NODAMAGE", 1);	 
	 if (random(1,4) == 1) { A_GiveInventory("EWShieldDefendModeExtra",1); } 
	}
	EWS2 D 2
	{
	 A_TakeInventory("EWShieldDefendMode",9999); // A_ChangeFlag("NODAMAGE", 0);
	 A_TakeInventory("EWShieldDefendModeExtra",9999);
	 A_ChangeFlag("REFLECTIVE", 0);
 	 A_ChangeFlag("SHIELDREFLECT", 0);
	}
	Goto Ready

  Spawn:
	EWSH ABCDEFGH 3
	Goto Spawn2
  Spawn2:
	EWSH I -1
	Stop

  User1: // Kick - Hell Warrior version
    TNT1 A 0
	{
	 if (CountInv("FloraInPlay",AAPTR_PLAYER1) != 1) 
	 {
      if (CountInv("DeggarisInPlay",AAPTR_PLAYER1) == 1) { return state("AltHold1");  }	 
      if (CountInv("IlluciaInPlay",AAPTR_PLAYER1) == 1) { return state("AltHold2");  }	 
	 }
	 if (ACS_NamedExecuteWithResult("UseStaminaAttack",ACS_NamedExecuteWithResult("GetKickStaminaUse",0),2) == 0) 
	 {
	  if (CountInv("HWShieldBlockHold",AAPTR_PLAYER1) > 0) { return state("AltHold3"); }
	  return state("Ready"); 
	 }
     return state(""); 
	}
	TNT1 A 0
	{
	 if (random(1,256) >= 253)
	 {
	  if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
	  else
	  {
	   A_AlertMonsters; // Sometimes a swing will be enough to wake up all monsters in the area.
	  }
	 }
	 ACS_NamedExecuteAlways("StartTensionCountDown");
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("KickAttackDEFLvl2",1); } else { A_GiveInventory("KickAttackDEFLvl1",1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("MartArtsMaster2",1); }
	 if (ACS_NamedExecuteWithResult("MiscVarCheckDECORATE",10035) == 4) { A_GiveInventory("MartArtsMaster1",1); }
	 if (random(1,256) > 64) { A_GiveInventory("KickCritBonus1",1,AAPTR_PLAYER1); } else { A_GiveInventory("KickCritBonus2",1,AAPTR_PLAYER1); }
	 A_GiveInventory("UsingMeleeAttack",1);
	}
	goto KickStart
  KickEnd:
    TNT1 A 0
	{
	 A_TakeInventory("KickCritBonus1",9999);
	 A_TakeInventory("KickCritBonus2",9999);
	 A_TakeInventory("KickAttackDEFLvl1",9999);
	 A_TakeInventory("KickAttackDEFLvl2",9999);
	 A_TakeInventory("MartArtsMaster1",9999);
	 A_TakeInventory("MartArtsMaster2",9999);
	 if (CountInv("HWShieldBlockHold",AAPTR_PLAYER1) > 0) { return state("AltHold3"); }
	 return state("");
	}
    goto Ready

  }
}

ACTOR EvilWarriorShieldBall
{
	Radius 6
	Height 8
	Speed 8
	Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",52)) // 2
	PROJECTILE
	RenderStyle Add
    +RANDOMIZE
	+RIPPER
	Alpha 0.8
	Scale 0.4
	ProjectileKickBack 0
    SeeSound "hellwarrior/shotfire"
    DeathSound "hellwarrior/shothit"
	States
	{
    Spawn:
        GRBA ABCDEFGH 2 Bright
        Loop
    Death:
        GRBA AIJKLMN 3 Bright
        Stop
	}
}

ACTOR EvilWarriorShieldBallCrisis : EvilWarriorShieldBall
{
	ProjectileKickBack 0
	Damage (ACS_NamedExecuteWithResult("GetPlayerATKDMG",52) * ACS_NamedExecuteWithResult("CrisisMultiplier")) // 2
	States
	{
    Spawn:
        GRBA ABCDEFGH 2 Bright A_SpawnItemEx("EvilWarriorShieldBallCrisisParticle",0,0,0,0,0,1.28)
        Loop
    Death:
        GRBA AIJKLMN 3 Bright
        Stop
	}
}

// BUBBLES :V
ACTOR HubbleBubbleSmall
{
  var int user_ripperinterval; var int user_maxripperinterval; var int user_halfmaxripperinterval;
  var int user_bubbletimer; var int user_maxbubbletimer;
  var int user_transpulsetype;
  var int user_sizepulsetype;
  var int user_damageradius;
  var int user_velx; var int user_vely; var int user_velz;

  Radius 6 // 573 wide
  Height 6 // 569 tall
  Scale 0.05
  Speed 1.5
  Damage (0)
  Projectile
  +ROLLSPRITE
  +ROLLCENTER

  +BLOODLESSIMPACT
  +RIPPER
  +FOILINVUL
  +NOEXPLODEFLOOR
  +PIERCEARMOR
  +PAINLESS
  +FORCERADIUSDMG
  +NODAMAGETHRUST
  +DONTREFLECT
  +BOUNCEONWALLS
  +BOUNCEONFLOORS
  +BOUNCEONCEILINGS
  +NOBOUNCESOUND
  +SPECTRAL
  +THRUSPECIES +MTHRUSPECIES

  //+NOINTERACTION
  Species "Players"
  BounceType Doom
  ProjectileKickBack 0
  BounceFactor 1.0
  WallBounceFactor 1.0
  RenderStyle Add
  Alpha 0.8
//  SeeSound "imp/attack"
//  DeathSound "imp/shotx"
  States
  {
  Spawn:
    HUBB A 0 NoDelay Bright
	{
	 A_SetUserVar("user_transpulsetype",0);
	 A_SetUserVar("user_sizepulsetype",0);
	 A_SetUserVar("user_maxbubbletimer",random(270,315));
	 A_SetUserVar("user_maxripperinterval",random(16,24));
     A_SetUserVar("user_maxripperinterval",user_maxripperinterval-(CallACS("StatCheck",6)/16)); // Sorcery
     A_SetUserVar("user_maxripperinterval",user_maxripperinterval-(CallACS("StatCheck",8)/32)); // Therapeusis
	 if (user_maxripperinterval < 4) { A_SetUserVar("user_maxripperinterval",4); }
	 A_SetUserVar("user_halfmaxripperinterval",user_maxripperinterval/2);
	 Thing_ChangeTID(0,5001);
	}
  Idle:
    HUBB A 1 Bright
	{
	 A_ScaleVelocity(1.0005);
	 if (scaleX <= 0.0475 && scaleY <= 0.0475) { A_SetUserVar("user_sizepulsetype",1); } // Set to Expand
	 if (scaleX >= 0.0525 && scaleY >= 0.0525) { A_SetUserVar("user_sizepulsetype",0); } // Set to Shrink
     if(user_sizepulsetype == 0) { A_SetScale(scaleX-0.000125,scaleY-0.000125); } // Shrinking
     if(user_sizepulsetype == 1) { A_SetScale(scaleX+0.000125,scaleY+0.000125); } // Expanding

	 if (alpha <= 0.64) { A_SetUserVar("user_transpulsetype",1); } // Set to Fade In
	 if (alpha >= 0.96) { A_SetUserVar("user_transpulsetype",0); } // Set to Fade Out
     if(user_transpulsetype == 0) { A_FadeOut(0.025); } // Fading Out
     if(user_transpulsetype == 1) { A_FadeIn(0.025); } // Fading In

     A_SetUserVar("user_damageradius",32);
	 A_SetRoll(roll+4,SPF_INTERPOLATE,AAPTR_DEFAULT);
	 A_SetUserVar("user_ripperinterval",user_ripperinterval+1);
	 if (user_ripperinterval < user_maxripperinterval)
	 {
	  A_ChangeFlag("PAINLESS",1);
	  A_ChangeFlag("FORCEPAIN",0);
	 }
	 if (user_ripperinterval == user_halfmaxripperinterval)
	 {
	  if (random(1,4) == 1) 
	  { 
	   A_Explode(ACS_NamedExecuteWithResult("GetPlayerATKDMG",46),user_damageradius,0,0,user_damageradius); 
	   A_ChangeFlag("PAINLESS",0); 
	   A_ChangeFlag("FORCEPAIN",1);
	  }
	 }
	 if (user_ripperinterval >= user_maxripperinterval)
	 {
	  A_Explode(ACS_NamedExecuteWithResult("GetPlayerATKDMG",46),user_damageradius,0,0,user_damageradius);
	  A_ChangeFlag("PAINLESS",0);
	  A_ChangeFlag("FORCEPAIN",1);
      A_SetUserVar("user_ripperinterval",0);
	  A_SetUserVar("user_maxripperinterval",random(16,24));
      A_SetUserVar("user_maxripperinterval",user_maxripperinterval-(CallACS("StatCheck",6)/16)); // Sorcery
      A_SetUserVar("user_maxripperinterval",user_maxripperinterval-(CallACS("StatCheck",8)/32)); // Therapeusis
	  if (user_maxripperinterval < 4) { A_SetUserVar("user_maxripperinterval",4); }
	  A_SetUserVar("user_halfmaxripperinterval",user_maxripperinterval/2);
	 }
	 A_SetUserVar("user_bubbletimer",user_bubbletimer+1);
	 if (user_bubbletimer >= user_maxbubbletimer) { return state("Death"); }
	 return state("");
	}
    Loop

  Pop:
  Death:
    TNT1 A 0 Bright
	{
     A_SetUserVar("user_damageradius",128);
	 A_ChangeFlag("PAINLESS",0);
	 A_ChangeFlag("FORCEPAIN",1);
	 A_PlaySound("HubbleBubblePop");
	 A_Explode((ACS_NamedExecuteWithResult("GetPlayerATKDMG",46)*4),user_damageradius,0,0,user_damageradius); 
	 if (random(1,2) == 1) { return state("Death1"); } else { return state("Death2"); }
     return state("");
    }
  Death1:
	HUBB BCDE 1 Bright
	{
	 A_ScaleVelocity(0.0);
	 A_SetScale(scaleX*1.250,scaleY*1.250);
	}
    Stop
  Death2:
	HUBB FGHIJ 1 Bright
	{
	 A_ScaleVelocity(0.0);
	 A_SetScale(scaleX*1.125,scaleY*1.125);
	}
    Stop
  }
}

ACTOR HubbleBubbleLarge : HubbleBubbleSmall
{
  Radius 15 // 573 wide
  Height 15 // 569 tall
  Scale 0.10
  Speed 1.125

  States
  {
  Spawn:
    HUBB A 0 NoDelay Bright
	{
	 A_SetUserVar("user_transpulsetype",0);
	 A_SetUserVar("user_sizepulsetype",0);
	 A_SetUserVar("user_maxbubbletimer",random(405,467));
	 A_SetUserVar("user_maxripperinterval",random(16,24));
     A_SetUserVar("user_maxripperinterval",user_maxripperinterval-(CallACS("StatCheck",6)/16)); // Sorcery
     A_SetUserVar("user_maxripperinterval",user_maxripperinterval-(CallACS("StatCheck",8)/32)); // Therapeusis
	 if (user_maxripperinterval < 4) { A_SetUserVar("user_maxripperinterval",4); }
	 A_SetUserVar("user_halfmaxripperinterval",user_maxripperinterval/2);
	 Thing_ChangeTID(0,5001);
	}
  Idle:
    HUBB A 1 Bright
	{
	 A_ScaleVelocity(1.0002);

	 if (scaleX <= 0.095 && scaleY <= 0.095) { A_SetUserVar("user_sizepulsetype",1); } // Set to Expand
	 if (scaleX >= 0.105 && scaleY >= 0.105) { A_SetUserVar("user_sizepulsetype",0); } // Set to Shrink
     if (user_sizepulsetype == 0) { A_SetScale(scaleX-0.00025,scaleY-0.00025); } // Shrinking
     if (user_sizepulsetype == 1) { A_SetScale(scaleX+0.00025,scaleY+0.00025); } // Expanding

	 if (alpha <= 0.64) { A_SetUserVar("user_transpulsetype",1); } // Set to Fade In
	 if (alpha >= 0.96) { A_SetUserVar("user_transpulsetype",0); } // Set to Fade Out
     if(user_transpulsetype == 0) { A_FadeOut(0.025); } // Fading Out
     if(user_transpulsetype == 1) { A_FadeIn(0.025); } // Fading In

     A_SetUserVar("user_damageradius",64);
	 A_SetRoll(roll+4,SPF_INTERPOLATE,AAPTR_DEFAULT);
	 A_SetUserVar("user_ripperinterval",user_ripperinterval+1);
	 if (user_ripperinterval < user_maxripperinterval)
	 {
	  A_ChangeFlag("PAINLESS",1);
	  A_ChangeFlag("FORCEPAIN",0);
	 }
	 if (user_ripperinterval == user_halfmaxripperinterval)
	 {
	  if (random(1,8) <= 3) 
	  { 
	   A_Explode(ACS_NamedExecuteWithResult("GetPlayerATKDMG",47),user_damageradius,0,0,user_damageradius); 
	   A_ChangeFlag("PAINLESS",0); 
	   A_ChangeFlag("FORCEPAIN",1);
	  }
	 }
	 if (user_ripperinterval >= user_maxripperinterval)
	 {
	  A_Explode(ACS_NamedExecuteWithResult("GetPlayerATKDMG",47),user_damageradius,0,0,user_damageradius);
	  A_ChangeFlag("PAINLESS",0);
	  A_ChangeFlag("FORCEPAIN",1);
      A_SetUserVar("user_ripperinterval",0);
	  A_SetUserVar("user_maxripperinterval",random(16,24));
      A_SetUserVar("user_maxripperinterval",user_maxripperinterval-(CallACS("StatCheck",6)/16)); // Sorcery
      A_SetUserVar("user_maxripperinterval",user_maxripperinterval-(CallACS("StatCheck",8)/32)); // Therapeusis
	  if (user_maxripperinterval < 4) { A_SetUserVar("user_maxripperinterval",4); }
	  A_SetUserVar("user_halfmaxripperinterval",user_maxripperinterval/2);
	 }
	 A_SetUserVar("user_bubbletimer",user_bubbletimer+1);
	 if (user_bubbletimer >= user_maxbubbletimer) { return state("Death"); }
	 return state("");
	}
    Loop

  Pop:
  Death:
    TNT1 A 0 Bright
	{
     A_SetUserVar("user_damageradius",256);
	 A_ChangeFlag("PAINLESS",0);
	 A_ChangeFlag("FORCEPAIN",1);
	 A_PlaySound("HubbleBubblePop");
	 A_Explode((ACS_NamedExecuteWithResult("GetPlayerATKDMG",47)*4),user_damageradius,0,0,user_damageradius); 
	 if (random(1,2) == 1) { return state("Death1"); } else { return state("Death2"); }
     return state("");
    }
  Death1:
	HUBB BCDE 1 Bright
	{
	 A_ScaleVelocity(0.0);
	 A_SetScale(scaleX*1.125,scaleY*1.125);
	}
    Stop
  Death2:
	HUBB FGHIJ 1 Bright
	{
	 A_ScaleVelocity(0.0);
	 A_SetScale(scaleX*1.125,scaleY*1.125);
	}
    Stop
  }
}

/*
actor BoomSource
{
  Height 1
  Radius 1
  Scale 0.01
  Speed 0
  Damage (0)
  Projectile
  +BLOODLESSIMPACT
  +RIPPER
  +FOILINVUL
  +NOEXPLODEFLOOR
  +PIERCEARMOR
  +PAINLESS
  +FORCERADIUSDMG
  +NODAMAGETHRUST
  +DONTREFLECT
  +SPECTRAL
  +THRUSPECIES +MTHRUSPECIES

  Species "Players"
  RenderStyle None
  Alpha 0.0
  states
  {
  Spawn:
    TNT1 A 0
	{
	 A_SetAngle(frandom(0.0,359.9));
	}
  Death:
  }
}
*/