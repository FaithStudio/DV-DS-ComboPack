class BaseHellcorePickup : AetheriusCustomInventory
{
	default
	{
		Scale 0.125;
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		FloatBobPhase 4; // Set this to the same value for the base soul pickup and the spawn to sync their spawn positions
	}
	
	int sparktimer;
	int sparktimermax;
	int scaletimer;

	override void PostBeginPlay() // "invoker." is not needed in non-action functions
	{
		if (Owner == NULL) // Powerups cannot exist outside an inventory
		{
			sparktimermax = random(3,9) * 15;
			sparktimer = 0;
			if (dvdsdebug_hellcorepickups) Console.Printf("(sparktimer): %d / %d", sparktimer, sparktimermax);
		}
		
		Super.PostBeginPlay();
	}
	
	override void Tick() // "invoker." is not needed in non-action functions
	{
		if (Owner == NULL) // Powerups cannot exist outside an inventory
		{
			sparktimer++;
			if (sparktimer >= sparktimermax)
			{
				A_StartSound("elecstun",31, CHANF_DEFAULT, 1.0, ATTN_NORM, frandom(1.25,1.75));
				sparktimermax = random(3,9) * 15;
				sparktimer = 0;
				A_SpawnItemEx("HellSoulSpark",0.0,0.0,0.0,0.0,0.0,0.0,0.0,SXF_SETTARGET);
			}
			if (dvdsdebug_hellcorepickups) Console.Printf("sparktimer: %d / %d", sparktimer, sparktimermax);
		}
		
		Super.Tick();
	}

	action void A_HellCoreSoulPickupPulse(double xsc = 1.0, double ysc = 1.0)
	{
		invoker.scaletimer++;
		if (invoker.scaletimer > 39) { invoker.scaletimer = 0; }
		if (invoker.scaletimer == 0) { scale.x = scale.y = 0.125; }
		if (invoker.scaletimer == 1 || invoker.scaletimer == 39) { scale.x = scale.y = 0.12625; }
		if (invoker.scaletimer == 2 || invoker.scaletimer == 38) { scale.x = scale.y = 0.1275; }
		if (invoker.scaletimer == 3 || invoker.scaletimer == 37) { scale.x = scale.y = 0.12875; }
		if (invoker.scaletimer == 4 || invoker.scaletimer == 36) { scale.x = scale.y = 0.13; }
		if (invoker.scaletimer == 5 || invoker.scaletimer == 35) { scale.x = scale.y = 0.13125; }
		if (invoker.scaletimer == 6 || invoker.scaletimer == 34) { scale.x = scale.y = 0.1325; }
		if (invoker.scaletimer == 7 || invoker.scaletimer == 33) { scale.x = scale.y = 0.13375; }
		if (invoker.scaletimer == 8 || invoker.scaletimer == 32) { scale.x = scale.y = 0.135; }
		if (invoker.scaletimer == 9 || invoker.scaletimer == 31) { scale.x = scale.y = 0.13625; }
		if (invoker.scaletimer == 10 || invoker.scaletimer == 30) { scale.x = scale.y = 0.1375; }
		if (invoker.scaletimer == 11 || invoker.scaletimer == 29) { scale.x = scale.y = 0.13875; }
		if (invoker.scaletimer == 12 || invoker.scaletimer == 28) { scale.x = scale.y = 0.14; }
		if (invoker.scaletimer == 13 || invoker.scaletimer == 27) { scale.x = scale.y = 0.14125; }
		if (invoker.scaletimer == 14 || invoker.scaletimer == 26) { scale.x = scale.y = 0.1425; }
		if (invoker.scaletimer == 15 || invoker.scaletimer == 25) { scale.x = scale.y = 0.14375; }
		if (invoker.scaletimer == 16 || invoker.scaletimer == 24) { scale.x = scale.y = 0.145; }
		if (invoker.scaletimer == 17 || invoker.scaletimer == 23) { scale.x = scale.y = 0.14625; }
		if (invoker.scaletimer == 18 || invoker.scaletimer == 22) { scale.x = scale.y = 0.1475; }
		if (invoker.scaletimer == 19 || invoker.scaletimer == 21) { scale.x = scale.y = 0.14875; }
		if (invoker.scaletimer == 20) { scale.x = scale.y = 0.15; }
		scale.x *= xsc;
		scale.y *= ysc;

		if (dvdsdebug_hellcorepickups) Console.Printf("(sc-x): %8f, (sc-y): %8f", scale.x, scale.y, alpha, floatbobphase);
	}
	
}
class HellSoulSpark : AetheriusBaseZSC
{
	Default
	{
		Scale 0.125;
		RenderStyle "Add";
		Alpha 0.75;
		+FLOATBOB;
		+DONTGIB;
		FloatBobPhase 4; // Set this to the same value for the base soul pickup and the spawn to sync their spawn positions
	}

	override void Tick()
	{
		if (target)
		{
			double rand = frandom(0.90,1.10);
			scale.x = (target.scale.x * rand);
			scale.y = (target.scale.y * rand);
			double rand2 = frandom(0.75,1.25);
			alpha = (target.alpha * (0.5 * rand2));
			floatbobphase = target.floatbobphase;
			A_Warp(AAPTR_TARGET,0.0,0.0,0.0,0.0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
			
			if (dvdsdebug_hellcorepickups) Console.Printf("sc-x: %8f, sc-y: %8f, alpha: %8f, fbp: %d", scale.x, scale.y, alpha, floatbobphase);
		}

		super.Tick();
	}
	
	States
	{
		Spawn:
			HCSS ABCDEFEDCBA 1 bright;
			stop;
	}
}


class BaseHellcoreWeapon : QuickMeleeWeaponZSC
{
	double soulbobxbasex;
	double soulbobxrandxmin;
	double soulbobxrandxmax;
	double soulbobxetimemulmin;
	double soulbobxetimemulmax;
	double soulbobxspeedmod;
	double soulbobxheightmodmin;
	double soulbobxheightmodmax;

	double soulbobybasey;
	double soulbobyrandymin;
	double soulbobyrandymax;
	double soulbobyspeedmod;
	double soulbobyheightmodmin;
	double soulbobyheightmodmax;

	double soulbobx;
	double soulboby;
	
	int shotsfired;

	property bobxbasex: soulbobxbasex;
	property bobxrandx: soulbobxrandxmin, soulbobxrandxmax;
	property bobxetimemul: soulbobxetimemulmin, soulbobxetimemulmax;
	property bobxspeedmod: soulbobxspeedmod;
	property bobxheightmod: soulbobxheightmodmin, soulbobxheightmodmax;

	property bobybasey: soulbobybasey;
	property bobyrandy: soulbobyrandymin, soulbobyrandymax;
	property bobyspeedmod: soulbobyspeedmod;
	property bobyheightmod: soulbobyheightmodmin, soulbobyheightmodmax;

	Default
	{
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOALERT;
		Weapon.BobRangeX 0.1;
		Weapon.BobRangeY 0.1;
		Weapon.BobSpeed 0.1;
		Weapon.BobStyle "Smooth";

		BaseHellcoreWeapon.bobxbasex 0.0;
		BaseHellcoreWeapon.bobxrandx 0.0, 0.0;
		BaseHellcoreWeapon.bobxetimemul 0.2475, 0.2525;
		BaseHellcoreWeapon.bobxspeedmod 1.0;
		BaseHellcoreWeapon.bobxheightmod 4.875, 5.125;
		BaseHellcoreWeapon.bobybasey 0.0;
		BaseHellcoreWeapon.bobyrandy 0.0, 0.0;
		BaseHellcoreWeapon.bobyspeedmod 8.0;
		BaseHellcoreWeapon.bobyheightmod 8.0, 8.0;
	}
	
	action void A_HellSoulOverlayReady()
	{
		A_Overlay(4,"SoulUnderLayer",true);
		A_Overlay(5,"SoulImage",true);
		A_Overlay(6,"SoulOverLayer",true);
		A_Overlay(-63,"LayerFloatControl",true);
	}
	
	action void A_HellSoulClearOverlays()
	{
		A_Overlay(4,"EndLayer",false);
		A_Overlay(5,"EndLayer",false);
		A_Overlay(6,"EndLayer",false);
		A_Overlay(-63,"EndLayer",false);
	}
	
	action void A_HellSoulSpark()
	{
		A_Overlay(3,"SoulSparkUnder",false);
		A_Overlay(7,"SoulSparkUnder",false);
	}
	
	action void A_HellSoulFire1(string sndname = "", int heatamt = 0, string name1 = "", string name2 = "", int checknum = 0, bool usetension = true, bool hurtplayeroh = true)
	{
		A_StartSound(sndname,101);
		A_IncreaseHellcoreHeat(heatamt,hurtplayeroh); // +1.0% Hellcore Heat, Deal Damage if already above 100% Heat
		if (usetension) CallACS("StartTensionCountDown");

		if (A_HellCoreCrisisCheck() > 0)
		{
			A_PlayCrisisAtkSound();
			A_SpreadAuraFireProjectile(name2,0,0,"",0,0,0,0); 
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 4) 
			{
				A_SpreadAuraFireProjectile(name2,0-15,0,"",0,0,0,0); 
				A_SpreadAuraFireProjectile(name2,0+15,0,"",0,0,0,0); 
			}
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 7) 
			{
				A_SpreadAuraFireProjectile(name2,0-30,0,"",0,0,0,0); 
				A_SpreadAuraFireProjectile(name2,0+30,0,"",0,0,0,0); 
			}
		}
		else
		{
			A_SpreadAuraFireProjectile(name1,0,0,"",0,0,0,0); 
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 4) 
			{
				A_SpreadAuraFireProjectile(name1,0-15,0,"",0,0,0,0); 
				A_SpreadAuraFireProjectile(name1,0+15,0,"",0,0,0,0); 
			}
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 7) 
			{
				A_SpreadAuraFireProjectile(name1,0-30,0,"",0,0,0,0); 
				A_SpreadAuraFireProjectile(name1,0+30,0,"",0,0,0,0); 
			}
		}
	}

	action void A_HellSoulFire2(string sndname = "", int heatamt = 0, string name1 = "DIPuff-Claw", int checknum = 0, bool usetension = true, bool hurtplayeroh = true)
	{
		A_StartSound(sndname,101);
		A_IncreaseHellcoreHeat(heatamt,hurtplayeroh); // +6.0% Hellcore Heat, Deal Damage if already above 100% Heat
		if (usetension) CallACS("StartTensionCountDown");

		if (A_HellCoreCrisisCheck() > 0)
		{
			A_PlayCrisisAtkSound();
			A_SpreadAuraFireBullets(30,0,10,(random(1,3)*3)*CallACS("CrisisMultiplier"),name1,FBF_NORANDOM|FBF_NORANDOMPUFFZ,FBF_NORANDOM|FBF_NORANDOMPUFFZ,16384,"",0,0,2,"Cell");
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 4) 
			{
				A_SetAngle(angle-15);
				A_SpreadAuraFireBullets(30,0,10,(random(1,3)*3)*CallACS("CrisisMultiplier"),name1,FBF_NORANDOM|FBF_NORANDOMPUFFZ,FBF_NORANDOM|FBF_NORANDOMPUFFZ,16384,"",0,0,2,"Cell");
				A_SetAngle(angle+30);
				A_SpreadAuraFireBullets(30,0,10,(random(1,3)*3)*CallACS("CrisisMultiplier"),name1,FBF_NORANDOM|FBF_NORANDOMPUFFZ,FBF_NORANDOM|FBF_NORANDOMPUFFZ,16384,"",0,0,2,"Cell");
				A_SetAngle(angle-15);
			}
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 7) 
			{
				A_SetAngle(angle-30);
				A_SpreadAuraFireBullets(30,0,10,(random(1,3)*3)*CallACS("CrisisMultiplier"),name1,FBF_NORANDOM|FBF_NORANDOMPUFFZ,FBF_NORANDOM|FBF_NORANDOMPUFFZ,16384,"",0,0,2,"Cell");
				A_SetAngle(angle+60);
				A_SpreadAuraFireBullets(30,0,10,(random(1,3)*3)*CallACS("CrisisMultiplier"),name1,FBF_NORANDOM|FBF_NORANDOMPUFFZ,FBF_NORANDOM|FBF_NORANDOMPUFFZ,16384,"",0,0,2,"Cell");
				A_SetAngle(angle-30);
			}
		}
		else
		{
			A_SpreadAuraFireBullets(30,0,10,random(1,3)*3,name1,FBF_NORANDOM|FBF_NORANDOMPUFFZ,FBF_NORANDOM|FBF_NORANDOMPUFFZ,16384,"",0,0,2,"Cell");
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 4) 
			{
				A_SetAngle(angle-15);
				A_SpreadAuraFireBullets(30,0,10,random(1,3)*3,name1,FBF_NORANDOM|FBF_NORANDOMPUFFZ,FBF_NORANDOM|FBF_NORANDOMPUFFZ,16384,"",0,0,2,"Cell");
				A_SetAngle(angle+30);
				A_SpreadAuraFireBullets(30,0,10,random(1,3)*3,name1,FBF_NORANDOM|FBF_NORANDOMPUFFZ,FBF_NORANDOM|FBF_NORANDOMPUFFZ,16384,"",0,0,2,"Cell");
				A_SetAngle(angle-15);
			}
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 7) 
			{
				A_SetAngle(angle-30);
				A_SpreadAuraFireBullets(30,0,10,random(1,3)*3,name1,FBF_NORANDOM|FBF_NORANDOMPUFFZ,FBF_NORANDOM|FBF_NORANDOMPUFFZ,16384,"",0,0,2,"Cell");
				A_SetAngle(angle+60);
				A_SpreadAuraFireBullets(30,0,10,random(1,3)*3,name1,FBF_NORANDOM|FBF_NORANDOMPUFFZ,FBF_NORANDOM|FBF_NORANDOMPUFFZ,16384,"",0,0,2,"Cell");
				A_SetAngle(angle-30);
			}
		}
	}

	States
	{
		// Bonus Layers
		SoulOverLayer: // Layer 6
			HCL2 A 0 bright
			{ 
				A_OverlayFlags(6, PSPF_ALPHA, true); 
				A_OverlayFlags(6, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(6, STYLE_Translucent); 
			}
			HCL2 A 1 bright { A_OverlayAlpha(6, 0.125); }
			HCL2 A 1 bright { A_OverlayAlpha(6, 0.25); }
			HCL2 A 1 bright { A_OverlayAlpha(6, 0.375); }
			HCL2 A 1 bright { A_OverlayAlpha(6, 0.5); }
			HCL2 A 1 bright { A_OverlayAlpha(6, 0.625); }
			HCL2 A 1 bright { A_OverlayAlpha(6, 0.75); }
			HCL2 A 1 bright { A_OverlayAlpha(6, 0.875); }
			HCL2 A 1 bright { A_OverlayAlpha(6, 1.0); }
		SoulOverLayer2: // Layer 6
			HCL2 A 1 bright;
			loop;
		SoulUnderLayer: // Layer 4
			HCL2 A 0 bright 
			{ 
				A_OverlayFlags(4, PSPF_ALPHA, true); 
				A_OverlayFlags(4, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(4, STYLE_Translucent); 
			}
			HCL2 A 1 bright { A_OverlayAlpha(4, 0.125); }
			HCL2 A 1 bright { A_OverlayAlpha(4, 0.25); }
			HCL2 A 1 bright { A_OverlayAlpha(4, 0.375); }
			HCL2 A 1 bright { A_OverlayAlpha(4, 0.5); }
			HCL2 A 1 bright { A_OverlayAlpha(4, 0.625); }
			HCL2 A 1 bright { A_OverlayAlpha(4, 0.75); }
			HCL2 A 1 bright { A_OverlayAlpha(4, 0.875); }
			HCL2 A 1 bright { A_OverlayAlpha(4, 1.0); }
		SoulUnderLayer2: // Layer 4
			HCL2 B 1 bright;
			loop;

		SoulImage: // Layer 5
			HCL3 A 0 bright
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, true); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(5, STYLE_Translucent); 
			}
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.125); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.25); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.375); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.5); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.625); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.75); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.875); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 1.0); }
		SoulImage2: // Layer 5
			HCL3 A 1 bright;
			loop;

		SoulSparkOver: // 7
			HCL4 ABCDEFEDCBA 1 bright
			{
				A_OverlayFlags(7, PSPF_ALPHA, true); 
				A_OverlayFlags(7, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(7, STYLE_Translucent); 
				A_OverlayAlpha(7, 0.5);
			}
			stop;

		SoulSparkUnder: // Layer 3
			HCL4 ABCDEFEDCBA 1 bright
			{
				A_OverlayFlags(3, PSPF_ALPHA, true); 
				A_OverlayFlags(3, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(3, STYLE_Translucent); 
				A_OverlayAlpha(3, 0.5);
			}
			stop;
		EndLayer:
			TNT1 A 0;
			stop;
		// Contols the Float/Bobbing of the Soul itself
		LayerFloatControl: // layer -63
			TNT1 A 1
			{
				invoker.soulbobx = invoker.soulbobxbasex + frandom(invoker.soulbobxrandxmin,invoker.soulbobxrandxmax) + (sin ((level.time + (level.time * frandom(invoker.soulbobxetimemulmin,invoker.soulbobxetimemulmax))) * invoker.soulbobxspeedmod) * frandom(invoker.soulbobxheightmodmin,invoker.soulbobxheightmodmax));
				invoker.soulboby = invoker.soulbobybasey + frandom(invoker.soulbobyrandymin,invoker.soulbobyrandymax) + (sin (level.time * invoker.soulbobyspeedmod) * frandom(invoker.soulbobyheightmodmin,invoker.soulbobyheightmodmax));
				if (dvdsdebug_hellcorepickups) 
				{
					Console.Printf("soulbobx: %8f, xbasex: %2f, xrandx: %2f-%2f, xetimemul: %2f-%2f, xspeedmod: %2f, xheightmod: %2f-%2f", invoker.soulbobx, invoker.soulbobxbasex, invoker.soulbobxrandxmin, invoker.soulbobxrandxmax, invoker.soulbobxetimemulmin, invoker.soulbobxetimemulmax, invoker.soulbobxspeedmod, invoker.soulbobxheightmodmin, invoker.soulbobxheightmodmax);
					Console.Printf("soulboby: %8f, ybasey: %2f, yrandy: %2f-%2f, yspeedmod: %2f, yheightmod: %2f-%2f", invoker.soulboby, invoker.soulbobybasey, invoker.soulbobyrandymin, invoker.soulbobyrandymax, invoker.soulbobyspeedmod, invoker.soulbobyheightmodmin, invoker.soulbobyheightmodmax);
				}
				// A_OverlayOffset (<layer>, 0, 32 + (sin (level.time * <speed modifier>) * <height modifier>), WOF_INTERPOLATE)
				A_OverlayOffset(3, invoker.soulbobx, invoker.soulboby, WOF_INTERPOLATE);
				A_OverlayOffset(4, invoker.soulbobx, invoker.soulboby, WOF_INTERPOLATE);
				A_OverlayOffset(5, invoker.soulbobx, invoker.soulboby, WOF_INTERPOLATE);
				A_OverlayOffset(6, invoker.soulbobx, invoker.soulboby, WOF_INTERPOLATE);
				A_OverlayOffset(7, invoker.soulbobx, invoker.soulboby, WOF_INTERPOLATE);
			}
			loop;

		// 
		Ready:
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			loop;
		Deselect: 
			HCL1 A 1
			{
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;
		Fire:
			HCL1 A 1;
			goto Ready;

		// Quick Kick
		User1: // Kick - Most Weapons
			TNT1 A 0 
			{
				A_Overlay(-2,"Kick",true);
			}
			goto Ready;

		Kick:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetKickStaminaUse(0),2) == 0) { return resolvestate("KickEnd"); }
				return resolvestate(null); 
			}
			TNT1 A 0
			{
				A_GunFlash("LightDone",GFF_NOEXTCHANGE); // A_ClearFlash;
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters(); } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
				CallACS("StartTensionCountDown");
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("KickAttackDEFLvl2",1); } else { A_GiveInventory("KickAttackDEFLvl1",1); }
				A_SetMartialArtsMastery(1);
				if (random(1,256) > 64) { A_GiveInventory("KickCritBonus1",1,AAPTR_PLAYER1); } else { A_GiveInventory("KickCritBonus2",1,AAPTR_PLAYER1); }
				A_GiveInventory("UsingMeleeAttack",1);
			}
			goto KickStart;
		KickStart: // 15 Tics (7 (MAMlv3), 3 (MAMlv5))
			FKIC A 1 
			{
				A_SceptreShieldOff();
				CallACS("MiscVarSetDECORATE",397,0);
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) // -1
				{
					A_SetTics(0); 
				}
			}
			FKIC B 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) // -1
				{
					A_SetTics(0); 
				} 
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_StartSound("fistswingheavy0",1); } else { A_StartSound("fistswingmedium0",1); }
			}
			FKIC C 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) 
				{ 
					A_SetTics(0); 
				}

				if (GetCVar("dvds_florahokutolol") > 0 && CallACS("MiscVarCheckDECORATE",10035) >= 4)
				{
					if (random(1,256) >= 1) { A_StartSound("FloraHokutoLol",CHAN_VOICE); }
				}
				else
				{
					if (random(1,256) >= (128 + (CallACS("MiscVarCheckDECORATE",10035)) * 10)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); } 
				}
			}
			FKIC D 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) == 2 || CallACS("MiscVarCheckDECORATE",10035) == 4) 
				{
					A_SetTics(0); 
				}
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
			}
			FKIC E 1
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) 
				{
					A_SetTics(0); 
				} 
			}
			FKIC F 1
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) 
				{
					A_SetTics(0); 
				} 
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
			}
			FKIC G 1 
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) 
				{
					A_SetTics(0); 
				} 
			}
			FKIC H 1
			{
				A_GetKickSwingRecoil(0);
				A_SpreadAuraCustomPunch(A_GetKickDamage(0),1,CPF_NOTURN,"KickPuff",A_GetMeleeRange(4),0,0,"","","");
	
				if (A_CheckMeleeDestroyProj(0) > 0)
				{
					if (CallACS("MiscVarCheckDECORATE",10035) >= 5)
					{
						if (random(1,8) <= 3)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,56);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,88);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,56);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,88);
						}
					}
					else
					{
						if (random(1,8) <= 1)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,56);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,88);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,56);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,88);
						}
					}
				}
			}
			FKIC G 1 
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) 
				{
					A_SetTics(0); 
				} 
			}
			FKIC F 1
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) 
				{
					A_SetTics(0); 
				} 
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
			}
			FKIC E 1
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) 
				{
					A_SetTics(0); 
				} 
			}
			FKIC D 1 
			{
				if ((CallACS("MiscVarCheckDECORATE",10035) >= 1 && CallACS("MiscVarCheckDECORATE",10035) <= 2) || CallACS("MiscVarCheckDECORATE",10035) == 4) 
				{ 
					A_SetTics(0); 
				} 
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
			}
			FKIC C 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) // -1
				{
					A_SetTics(0); 
				}
			}
			FKIC B 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) // -1
				{
					A_SetTics(0); 
				} 
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
			}
			FKIC A 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) // -1
				{
					A_SetTics(0); 
				}
			}
		// KICK END
		KickEnd:
			TNT1 A 0
			{
				A_KickBonusOff();
				A_SetMartialArtsMastery(0);
			}
			stop;
	}
}

class ImpSoulCI : BaseHellcorePickup //32222
{
	Default
	{
		//$NotAngled
		//$Color 14
		//$Category "DV-DS Weapons/Flora/Hellcore Souls"
		//$Sprite "HCSLA0"
		Tag "Imp's Soul: [Hellcore] Launches Imp Fireballs";
		Inventory.PickupMessage "You got an Imp's Soul! \cx[Slot 4]\c-";
	}

	States
	{
		Spawn:
			HCSL A 1 NoDelay bright 
			{
				A_HellCoreSoulPickupPulse(1.5,1.5);
				A_HellcoreWeaponCheckCharacter(0);
			}
			Loop;

		Pickup:
			TNT1 A 0 
			{
				A_GiveInventory("ImpSoul", 1);
				A_StartSound("pickuphellcore");
				A_IncreaseHellcoreLevel(1);
			}
			Stop;
	}
}

// Imp Soul [Slot 4] (Weapon)
class ImpSoul : BaseHellcoreWeapon
{
	Default
	{
		//$Sprite "HCSLB0"
		Scale 0.625;
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOALERT;
		Inventory.PickupMessage "You got an Imp's Soul! \cx[Slot 4]\c-";
		Tag "Imp's Soul";

	}

	States
	{
		// Bonus Layers
		SoulImage: // Layer 5
			HCL3 A 0 bright 
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, true); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(5, STYLE_Translucent); 
			}
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.125); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.25); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.375); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.5); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.625); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.75); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 0.875); }
			HCL3 A 1 bright { A_OverlayAlpha(5, 1.0); }
		SoulImage2: // Layer 5
			HCL3 A 1 bright;
			loop;
			
		Spawn:
			HCSL A 1 bright NoDelay;
			Loop;

		Ready: 
			HCL1 A 0
			{
				A_HellSoulOverlayReady();
			}
		Idle: 
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			Loop;
		Deselect: 
			HCL1 A 1
			{
				A_HellSoulClearOverlays();
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_HellSoulClearOverlays();
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;

		Fire:
			HCL1 CD 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			HCL1 D 0
			{
				if (random(1,2) == 1) { return resolvestate("Fire2"); }
				else { return resolvestate("Fire1"); }
				return resolvestate(null);
			}
		Fire1:
			HCL1 E 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim1:
			HCL1 F 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 G 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_HellSoulFire1("imp/attack",100,"DoomImpBall-Claw","DoomImpBallCrisis-Claw",96,true,true);
			}
			HCL1 H 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 E 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim1"); }
				else { A_Refire("ReFireAnim2"); }
			}
			HCL1 I 0
			{
				return resolvestate("FireEnd");
			}

		Fire2:
			HCL1 I 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim2:
			HCL1 J 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 K 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_HellSoulFire1("imp/attack",100,"DoomImpBall-Claw","DoomImpBallCrisis-Claw",96,true,true);
			}
			HCL1 L 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 I 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim2"); }
				else { A_Refire("ReFireAnim1"); }
			}
			HCL1 I 0
			{
				return resolvestate("FireEnd");
			}

		FireEnd:
			HCL1 DC 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			Goto Ready;
	}
}

class DarkImpSoulCI : BaseHellcorePickup //32223
{
	Default
	{
		//$NotAngled
		//$Color 14
		//$Category "DV-DS Weapons/Flora/Hellcore Souls"
		//$Sprite "HCSLB0"
		Tag "Dark Imp's Soul: [Hellcore] Launches Dark Imp Fireballs";
		Inventory.PickupMessage "You got a Dark Imp's Soul! \cx[Slot 4]\c-";
	}
	States
	{
		Spawn:
			HCSL B 1 NoDelay bright 
			{
				A_HellCoreSoulPickupPulse(1.5,1.5);
				A_HellcoreWeaponCheckCharacter(1);
			}
			Loop;

		Pickup:
			TNT1 A 0 
			{
				A_GiveInventory("DarkImpSoul", 1);
				A_StartSound("pickuphellcore");
				A_IncreaseHellcoreLevel(2);
			}
			Stop;
	}
}

// Dark Imp Soul [Slot 4] (Weapon)
class DarkImpSoul : BaseHellcoreWeapon
{
	Default
	{
		//$Sprite "HCSLB0"
		Scale 0.625;
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOALERT;
		Inventory.PickupMessage "You got a Dark Imp's Soul! \cx[Slot 4]\c-";
		Tag "Dark Imp's Soul";
	}

	States
	{
		// Bonus Layers
		SoulImage: // Layer 5
			HCL3 B 0 bright
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, true); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(5, STYLE_Translucent); 
			}
			HCL3 B 1 bright { A_OverlayAlpha(5, 0.125); }
			HCL3 B 1 bright { A_OverlayAlpha(5, 0.25); }
			HCL3 B 1 bright { A_OverlayAlpha(5, 0.375); }
			HCL3 B 1 bright { A_OverlayAlpha(5, 0.5); }
			HCL3 B 1 bright { A_OverlayAlpha(5, 0.625); }
			HCL3 B 1 bright { A_OverlayAlpha(5, 0.75); }
			HCL3 B 1 bright { A_OverlayAlpha(5, 0.875); }
			HCL3 B 1 bright { A_OverlayAlpha(5, 1.0); }
			HCL3 B 0 bright 
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, false); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, false); 
				A_OverlayRenderStyle(5, STYLE_Normal); 
			}
		SoulImage2: // Layer 5
			HCL3 B 1 bright;
			loop;
			
		Spawn:
			HCSL B 1 bright NoDelay;
			Loop;

		Ready: 
			HCL1 A 0
			{
				A_HellSoulOverlayReady();
			}
		Idle: 
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			Loop;
		Deselect: 
			HCL1 A 1
			{
				A_HellSoulClearOverlays();
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_HellSoulClearOverlays();
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;

		Fire:
			HCL1 CD 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			HCL1 D 0
			{
				if (random(1,2) == 1) { return resolvestate("Fire2"); }
				else { return resolvestate("Fire1"); }
				return resolvestate(null);
			}
		Fire1:
			HCL1 E 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim1:
			HCL1 F 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 G 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_HellSoulFire1("imp/attack",250,"DarkSeeker-Claw","DarkSeekerCrisis-Claw",97,true,true);
			}
			HCL1 H 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 E 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim1"); }
				else { A_Refire("ReFireAnim2"); }
			}
			HCL1 E 0
			{
				return resolvestate("FireEnd");
			}

		Fire2:
			HCL1 I 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim2:
			HCL1 J 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 K 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_HellSoulFire1("imp/attack",250,"DarkSeeker-Claw","DarkSeekerCrisis-Claw",97,true,true);
			}
			HCL1 L 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 I 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim2"); }
				else { A_Refire("ReFireAnim1"); }
			}
			HCL1 I 0
			{
				return resolvestate("FireEnd");
			}

		FireEnd:
			HCL1 DC 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			Goto Ready;
	}
}

// Cacodemon's Soul [Slot 4] (Weapon)
class CacodemonSoulCI : BaseHellcorePickup //32224
{
	Default
	{
		//$NotAngled
		//$Color 14
		//$Category "DV-DS Weapons/Flora/Hellcore Souls"
		//$Sprite "HCSLC0"
		Tag "Cacodemon's Soul: [Hellcore] Launches Cacodemon Lightning Balls";
		Inventory.PickupMessage "You got a Cacodemon's Soul! \cx[Slot 4]\c-";
	}

	States
	{
		Spawn:
			HCSL C 1 NoDelay bright
			{
				A_HellCoreSoulPickupPulse(1.5,1.5);
				A_HellcoreWeaponCheckCharacter(2);
			}
			Loop;
		Pickup:
			TNT1 A 0 
			{
				A_GiveInventory("CacodemonSoul", 1);
				A_StartSound("pickuphellcore");
				A_IncreaseHellcoreLevel(3);
			}
			Stop;
	}
}

class CacodemonSoul : BaseHellcoreWeapon
{
	Default
	{
		//$Sprite "HCSLC0"
		Scale 0.625;
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOALERT;
		Inventory.PickupMessage "You got a Cacodemon's Soul! \cx[Slot 4]\c-";
		Tag "Cacodemon's Soul";
	}

	States
	{
		// Bonus Layers
		SoulImage: // Layer 5
			HCL3 C 0 bright
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, true); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(5, STYLE_Translucent); 
			}
			HCL3 C 1 bright { A_OverlayAlpha(5, 0.125); }
			HCL3 C 1 bright { A_OverlayAlpha(5, 0.25); }
			HCL3 C 1 bright { A_OverlayAlpha(5, 0.375); }
			HCL3 C 1 bright { A_OverlayAlpha(5, 0.5); }
			HCL3 C 1 bright { A_OverlayAlpha(5, 0.625); }
			HCL3 C 1 bright { A_OverlayAlpha(5, 0.75); }
			HCL3 C 1 bright { A_OverlayAlpha(5, 0.875); }
			HCL3 C 1 bright { A_OverlayAlpha(5, 1.0); }
			HCL3 C 0 bright 
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, false); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, false); 
				A_OverlayRenderStyle(5, STYLE_Normal); 
			}
		SoulImage2: // Layer 5
			HCL3 C 1 bright;
			loop;
			
		Spawn:
			HCSL C 1 bright NoDelay;
			Loop;

		Ready: 
			HCL1 A 0
			{
				A_HellSoulOverlayReady();
			}
		Idle: 
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			Loop;
		Deselect: 
			HCL1 A 1
			{
				A_HellSoulClearOverlays();
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_HellSoulClearOverlays();
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;

		Fire:
			HCL1 CD 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			HCL1 D 0
			{
				if (random(1,2) == 1) { return resolvestate("Fire2"); }
				else { return resolvestate("Fire1"); }
				return resolvestate(null);
			}
		Fire1:
			HCL1 E 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim1:
			HCL1 F 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 G 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellSoulFire1("caco/attack",150,"CacodemonBall-Claw","CacodemonBallCrisis-Claw",98,true,true);
			}
			HCL1 H 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 E 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim1"); }
				else { A_Refire("ReFireAnim2"); }
			}
			HCL1 E 0
			{
				return resolvestate("FireEnd");
			}

		Fire2:
			HCL1 I 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim2:
			HCL1 J 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 K 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellSoulFire1("caco/attack",150,"CacodemonBall-Claw","CacodemonBallCrisis-Claw",98,true,true);
			}
			HCL1 L 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 I 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim2"); }
				else { A_Refire("ReFireAnim1"); }
			}
			HCL1 I 0
			{
				return resolvestate("FireEnd");
			}

		FireEnd:
			HCL1 DC 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			Goto Ready;
	}
}

// Cacolantern's Soul [Slot 4] (Weapon)
class CacolanternSoulCI : BaseHellcorePickup //32225
{
	Default
	{
		//$NotAngled
		//$Color 14
		//$Category "DV-DS Weapons/Flora/Hellcore Souls"
		//$Sprite "HCSLD0"
		Tag "Cacolantern's Soul: [Hellcore] Launches Cacolantern Lightning Balls";
		Inventory.PickupMessage "You got a Cacolantern's Soul! \cx[Slot 4]\c-";
	}
	
	States
	{
		Spawn:
			HCSL D 1 NoDelay bright
			{
				A_HellCoreSoulPickupPulse(1.5,1.5);
				A_HellcoreWeaponCheckCharacter(3);
			}
			Loop;
		Pickup:
			TNT1 A 0 
			{
				A_GiveInventory("CacolanternSoul", 1);
				A_StartSound("pickuphellcore");
				A_IncreaseHellcoreLevel(4);
			}
			Stop;
	}
}

class CacolanternSoul : BaseHellcoreWeapon
{
	Default
	{
		//$Sprite "HCSLD0"
		Tag "Cacolantern's Soul";
		Scale 0.625;
		+FLOATBOB;
		+DONTGIB;
		+WEAPON.NOAUTOAIM;
		+INVENTORY.ALWAYSPICKUP;
		+WEAPON.NOALERT;
		Inventory.PickupMessage "You got a Cacolantern's Soul! \cx[Slot 4]\c-";
	}

	States
	{
		// Bonus Layers
		SoulImage: // Layer 5
			HCL3 D 0 bright
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, true); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(5, STYLE_Translucent); 
			}
			HCL3 D 1 bright { A_OverlayAlpha(5, 0.125); }
			HCL3 D 1 bright { A_OverlayAlpha(5, 0.25); }
			HCL3 D 1 bright { A_OverlayAlpha(5, 0.375); }
			HCL3 D 1 bright { A_OverlayAlpha(5, 0.5); }
			HCL3 D 1 bright { A_OverlayAlpha(5, 0.625); }
			HCL3 D 1 bright { A_OverlayAlpha(5, 0.75); }
			HCL3 D 1 bright { A_OverlayAlpha(5, 0.875); }
			HCL3 D 1 bright { A_OverlayAlpha(5, 1.0); }
		SoulImage2: // Layer 5
			HCL3 D 1 bright;
			loop;
			
		Spawn:
			HCSL D 1 bright NoDelay;
			Loop;

		Ready: 
			HCL1 A 0
			{
				A_HellSoulOverlayReady();
			}
		Idle: 
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			Loop;
		Deselect: 
			HCL1 A 1
			{
				A_HellSoulClearOverlays();
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_HellSoulClearOverlays();
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;

		Fire:
			HCL1 CD 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			HCL1 D 0
			{
				if (random(1,2) == 1) { return resolvestate("Fire2"); }
				else { return resolvestate("Fire1"); }
				return resolvestate(null);
			}
		Fire1:
			HCL1 E 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim1:
			HCL1 F 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 G 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellSoulFire1("caco/attack",200,"CacolanternBall-Claw","CacolanternBallCrisis-Claw",99,true,true);
			}
			HCL1 H 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 E 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim1"); }
				else { A_Refire("ReFireAnim2"); }
			}
			HCL1 E 0
			{
				return resolvestate("FireEnd");
			}

		Fire2:
			HCL1 I 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim2:
			HCL1 J 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 K 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellSoulFire1("caco/attack",200,"CacolanternBall-Claw","CacolanternBallCrisis-Claw",99,true,true);
			}
			HCL1 L 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 I 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim2"); }
				else { A_Refire("ReFireAnim1"); }
			}
			HCL1 I 0
			{
				return resolvestate("FireEnd");
			}

		FireEnd:
			HCL1 DC 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			Goto Ready;
	}
}

// Abaddon's Soul [Slot 4] (Weapon)
class AbaddonSoulCI : BaseHellcorePickup //32226
{
	Default
	{
		//$NotAngled
		//$Color 14
		//$Category "DV-DS Weapons/Flora/Hellcore Souls"
		//$Sprite "HCSLE0"
		Tag "Abaddon's Eye: [Hellcore] Launches Abaddon Fireballs";
		Inventory.PickupMessage "You got the Abaddon's Eye! \cx[Slot 4]\c-";
	}

	States
	{
		Spawn:
			HCSL E 1 NoDelay bright
			{
				A_HellCoreSoulPickupPulse(1.5,1.5);
				A_HellcoreWeaponCheckCharacter(4);
			}
			Loop;
		Pickup:
			TNT1 A 0 
			{
				A_GiveInventory("AbaddonSoul", 1);
				A_StartSound("pickuphellcore");
				A_IncreaseHellcoreLevel(5);
			}
			Stop;
	}
}
class AbaddonSoul : BaseHellcoreWeapon
{
	Default
	{
		//$NotAngled
		//$Color 14
		//$Category "DV-DS Weapons/Flora/Hellcore Souls"
		//$Sprite "HCSLE0"
		Tag "Abaddon's Eye: [Hellcore] Launches Abaddon Fireballs";
		Inventory.PickupMessage "You got the Abaddon's Eye! \cx[Slot 4]\c-";
	}

	States
	{
		// Bonus Layers
		SoulImage: // Layer 5
			HCL3 E 0 bright
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, true); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(5, STYLE_Translucent); 
			}
			HCL3 E 1 bright { A_OverlayAlpha(5, 0.125); }
			HCL3 E 1 bright { A_OverlayAlpha(5, 0.25); }
			HCL3 E 1 bright { A_OverlayAlpha(5, 0.375); }
			HCL3 E 1 bright { A_OverlayAlpha(5, 0.5); }
			HCL3 E 1 bright { A_OverlayAlpha(5, 0.625); }
			HCL3 E 1 bright { A_OverlayAlpha(5, 0.75); }
			HCL3 E 1 bright { A_OverlayAlpha(5, 0.875); }
			HCL3 E 1 bright { A_OverlayAlpha(5, 1.0); }
		SoulImage2: // Layer 5
			HCL3 E 1 bright;
			loop;
			
		Spawn:
			HCSL E 1 bright NoDelay;
			Loop;

		Ready: 
			HCL1 A 0
			{
				A_HellSoulOverlayReady();
			}
		Idle: 
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			Loop;
		Deselect: 
			HCL1 A 1
			{
				A_HellSoulClearOverlays();
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_HellSoulClearOverlays();
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;

		Fire:
			HCL1 CD 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			HCL1 D 0
			{
				if (random(1,2) == 1) { return resolvestate("Fire2"); }
				else { return resolvestate("Fire1"); }
				return resolvestate(null);
			}
		Fire1:
			HCL1 E 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim1:
			HCL1 F 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 GG 2 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }

				invoker.shotsfired++;
				if (invoker.shotsfired > 1) { invoker.shotsfired = 0; }
				if (invoker.shotsfired == 0) { A_HellSoulFire1("caco/attack",125,"AbaddonBall-Claw","AbaddonBallCrisis-Claw",100,true,true); }
				else { A_HellSoulFire1("caco/attack",125,"AbaddonBall-Claw","AbaddonBallCrisis-Claw",100,true,false); }
			}
			HCL1 H 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 E 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim1"); }
				else { A_Refire("ReFireAnim2"); }
			}
			HCL1 E 0
			{
				return resolvestate("FireEnd");
			}

		Fire2:
			HCL1 I 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim2:
			HCL1 J 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 KK 2 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 3) { A_SetTics(1); }

				invoker.shotsfired++;
				if (invoker.shotsfired > 1) { invoker.shotsfired = 0; }
				if (invoker.shotsfired == 0) { A_HellSoulFire1("caco/attack",125,"AbaddonBall-Claw","AbaddonBallCrisis-Claw",100,true,true); }
				else { A_HellSoulFire1("caco/attack",125,"AbaddonBall-Claw","AbaddonBallCrisis-Claw",100,true,false); }
			}
			HCL1 L 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 I 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim2"); }
				else { A_Refire("ReFireAnim1"); }
			}
			HCL1 I 0
			{
				return resolvestate("FireEnd");
			}

		FireEnd:
			HCL1 DC 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			Goto Ready;
	}
}


// Hell Knight's Soul [Slot 5] (Weapon)
// Baron of Hell's Soul [Slot 5] (Weapon)
// Belphegor's Soul [Slot 5] (Weapon)
// Bruiser Demon's Soul [Slot 5] (Weapon)
// Archon of Hell's Soul [Slot 5] (Weapon)
// Pyro Demon's Soul [Slot 5] (Weapon)

// Death Incarnate's Soul [Slot 6] (Weapon)
class IncarnateSoulCI : BaseHellcorePickup //32233
{
	Default
	{
		//$Sprite "HCSLL0"
		//$NotAngled
		//$Color 14
		//$Category "DV-DS Weapons/Flora/Hellcore Souls"
		Tag "Death Incarnate's Soul: [Hellcore] Fires off the Death Incarnate's glare";
		Inventory.PickupMessage "You got an Death Incarnate's Soul! \cx[Slot 6]\c-";
	}

	States
	{
		Spawn:
			HCSL L 1 NoDelay bright
			{
				A_HellCoreSoulPickupPulse(1.5,1.5);
				A_HellcoreWeaponCheckCharacter(11);
			}
			Loop;

		Pickup:
			TNT1 A 0 
			{
				A_GiveInventory("IncarnateSoul", 1);
				A_StartSound("pickuphellcore");
				A_IncreaseHellcoreLevel(12);
			}
			Stop;
	}
}

class IncarnateSoul : BaseHellcoreWeapon
{
	Default
	{
		//$Sprite "HCSLN0"
		Scale 0.625;
		Tag "Death Incarnate's Soul";
		+FLOATBOB;
		+DONTGIB;
		+WEAPON.NOAUTOAIM;
		+INVENTORY.ALWAYSPICKUP;
		+WEAPON.NOALERT;
		Inventory.PickupMessage "You got an Death Incarnate's Soul! \cx[Slot 6]\c-";
}
	

	States
	{
		// Bonus Layers
		SoulImage: // Layer 5
			HCL3 L 0 bright 
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, true); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(5, STYLE_Translucent); 
			}
			HCL3 L 1 bright { A_OverlayAlpha(5, 0.125); }
			HCL3 L 1 bright { A_OverlayAlpha(5, 0.25); }
			HCL3 L 1 bright { A_OverlayAlpha(5, 0.375); }
			HCL3 L 1 bright { A_OverlayAlpha(5, 0.5); }
			HCL3 L 1 bright { A_OverlayAlpha(5, 0.625); }
			HCL3 L 1 bright { A_OverlayAlpha(5, 0.75); }
			HCL3 L 1 bright { A_OverlayAlpha(5, 0.875); }
			HCL3 L 1 bright { A_OverlayAlpha(5, 1.0); }
		SoulImage2: // Layer 5
			HCL3 L 1 bright;
			loop;
			
		Spawn:
			HCSL L 1 bright NoDelay;
			Loop;

		Ready: 
			HCL1 A 0
			{
				A_HellSoulOverlayReady();
			}
		Idle: 
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			Loop;
		Deselect: 
			HCL1 A 1
			{
				A_HellSoulClearOverlays();
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_HellSoulClearOverlays();
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;

		Fire:
			HCL1 CD 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			HCL1 D 0
			{
				if (random(1,2) == 1) { return resolvestate("Fire2"); }
				else { return resolvestate("Fire1"); }
				return resolvestate(null);
			}
		Fire1:
			HCL1 E 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim1:
			HCL1 F 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 G 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellSoulFire2("monster/incatk",360,"DIPuff-Claw",107,true,true);
			}
			HCL1 H 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 E 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim1"); }
				else { A_Refire("ReFireAnim2"); }
			}
			HCL1 I 0
			{
				return resolvestate("FireEnd");
			}

		Fire2:
			HCL1 I 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim2:
			HCL1 J 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 K 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellSoulFire2("monster/incatk",360,"DIPuff-Claw",107,true,true);
			}
			HCL1 L 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 I 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim2"); }
				else { A_Refire("ReFireAnim1"); }
			}
			HCL1 I 0
			{
				return resolvestate("FireEnd");
			}

		FireEnd:
			HCL1 DC 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			Goto Ready;
	}
}

// Archvile's Soul [Slot 6] (Weapon)
class ArchvileSoulCI : BaseHellcorePickup //32234
{
	Default
	{
		//$Sprite "HCSLM0"
		//$NotAngled
		//$Color 14
		//$Category "DV-DS Weapons/Flora/Hellcore Souls"
		Tag "Archvile's Soul: [Hellcore] Uses Archvile's Immolation and Resurrection Abilities.";
		Inventory.PickupMessage "You got the Arch Vile's Soul! \cx[Slot 6]\c-";
	}

	States
	{
		Spawn:
			HCSL M 1 NoDelay bright 
			{
				A_HellCoreSoulPickupPulse(1.5,1.5);
				A_HellcoreWeaponCheckCharacter(12);
			}
			Loop;

		Pickup:
			TNT1 A 0 
			{
				A_GiveInventory("ArchvileSoul", 1);
				A_StartSound("pickuphellcore");
				A_IncreaseHellcoreLevel(13);
			}
			Stop;
	}
}

class ArchvileSoul : BaseHellcoreWeapon
{
	Default
	{
		//$Sprite "HCSLM0"
		Scale 0.625;
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOALERT;
		Inventory.PickupMessage "You got an Archvile's Soul! \cx[Slot 6]\c-";
		Tag "Archvile's Soul";
		
		BaseHellcoreWeapon.bobxbasex 0.0;
		BaseHellcoreWeapon.bobxrandx 0.0, 0.0;
		BaseHellcoreWeapon.bobxetimemul 0.3675, 0.3825;
		BaseHellcoreWeapon.bobxspeedmod 1.125;
		BaseHellcoreWeapon.bobxheightmod 4.25, 5.75;
		BaseHellcoreWeapon.bobybasey 0.0;
		BaseHellcoreWeapon.bobyrandy 0.0, 0.0;
		BaseHellcoreWeapon.bobyspeedmod 10.0;
		BaseHellcoreWeapon.bobyheightmod 7.8, 8.2;
	}
	
	action void A_HellSoulVileTarget(string type1 = "ArchvileFire", string typecrisis = "ArchvileFireCrisis")
	{
		CallACS("StartTensionCountDown");
		if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
		{
			if (A_HellCoreCrisisCheck() > 0)
			{
				A_PlayCrisisAtkSound();
				A_VileTarget(typecrisis);
				A_VileTarget(typecrisis);
				A_VileTarget(typecrisis);
				A_VileTarget(typecrisis);
				A_VileTarget(typecrisis);
				A_VileTarget(typecrisis);
				A_VileTarget(typecrisis);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
				}
			}
			else
			{
				A_VileTarget(type1);
				A_VileTarget(type1);
				A_VileTarget(type1);
				A_VileTarget(type1);
				A_VileTarget(type1);
				A_VileTarget(type1);
				A_VileTarget(type1);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
				}
			}
		}
		else
		if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
		{
			if (A_HellCoreCrisisCheck() > 0)
			{
				A_PlayCrisisAtkSound();
				A_VileTarget(typecrisis);
				A_VileTarget(typecrisis);
				A_VileTarget(typecrisis);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
				}
			}
			else
			{
				A_VileTarget(type1);
				A_VileTarget(type1);
				A_VileTarget(type1);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
					A_VileTarget(type1);
				}
			}
		}
		else
		{
			if (A_HellCoreCrisisCheck() > 0)
			{
				A_PlayCrisisAtkSound();
				A_VileTarget(typecrisis);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileTarget(typecrisis);
					A_VileTarget(typecrisis);
				}
			}
			else
			{
				A_VileTarget(type1);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileTarget(type1);
					A_VileTarget(type1);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileTarget(type1);
					A_VileTarget(type1);
				}
			}
		}
	}
	
	action void A_HellSoulVileAttack()
	{
		CallACS("StartTensionCountDown");
		if (CountInv("SpreaderAura2",AAPTR_PLAYER1) > 0)
		{
			if (A_HellCoreCrisisCheck() > 0)
			{
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
			}
			else
			{
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
			}
		}
		else
		if (CountInv("SpreaderAura1",AAPTR_PLAYER1) > 0)
		{
			if (A_HellCoreCrisisCheck() > 0)
			{
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
			}
			else
			{
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
			}
		}
		else
		{
			if (A_HellCoreCrisisCheck() > 0)
			{
				A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20*CallACS("CrisisMultiplier"),70*CallACS("CrisisMultiplier"),560,8.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
			}
			else
			{
				A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				if (CallACS("MiscVarCheckDECORATE",108) >= 4) 
				{
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
				if (CallACS("MiscVarCheckDECORATE",108) >= 7) 
				{
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
					A_VileAttack("vile/stop",20,70,70,1.0,"Fire",VAF_DMGTYPEAPPLYTODIRECT);
				}
			}
		}
	}
	
	States
	{
		// Bonus Layers
		SoulImage: // Layer 5
			HCL3 M 0 bright 
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, true); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(5, STYLE_Translucent); 
			}
			HCL3 M 1 bright { A_OverlayAlpha(5, 0.125); }
			HCL3 M 1 bright { A_OverlayAlpha(5, 0.25); }
			HCL3 M 1 bright { A_OverlayAlpha(5, 0.375); }
			HCL3 M 1 bright { A_OverlayAlpha(5, 0.5); }
			HCL3 M 1 bright { A_OverlayAlpha(5, 0.625); }
			HCL3 M 1 bright { A_OverlayAlpha(5, 0.75); }
			HCL3 M 1 bright { A_OverlayAlpha(5, 0.875); }
			HCL3 M 1 bright { A_OverlayAlpha(5, 1.0); }
			HCL3 M 0 bright 
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, false); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, false); 
				A_OverlayRenderStyle(5, STYLE_Normal); 
			}
		SoulImage2: // Layer 5
			HCL3 M 1;
			loop;
			
		Spawn:
			HCSL M 1 bright NoDelay;
			Loop;

		Ready: 
			HCL1 A 0
			{
				A_HellSoulOverlayReady();
			}
		Idle: 
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			Loop;
		Deselect: 
			HCL1 A 1
			{
				A_HellSoulClearOverlays();
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_HellSoulClearOverlays();
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;

		// Main Attack
		Fire:
			HCL1 CD 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			HCL1 D 0
			{
				if (random(1,2) == 1) { return resolvestate("Fire2"); }
				else { return resolvestate("Fire1"); }
				return resolvestate(null);
			}
		Fire1:
			HCL1 E 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim1:
			HCL1 F 4 bright
			{
				A_VileChase();
				A_StartSound("vile/start");
				A_IncreaseHellcoreHeat(500,1);
				A_Light2();
				A_HellSoulVileTarget("ArchvileFireFast","ArchvileFireFastCrisis");

				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 G 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellSoulVileAttack();
			}
			HCL1 H 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 E 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim1"); }
				else { A_Refire("ReFireAnim2"); }
			}
			HCL1 E 0
			{
				return resolvestate("FireEnd");
			}

		Fire2:
			HCL1 I 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim2:
			HCL1 J 4 bright
			{
				A_VileChase();
				A_StartSound("vile/start");
				A_IncreaseHellcoreHeat(500,1);
				A_Light2();
				A_HellSoulVileTarget("ArchvileFireFast","ArchvileFireFastCrisis");

				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 K 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_HellSoulVileAttack();
			}
			HCL1 L 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 I 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim2"); }
				else { A_Refire("ReFireAnim1"); }
			}
			HCL1 I 0
			{
				return resolvestate("FireEnd");
			}

		FireEnd:
			HCL1 DC 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			Goto Ready;
			
		// Alt Fire
		AltFire:
			HCL1 MN 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			HCL1 N 0
			{
				if (random(1,2) == 1) { return resolvestate("AltFire2"); }
				else { return resolvestate("AltFire1"); }
				return resolvestate(null);
			}
		AltFire1:
			HCL1 O 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		AltReFireAnim1:
			HCL1 P 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 Q 4 bright
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_StartSound("NecroSummon",101);
				A_IncreaseHellcoreHeat(834,1); // +8.34% Hellcore Heat, Deal Damage if already above 100% Heat

				A_SpreadAuraFireProjectile("ReviveProj",0,0,"",0,0,0,0);
				if (CallACS("StatCheck",0) > 60)
				{
					A_SpreadAuraFireProjectile("ReviveProj",0,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",72,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",144,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",216,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",288,0,"",0,0,0,0);
				}
			}
			HCL1 R 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 O 0
			{
				if (random(1,6) == 1) { A_Refire("AltReFireAnim1"); }
				else { A_Refire("AltReFireAnim2"); }
			}
			HCL1 O 0
			{
				return resolvestate("AltFireEnd");
			}

		AltFire2:
			HCL1 S 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		AltReFireAnim2:
			HCL1 T 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 U 4 bright 
			{
				A_HellSoulSpark();
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }

				A_StartSound("NecroSummon",101);
				A_IncreaseHellcoreHeat(834,1); // +8.34% Hellcore Heat, Deal Damage if already above 100% Heat

				A_SpreadAuraFireProjectile("ReviveProj",0,0,"",0,0,0,0);
				if (CallACS("StatCheck",0) > 60)
				{
					A_SpreadAuraFireProjectile("ReviveProj",0,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",72,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",144,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",216,0,"",0,0,0,0);
					A_SpreadAuraFireProjectile("ReviveProj",288,0,"",0,0,0,0);
				}
			}
			HCL1 V 4 bright
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 S 0
			{
				if (random(1,6) == 1) { A_Refire("AltReFireAnim2"); }
				else { A_Refire("AltReFireAnim1"); }
			}
			HCL1 S 0
			{
				return resolvestate("AltFireEnd");
			}

		AltFireEnd:
			HCL1 NM 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			Goto Ready;
	}
}

// Diabloist's Soul [Slot 6] (Weapon)
// Flying Balrog's Soul [Slot 6] (Weapon)

// Hades Elemental's Soul (eventually???)
// Hades Overlord's Soul (eventually???)