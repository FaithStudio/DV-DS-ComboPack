class BaseHellcoreWeapon : QuickMeleeWeaponZSC
{
	Default
	{
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOALERT;
		Weapon.BobRangeX 0.1;
		Weapon.BobRangeY 0.1;
		Weapon.BobSpeed 0.1;
		Weapon.BobStyle "Smooth";
	}
	
	action void A_HellSoulFire1(string sndname = "", int heatamt = 0, string name1 = "", string name2 = "", int checknum = 0, bool usetension = true)
	{
		A_StartSound(sndname);
		A_IncreaseHellcoreHeat(heatamt,1); // +1.0% Hellcore Heat, Deal Damage if already above 100% Heat
		if (usetension) CallACS("StartTensionCountDown");

		if (A_HellCoreCrisisCheck() > 0)
		{
			A_PlayCrisisAtkSound();
			A_SpreadAuraFireProjectile(name2,0,0,"",0,0,0,0); 
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 4) 
			{
				A_SpreadAuraFireProjectile(name2,0-15,0,"",0,0,0,0); 
				A_SpreadAuraFireProjectile(name2,0+15,0,"",0,0,0,0); 
			}
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 7) 
			{
				A_SpreadAuraFireProjectile(name2,0-30,0,"",0,0,0,0); 
				A_SpreadAuraFireProjectile(name2,0+30,0,"",0,0,0,0); 
			}
		}
		else
		{
			A_SpreadAuraFireProjectile(name1,0,0,"",0,0,0,0); 
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 4) 
			{
				A_SpreadAuraFireProjectile(name1,0-15,0,"",0,0,0,0); 
				A_SpreadAuraFireProjectile(name1,0+15,0,"",0,0,0,0); 
			}
			if (CallACS("MiscVarCheckDECORATE",checknum) >= 7) 
			{
				A_SpreadAuraFireProjectile(name1,0-30,0,"",0,0,0,0); 
				A_SpreadAuraFireProjectile(name1,0+30,0,"",0,0,0,0); 
			}
		}
	}

	States
	{
		// Dummy Layers
		Dummy:
			HCL1 A 0;
			HCL1 B 0;
			HCL1 C 0;
			HCL1 D 0;
			HCL1 E 0;
			HCL1 F 0;
			HCL1 G 0;
			HCL1 H 0;
			HCL1 I 0;
			HCL1 J 0;
			HCL1 K 0;
			HCL1 L 0;
			HCL1 M 0;
			HCL1 N 0;
			HCL1 O 0;
			HCL1 P 0;
			HCL1 Q 0;
			HCL1 R 0;
			HCL1 S 0;
			HCL1 T 0;
			HCL1 U 0;
			HCL1 V 0;
			HCL2 A 0;
			HCL2 B 0;
			HCL3 A 0;
			HCL3 B 0;
			HCL3 C 0;
			HCL3 D 0;
			HCL3 E 0;
			HCL3 F 0;
			HCL3 G 0;
			HCL3 H 0;
			HCL3 I 0;
			HCL3 J 0;
			HCL3 K 0;
			HCL3 L 0;
			HCL3 M 0;
			HCL3 N 0;
			HCL3 O 0;
			HCL3 P 0;
			HCL3 Q 0;
			HCL4 A 0;
			HCL4 B 0;
			HCL4 C 0;
			HCL4 D 0;
			HCL4 E 0;
			HCL4 F 0;
			stop;

		// Bonus Layers
		SoulOverLayer: // Layer 5
			HCL2 A 0 
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, true); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(5, STYLE_Translucent); 
			}
			HCL2 A 1 { A_OverlayAlpha(5, 0.125); }
			HCL2 A 1 { A_OverlayAlpha(5, 0.25); }
			HCL2 A 1 { A_OverlayAlpha(5, 0.375); }
			HCL2 A 1 { A_OverlayAlpha(5, 0.5); }
			HCL2 A 1 { A_OverlayAlpha(5, 0.625); }
			HCL2 A 1 { A_OverlayAlpha(5, 0.75); }
			HCL2 A 1 { A_OverlayAlpha(5, 0.875); }
			HCL2 A 1 { A_OverlayAlpha(5, 1.0); }
			HCL2 A 0
			{ 
				A_OverlayFlags(5, PSPF_ALPHA, false); 
				A_OverlayFlags(5, PSPF_RENDERSTYLE, false); 
				A_OverlayRenderStyle(5, STYLE_Normal); 
			}
		SoulOverLayer2: // Layer 5
			HCL2 A 1;
			loop;
		SoulUnderLayer: // Layer 3
			HCL2 A 0 
			{ 
				A_OverlayFlags(3, PSPF_ALPHA, true); 
				A_OverlayFlags(3, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(3, STYLE_Translucent); 
			}
			HCL2 A 1 { A_OverlayAlpha(3, 0.125); }
			HCL2 A 1 { A_OverlayAlpha(3, 0.25); }
			HCL2 A 1 { A_OverlayAlpha(3, 0.375); }
			HCL2 A 1 { A_OverlayAlpha(3, 0.5); }
			HCL2 A 1 { A_OverlayAlpha(3, 0.625); }
			HCL2 A 1 { A_OverlayAlpha(3, 0.75); }
			HCL2 A 1 { A_OverlayAlpha(3, 0.875); }
			HCL2 A 1 { A_OverlayAlpha(3, 1.0); }
			HCL2 A 0 
			{ 
				A_OverlayFlags(3, PSPF_ALPHA, false); 
				A_OverlayFlags(3, PSPF_RENDERSTYLE, false); 
				A_OverlayRenderStyle(3, STYLE_Normal); 
			}
		SoulUnderLayer2: // Layer 3
			HCL2 B 1;
			loop;
		SoulImage: // Layer 4
			HCL3 A 0 
			{ 
				A_OverlayFlags(4, PSPF_ALPHA, true); 
				A_OverlayFlags(4, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(4, STYLE_Translucent); 
			}
			HCL3 A 1 { A_OverlayAlpha(4, 0.125); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.25); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.375); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.5); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.625); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.75); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.875); }
			HCL3 A 1 { A_OverlayAlpha(4, 1.0); }
			HCL3 A 0 
			{ 
				A_OverlayFlags(4, PSPF_ALPHA, false); 
				A_OverlayFlags(4, PSPF_RENDERSTYLE, false); 
				A_OverlayRenderStyle(4, STYLE_Normal); 
			}
		SoulImage2: // Layer 4
			HCL3 A 1;
			loop;
		SoulSpark: // Layer 6
			HCL4 ABCDEFEDCBA 1;
			stop;
		EndLayer:
			TNT1 A 0;
			stop;

		// 
		Ready:
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			loop;
		Deselect: 
			HCL1 A 1
			{
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;
		Fire:
			HCL1 A 1;
			goto Ready;

		// Quick Kick
		User1: // Kick - Most Weapons
			TNT1 A 0 
			{
				A_Overlay(-2,"Kick",true);
			}
			goto Ready;

		Kick:
			TNT1 A 0
			{
				if (A_UseStaminaAttack(A_GetKickStaminaUse(0),2) == 0) { return resolvestate("KickEnd"); }
				return resolvestate(null); 
			}
			TNT1 A 0
			{
				A_GunFlash("LightDone",GFF_NOEXTCHANGE); // A_ClearFlash;
				if (random(1,256) >= 253)
				{
					if (CountInv("PlayingStrife",AAPTR_PLAYER1) > 0) { } // Strife mode makes the punch work like the Punch Dagger where it NEVER makes sound
					else { A_AlertMonsters(); } // Sometimes a swing will be enough to wake up all monsters in the area.
				}
				CallACS("StartTensionCountDown");
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) { A_GiveInventory("KickAttackDEFLvl2",1); } else { A_GiveInventory("KickAttackDEFLvl1",1); }
				A_SetMartialArtsMastery(1);
				if (random(1,256) > 64) { A_GiveInventory("KickCritBonus1",1,AAPTR_PLAYER1); } else { A_GiveInventory("KickCritBonus2",1,AAPTR_PLAYER1); }
				A_GiveInventory("UsingMeleeAttack",1);
			}
			goto KickStart;
		KickStart: // 15 Tics (7 (MAMlv3), 3 (MAMlv5))
			FKIC A 1 
			{
				A_SceptreShieldOff();
				CallACS("MiscVarSetDECORATE",397,0);
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) // -1
				{
					A_SetTics(0); 
				}
			}
			FKIC B 1
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) // -1
				{
					A_SetTics(0); 
				} 
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) { A_StartSound("fistswingheavy0",1); } else { A_StartSound("fistswingmedium0",1); }
			}
			FKIC C 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) 
				{ 
					A_SetTics(0); 
				}

				if (GetCVar("dvds_florahokutolol") > 0 && CallACS("MiscVarCheckDECORATE",10035) >= 4)
				{
					if (random(1,256) >= 1) { A_StartSound("FloraHokutoLol",CHAN_VOICE); }
				}
				else
				{
					if (random(1,256) >= (128 + (CallACS("MiscVarCheckDECORATE",10035)) * 10)) { A_StopSound(CHAN_VOICE); A_StartSound("FloraKiaiFull",CHAN_VOICE); } 
				}
			}
			FKIC D 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) == 2 || CallACS("MiscVarCheckDECORATE",10035) == 4) 
				{
					A_SetTics(0); 
				}
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
			}
			FKIC E 1
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) 
				{
					A_SetTics(0); 
				} 
			}
			FKIC F 1
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) 
				{
					A_SetTics(0); 
				} 
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
			}
			FKIC G 1 
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) 
				{
					A_SetTics(0); 
				} 
			}
			FKIC H 1
			{
				A_GetKickSwingRecoil(0);
				A_SpreadAuraCustomPunch(A_GetKickDamage(0),1,CPF_NOTURN,"KickPuff",A_GetMeleeRange(4),0,0,"","","");
	
				if (A_CheckMeleeDestroyProj(0) > 0)
				{
					if (CallACS("MiscVarCheckDECORATE",10035) >= 5)
					{
						if (random(1,8) <= 3)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,56);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,88);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,56);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,88);
						}
					}
					else
					{
						if (random(1,8) <= 1)
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,56);
							A_MeleeShieldPiece("ShieldPartPunchAttackReflect",33,88);
						}
						else
						{
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,24);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,56);
							A_MeleeShieldPiece("ShieldPartPunchAttackNoReflect",33,88);
						}
					}
				}
			}
			FKIC G 1 
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) 
				{
					A_SetTics(0); 
				} 
			}
			FKIC F 1
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) 
				{
					A_SetTics(0); 
				} 
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
			}
			FKIC E 1
			{ 
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) 
				{
					A_SetTics(0); 
				} 
			}
			FKIC D 1 
			{
				if ((CallACS("MiscVarCheckDECORATE",10035) >= 1 && CallACS("MiscVarCheckDECORATE",10035) <= 2) || CallACS("MiscVarCheckDECORATE",10035) == 4) 
				{ 
					A_SetTics(0); 
				} 
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
			}
			FKIC C 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) // -1
				{
					A_SetTics(0); 
				}
			}
			FKIC B 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 5) // -1
				{
					A_SetTics(0); 
				} 
				else
				{
					if (A_WeaponCheckDoubleFireRate() > 0)
					{
						A_SetTics(0); 
					}
				}
			}
			FKIC A 1 
			{
				if (CallACS("MiscVarCheckDECORATE",10035) >= 3) // -1
				{
					A_SetTics(0); 
				}
			}
		// KICK END
		KickEnd:
			TNT1 A 0
			{
				A_KickBonusOff();
				A_SetMartialArtsMastery(0);
			}
			stop;
	}
}

class ImpSoul : BaseHellcoreWeapon
{
	Default
	{
		//$Sprite "HLC2A0"
		Scale 0.625;
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOALERT;
		Inventory.PickupMessage "You got an Imp's Soul! \cx[Slot 4]\c-";
		Tag "Imp's Soul";
	}

	States
	{
		// Bonus Layers
		SoulImage: // Layer 4
			HCL3 A 0 
			{ 
				A_OverlayFlags(4, PSPF_ALPHA, true); 
				A_OverlayFlags(4, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(4, STYLE_Translucent); 
			}
			HCL3 A 1 { A_OverlayAlpha(4, 0.125); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.25); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.375); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.5); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.625); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.75); }
			HCL3 A 1 { A_OverlayAlpha(4, 0.875); }
			HCL3 A 1 { A_OverlayAlpha(4, 1.0); }
			HCL3 A 0 
			{ 
				A_OverlayFlags(4, PSPF_ALPHA, false); 
				A_OverlayFlags(4, PSPF_RENDERSTYLE, false); 
				A_OverlayRenderStyle(4, STYLE_Normal); 
			}
		SoulImage2: // Layer 4
			HCL3 A 1;
			loop;
			
		Spawn:
			HLC2 A 1 bright NoDelay;
			Loop;

		Ready: 
			HCL1 A 0
			{
				A_Overlay(3,"SoulUnderLayer",true);
				A_Overlay(4,"SoulImage",true);
				A_Overlay(5,"SoulOverLayer",true);
			}
		Idle: 
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			Loop;
		Deselect: 
			HCL1 A 1
			{
				A_Overlay(3,"EndLayer",false);
				A_Overlay(4,"EndLayer",false);
				A_Overlay(5,"EndLayer",false);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_Overlay(3,"EndLayer",false);
				A_Overlay(4,"EndLayer",false);
				A_Overlay(5,"EndLayer",false);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;

		Fire:
			HCL1 CD 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			HCL1 D 0
			{
				if (random(1,2) == 1) { return resolvestate("Fire2"); }
				else { return resolvestate("Fire1"); }
				return resolvestate(null);
			}
		Fire1:
			HCL1 E 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim1:
			HCL1 F 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		FireFrame1:
			HCL1 G 4 
			{
				A_Overlay(6,"SoulSpark",false);
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_HellSoulFire1("imp/attack",100,"DoomImpBall-Claw","DoomImpBallCrisis-Claw",96,true);
			}
			goto PostFire1;
		PostFire1:
			HCL1 H 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 E 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim1"); }
				else { A_Refire("ReFireAnim2"); }
			}
			goto FireEnd;

		Fire2:
			HCL1 I 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim2:
			HCL1 J 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		FireFrame2:
			HCL1 K 4 
			{
				A_Overlay(6,"SoulSpark",false);
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_HellSoulFire1("imp/attack",100,"DoomImpBall-Claw","DoomImpBallCrisis-Claw",96,true);
			}
			goto PostFire2;
		PostFire2:
			HCL1 L 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 I 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim2"); }
				else { A_Refire("ReFireAnim1"); }
			}
			goto FireEnd;

		FireEnd:
			HCL1 DC 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			Goto Ready;
	}
}

class DarkImpSoul : BaseHellcoreWeapon
{
	Default
	{
		//$Sprite "HLC2A0"
		Scale 0.625;
		+FLOATBOB;
		+DONTGIB;
		+INVENTORY.ALWAYSPICKUP;
		+WEAPON.NOAUTOAIM;
		+WEAPON.NOALERT;
		Inventory.PickupMessage "You got a Dark Imp's Soul! \cx[Slot 4]\c-";
		Tag "Dark Imp's Soul";
	}

	States
	{
		// Bonus Layers
		SoulImage: // Layer 4
			HCL3 B 0 
			{ 
				A_OverlayFlags(4, PSPF_ALPHA, true); 
				A_OverlayFlags(4, PSPF_RENDERSTYLE, true); 
				A_OverlayRenderStyle(4, STYLE_Translucent); 
			}
			HCL3 B 1 { A_OverlayAlpha(4, 0.125); }
			HCL3 B 1 { A_OverlayAlpha(4, 0.25); }
			HCL3 B 1 { A_OverlayAlpha(4, 0.375); }
			HCL3 B 1 { A_OverlayAlpha(4, 0.5); }
			HCL3 B 1 { A_OverlayAlpha(4, 0.625); }
			HCL3 B 1 { A_OverlayAlpha(4, 0.75); }
			HCL3 B 1 { A_OverlayAlpha(4, 0.875); }
			HCL3 B 1 { A_OverlayAlpha(4, 1.0); }
			HCL3 B 0 
			{ 
				A_OverlayFlags(4, PSPF_ALPHA, false); 
				A_OverlayFlags(4, PSPF_RENDERSTYLE, false); 
				A_OverlayRenderStyle(4, STYLE_Normal); 
			}
		SoulImage2: // Layer 4
			HCL3 B 1;
			loop;
			
		Spawn:
			HLC2 B 1 bright NoDelay;
			Loop;

		Ready: 
			HCL1 A 0
			{
				A_Overlay(3,"SoulUnderLayer",true);
				A_Overlay(4,"SoulImage",true);
				A_Overlay(5,"SoulOverLayer",true);
			}
		Idle: 
			HCL1 B 1 A_WeaponReady(WRF_ALLOWUSER1);
			Loop;
		Deselect: 
			HCL1 A 1
			{
				A_Overlay(3,"EndLayer",false);
				A_Overlay(4,"EndLayer",false);
				A_Overlay(5,"EndLayer",false);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSLower(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSLower(18);
			}
			Loop;
		Select: 
			HCL1 A 1 
			{
				A_Overlay(3,"EndLayer",false);
				A_Overlay(4,"EndLayer",false);
				A_Overlay(5,"EndLayer",false);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10033)*3);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10034)*7.5);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10035)*2);
				A_DVDSRaise(CallACS("MiscVarCheckDECORATE",10036)*5);
				A_DVDSRaise(18);
			}
			Loop;

		Fire:
			HCL1 CD 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			HCL1 D 0
			{
				if (random(1,2) == 1) { return resolvestate("Fire2"); }
				else { return resolvestate("Fire1"); }
				return resolvestate(null);
			}
		Fire1:
			HCL1 E 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim1:
			HCL1 F 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		FireFrame1:
			HCL1 G 4 
			{
				A_Overlay(6,"SoulSpark",false);
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_HellSoulFire1("imp/attack",250,"DarkSeeker-Claw","DarkSeekerCrisis-Claw",97,true);
			}
			goto PostFire1;
		PostFire1:
			HCL1 H 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 E 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim1"); }
				else { A_Refire("ReFireAnim2"); }
			}
			goto FireEnd;

		Fire2:
			HCL1 I 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		ReFireAnim2:
			HCL1 J 4 
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
		FireFrame2:
			HCL1 K 4 
			{
				A_Overlay(6,"SoulSpark",false);
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
				A_HellSoulFire1("imp/attack",250,"DarkSeeker-Claw","DarkSeekerCrisis-Claw",97,true);
			}
			goto PostFire2;
		PostFire2:
			HCL1 L 4
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(3); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 4) { A_SetTics(2); }
			}
			HCL1 I 0
			{
				if (random(1,6) == 1) { A_Refire("ReFireAnim2"); }
				else { A_Refire("ReFireAnim1"); }
			}
			goto FireEnd;

		FireEnd:
			HCL1 DC 3
			{
				if (CallACS("MiscVarCheckDECORATE",10033) >= 2) { A_SetTics(2); }
				if (CallACS("MiscVarCheckDECORATE",10033) >= 5) { A_SetTics(1); }
			}
			Goto Ready;
	}
}